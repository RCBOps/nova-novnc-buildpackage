--- a/LICENSE.txt
+++ b/LICENSE.txt
@@ -1,14 +1,6 @@
-noVNC is Copyright (C) 2011 Joel Martin <github@martintribe.org>
+noVNC is licensed under the LGPL version 3 (see docs/LICENSE.GPL-3 and
+docs/LICENSE.LGPL-3) with the following exceptions:
 
-Some portions of noVNC are copyright to their individual authors.
-Please refer to the individual source files and/or to the noVNC commit
-history: https://github.com/kanaka/noVNC/commits/master
-
-noVNC is licensed under the LGPL (GNU Lesser General Public License)
-version 3 with the following exceptions:
-
-    include/input.js           : LGPL-2 or any later version
-   
     include/base64.js          : Dual GPL-2 or LGPL-2.1
    
     incluee/des.js             : Various BSD style licenses
@@ -20,11 +12,3 @@
                                  http://creativecommons.org/licenses/by-sa/3.0/
                                  Uses of the work must be attributed
                                  to the noVNC project.
-
-The LGPL-3 license text is included at:
-    docs/LICENSE.LGPL-3 and
-    docs/LICENSE.GPL-3
-
-Or alternatively the LGPL-3 license text may be found here:
-    http://www.gnu.org/licenses/lgpl.html and
-    http://www.gnu.org/licenses/gpl.html
--- a/README.md
+++ b/README.md
@@ -11,9 +11,6 @@
 Special thanks to [Sentry Data Systems](http://www.sentryds.com) for
 sponsoring ongoing development of this project (and for employing me).
 
-There are many companies/projects that have integrated noVNC into
-their products including: [Sentry Data Systems](http://www.sentryds.com), [Ganeti Web Manager](http://code.osuosl.org/projects/ganeti-webmgr), [Archipel](http://archipelproject.org), [openQRM](http://www.openqrm.com/), [OpenNode](http://www.opennodecloud.com/), [OpenStack](http://www.openstack.org), [Broadway (HTML5 GDK/GTK+ backend)](http://blogs.gnome.org/alexl/2011/03/15/gtk-html-backend-update/), [OpenNebula](http://opennebula.org/), [CloudSigma](http://www.cloudsigma.com/), [Zentyal (formerly eBox)](http://www.zentyal.org/), and [SlapOS](http://www.slapos.org). See [this wiki page](https://github.com/kanaka/noVNC/wiki/ProjectsCompanies-using-noVNC) for more info and links.
-
 Notable commits, announcements and news are posted to
 @<a href="http://www.twitter.com/noVNC">noVNC</a>
 
@@ -27,6 +24,26 @@
 See more screenshots <a href="http://kanaka.github.com/noVNC/screenshots.html">here</a>.
 
 
+### Projects/Companies using noVNC
+
+* [Sentry Data Systems](http://www.sentryds.com): uses noVNC in the
+  [Datanex Cloud Computing Platform](http://www.sentryds.com/products/datanex/).
+
+* [Ganeti Web Manager](http://code.osuosl.org/projects/ganeti-webmgr):
+  Feature [#1935](http://code.osuosl.org/issues/1935).
+
+* [Archipel](http://archipelproject.org):
+  [Video demo](http://antoinemercadal.fr/archipelblog/wp-content/themes/ArchipelWPTemplate/video_youtube.php?title=VNC%20Demonstration&id=te_bzW574Zo)
+
+* [openQRM](http://www.openqrm.com/): VNC plugin available
+  by request. Probably included in [version
+  4.8](http://www.openqrm.com/?q=node/15). [Video
+    demo](http://www.openqrm-enterprise.com/news/details/article/remote-vm-console-plugin-available.html).
+
+* [OpenNode](http://www.opennodecloud.com/): uses noVNC in
+  [OpenNode Management Console](http://opennode.activesys.org/about/software-included-in-opennode/).
+  [OMC Screencast](http://opennode.activesys.org/about/opennode-management-console-screencast/).
+
 ### Browser Requirements
 
 * HTML5 Canvas: Except for Internet Explorer, most
@@ -44,7 +61,7 @@
   mean noVNC is painfully slow.
 
 * I maintain a more detailed list of browser compatibility <a
-  href="https://github.com/kanaka/noVNC/wiki/Browser-support">here</a>.
+  href="wiki/Browser-support">here</a>.
 
 
 ### Server Requirements
@@ -83,11 +100,11 @@
 
 ### Other Pages
 
-* [Advanced Usage](https://github.com/kanaka/noVNC/wiki/Advanced-usage). Generating an SSL
+* [Advanced Usage](wiki/Advanced-usage). Generating an SSL
   certificate, starting a VNC server, advanced websockify usage, etc.
 
-* [Integrating noVNC](https://github.com/kanaka/noVNC/wiki/Integration) into existing projects.
+* [Integrating noVNC](wiki/Integration) into existing projects.
 
-* [Troubleshooting noVNC](https://github.com/kanaka/noVNC/wiki/Troubleshooting) problems.
+* [Troubleshooting noVNC](wiki/Troubleshooting) problems.
 
 
--- a/docs/VERSION
+++ /dev/null
@@ -1 +0,0 @@
-0.1
--- a/docs/packaging.txt
+++ /dev/null
@@ -1,23 +0,0 @@
-noVNC packaging steps for Debian/Ubuntu:
-
-- Update the noVNC version in docs/VERSION and add a new entry for the
-  version in debian/changelog
-
-- Rename the novnc source directory to match the form "novnc-VERSION".
-
-- In the novnc source directory, run the packaging command:
-
-    debuild -I -uc -us
-
-    - The -I option ignores the .git directory when generating the
-      source tarball.
-    - the -uc and -us may be omitted in order to create a signed
-      package.
-
-    - Alternatively, use pbuilder instead of debuild in order to build
-      for other distributions and to guarantee a sanitized package.
-
-- Verify the package and then commit the changes to docs/VERSION and
-  debian/changelog.
-
-- Upload the new package file(s).
--- a/include/base64.js
+++ b/include/base64.js
@@ -41,6 +41,7 @@
  *
  * ***** END LICENSE BLOCK ***** */
 
+"use strict";
 /*jslint white: false, bitwise: false, plusplus: false */
 /*global console */
 
@@ -51,7 +52,6 @@
 base64Pad     : '=',
 
 encode: function (data) {
-    "use strict";
     var result = '',
         chrTable = Base64.toBase64Table.split(''),
         pad = Base64.base64Pad,
@@ -95,7 +95,6 @@
 ],
 
 decode: function (data, offset) {
-    "use strict";
     offset = typeof(offset) !== 'undefined' ? offset : 0;
     var binTable = Base64.toBinaryTable,
         pad = Base64.base64Pad,
--- /dev/null
+++ b/include/canvas.js
@@ -0,0 +1,837 @@
+/*
+ * noVNC: HTML5 VNC client
+ * Copyright (C) 2010 Joel Martin
+ * Licensed under LGPL-3 (see LICENSE.txt)
+ *
+ * See README.md for usage and integration instructions.
+ */
+
+/*jslint browser: true, white: false, bitwise: false */
+/*global window, Util, Base64, changeCursor, getKeysym */
+
+function Canvas(conf) {
+    "use strict";
+
+conf               = conf || {}; // Configuration
+var that           = {},         // Public API interface
+
+    // Private Canvas namespace variables
+    c_forceCanvas  = false,
+
+    c_width        = 0,
+    c_height       = 0,
+
+    c_prevStyle    = "",
+
+    c_keyPress     = null,
+    c_mouseButton  = null,
+    c_mouseMove    = null,
+
+    c_webkit_bug   = false,
+    c_flush_timer  = null;
+
+// Configuration settings
+function cdef(v, type, defval, desc) {
+    Util.conf_default(conf, that, v, type, defval, desc); }
+
+// Capability settings, default can be overridden
+cdef('prefer_js',      'raw', null, 'Prefer Javascript over canvas methods');
+cdef('cursor_uri',     'raw', null, 'Can we render cursor using data URI');
+
+cdef('target',         'dom',  null, 'Canvas element for VNC viewport');
+cdef('focusContainer', 'dom',  document, 'DOM element that traps keyboard input');
+cdef('true_color',     'bool', true, 'Request true color pixel data');
+cdef('focused',        'bool', true, 'Capture and send key strokes');
+cdef('colourMap',      'raw',  [], 'Colour map array (not true color)');
+cdef('scale',          'float', 1, 'VNC viewport scale factor');
+
+cdef('render_mode',    'str', '', 'Canvas rendering mode (read-only)');
+
+// Override some specific getters/setters
+that.set_prefer_js = function(val) {
+    if (val && c_forceCanvas) {
+        Util.Warn("Preferring Javascript to Canvas ops is not supported");
+        return false;
+    }
+    conf.prefer_js = val;
+    return true;
+};
+
+that.get_colourMap = function(idx) {
+    if (typeof idx === 'undefined') {
+        return conf.colourMap;
+    } else {
+        return conf.colourMap[idx];
+    }
+};
+
+that.set_colourMap = function(val, idx) {
+    if (typeof idx === 'undefined') {
+        conf.colourMap = val;
+    } else {
+        conf.colourMap[idx] = val;
+    }
+};
+
+that.set_render_mode = function () { throw("render_mode is read-only"); };
+
+// Add some other getters/setters
+that.get_width = function() {
+    return c_width;
+};
+that.get_height = function() {
+    return c_height;
+};
+
+//
+// Private functions
+//
+
+// Create the public API interface
+function constructor() {
+    Util.Debug(">> Canvas.init");
+
+    var c, ctx, func, origfunc, imgTest, tval, i, curDat, curSave,
+        has_imageData = false, UE = Util.Engine;
+
+    if (! conf.target) { throw("target must be set"); }
+
+    if (typeof conf.target === 'string') {
+        throw("target must be a DOM element");
+    }
+
+    c = conf.target;
+
+    if (! c.getContext) { throw("no getContext method"); }
+
+    if (! conf.ctx) { conf.ctx = c.getContext('2d'); }
+    ctx = conf.ctx;
+
+    Util.Debug("User Agent: " + navigator.userAgent);
+    if (UE.gecko) { Util.Debug("Browser: gecko " + UE.gecko); }
+    if (UE.webkit) { Util.Debug("Browser: webkit " + UE.webkit); }
+    if (UE.trident) { Util.Debug("Browser: trident " + UE.trident); }
+    if (UE.presto) { Util.Debug("Browser: presto " + UE.presto); }
+
+    that.clear();
+
+    /*
+     * Determine browser Canvas feature support
+     * and select fastest rendering methods
+     */
+    tval = 0;
+    try {
+        imgTest = ctx.getImageData(0, 0, 1,1);
+        imgTest.data[0] = 123;
+        imgTest.data[3] = 255;
+        ctx.putImageData(imgTest, 0, 0);
+        tval = ctx.getImageData(0, 0, 1, 1).data[0];
+        if (tval === 123) {
+            has_imageData = true;
+        }
+    } catch (exc1) {}
+
+    if (has_imageData) {
+        Util.Info("Canvas supports imageData");
+        c_forceCanvas = false;
+        if (ctx.createImageData) {
+            // If it's there, it's faster
+            Util.Info("Using Canvas createImageData");
+            conf.render_mode = "createImageData rendering";
+            that.imageData = that.imageDataCreate;
+        } else if (ctx.getImageData) {
+            // I think this is mostly just Opera
+            Util.Info("Using Canvas getImageData");
+            conf.render_mode = "getImageData rendering";
+            that.imageData = that.imageDataGet;
+        }
+        Util.Info("Prefering javascript operations");
+        if (conf.prefer_js === null) {
+            conf.prefer_js = true;
+        }
+        that.rgbxImage = that.rgbxImageData;
+        that.cmapImage = that.cmapImageData;
+    } else {
+        Util.Warn("Canvas lacks imageData, using fillRect (slow)");
+        conf.render_mode = "fillRect rendering (slow)";
+        c_forceCanvas = true;
+        conf.prefer_js = false;
+        that.rgbxImage = that.rgbxImageFill;
+        that.cmapImage = that.cmapImageFill;
+    }
+
+    if (UE.webkit && UE.webkit >= 534.7 && UE.webkit <= 534.9) {
+        // Workaround WebKit canvas rendering bug #46319
+        conf.render_mode += ", webkit bug workaround";
+        Util.Debug("Working around WebKit bug #46319");
+        c_webkit_bug = true;
+        for (func in {"fillRect":1, "copyImage":1, "rgbxImage":1,
+                "cmapImage":1, "blitStringImage":1}) {
+            that[func] = (function() {
+                var myfunc = that[func]; // Save original function
+                //Util.Debug("Wrapping " + func);
+                return function() {
+                    myfunc.apply(this, arguments);
+                    if (!c_flush_timer) {
+                        c_flush_timer = setTimeout(that.flush, 100);
+                    }
+                };
+            }());
+        }
+    }
+
+    /*
+     * Determine browser support for setting the cursor via data URI
+     * scheme
+     */
+    curDat = [];
+    for (i=0; i < 8 * 8 * 4; i += 1) {
+        curDat.push(255);
+    }
+    try {
+        curSave = c.style.cursor;
+        changeCursor(conf.target, curDat, curDat, 2, 2, 8, 8);
+        if (c.style.cursor) {
+            if (conf.cursor_uri === null) {
+                conf.cursor_uri = true;
+            }
+            Util.Info("Data URI scheme cursor supported");
+        } else {
+            if (conf.cursor_uri === null) {
+                conf.cursor_uri = false;
+            }
+            Util.Warn("Data URI scheme cursor not supported");
+        }
+        c.style.cursor = curSave;
+    } catch (exc2) { 
+        Util.Error("Data URI scheme cursor test exception: " + exc2);
+        conf.cursor_uri = false;
+    }
+
+    conf.focused = true;
+
+    Util.Debug("<< Canvas.init");
+    return that ;
+}
+
+function onMouseButton(e, down) {
+    var evt, pos, bmask;
+    if (! conf.focused) {
+        return true;
+    }
+    evt = (e ? e : window.event);
+    pos = Util.getEventPosition(e, conf.target, conf.scale);
+    bmask = 1 << evt.button;
+    //Util.Debug('mouse ' + pos.x + "," + pos.y + " down: " + down + " bmask: " + bmask);
+    if (c_mouseButton) {
+        c_mouseButton(pos.x, pos.y, down, bmask);
+    }
+    Util.stopEvent(e);
+    return false;
+}
+
+function onMouseDown(e) {
+    onMouseButton(e, 1);
+}
+
+function onMouseUp(e) {
+    onMouseButton(e, 0);
+}
+
+function onMouseWheel(e) {
+    var evt, pos, bmask, wheelData;
+    evt = (e ? e : window.event);
+    pos = Util.getEventPosition(e, conf.target, conf.scale);
+    wheelData = evt.detail ? evt.detail * -1 : evt.wheelDelta / 40;
+    if (wheelData > 0) {
+        bmask = 1 << 3;
+    } else {
+        bmask = 1 << 4;
+    }
+    //Util.Debug('mouse scroll by ' + wheelData + ':' + pos.x + "," + pos.y);
+    if (c_mouseButton) {
+        c_mouseButton(pos.x, pos.y, 1, bmask);
+        c_mouseButton(pos.x, pos.y, 0, bmask);
+    }
+    Util.stopEvent(e);
+    return false;
+}
+
+function onMouseMove(e) {
+    var evt, pos;
+    evt = (e ? e : window.event);
+    pos = Util.getEventPosition(e, conf.target, conf.scale);
+    //Util.Debug('mouse ' + evt.which + '/' + evt.button + ' up:' + pos.x + "," + pos.y);
+    if (c_mouseMove) {
+        c_mouseMove(pos.x, pos.y);
+    }
+}
+
+function onKeyDown(e) {
+    //Util.Debug("keydown: " + getKeysym(e));
+    if (! conf.focused) {
+        return true;
+    }
+    if (c_keyPress) {
+        c_keyPress(getKeysym(e), 1, e.ctrlKey, e.shiftKey, e.altKey);
+    }
+    Util.stopEvent(e);
+    return false;
+}
+
+function onKeyUp(e) {
+    //Util.Debug("keyup: " + getKeysym(e));
+    if (! conf.focused) {
+        return true;
+    }
+    if (c_keyPress) {
+        c_keyPress(getKeysym(e), 0, e.ctrlKey, e.shiftKey, e.altKey);
+    }
+    Util.stopEvent(e);
+    return false;
+}
+
+function onKeyPress(e) {
+    //Util.Debug("keypress: " + e.charCode);
+    if (! conf.focused) {
+        return true;
+    }
+    // Stop keypress events. Necessary for Opera because stopping
+    // keydown and keyup events still results in a keypress event.
+    Util.stopEvent(e);
+    return false;
+}
+
+function onMouseDisable(e) {
+    var evt, pos;
+    if (! conf.focused) {
+        return true;
+    }
+    evt = (e ? e : window.event);
+    pos = Util.getEventPosition(e, conf.target, conf.scale);
+    /* Stop propagation if inside canvas area */
+    if ((pos.x >= 0) && (pos.y >= 0) &&
+        (pos.x < c_width) && (pos.y < c_height)) {
+        //Util.Debug("mouse event disabled");
+        Util.stopEvent(e);
+        return false;
+    }
+    //Util.Debug("mouse event not disabled");
+    return true;
+}
+
+//
+// Public API interface functions
+//
+
+that.getContext = function () {
+    return conf.ctx;
+};
+
+that.start = function(keyPressFunc, mouseButtonFunc, mouseMoveFunc) {
+    var c;
+    Util.Debug(">> Canvas.start");
+
+    c = conf.target;
+    c_keyPress = keyPressFunc || null;
+    c_mouseButton = mouseButtonFunc || null;
+    c_mouseMove = mouseMoveFunc || null;
+
+    Util.addEvent(conf.focusContainer, 'keydown', onKeyDown);
+    Util.addEvent(conf.focusContainer, 'keyup', onKeyUp);
+    Util.addEvent(conf.focusContainer, 'keypress', onKeyPress);
+    Util.addEvent(c, 'mousedown', onMouseDown);
+    Util.addEvent(c, 'mouseup', onMouseUp);
+    Util.addEvent(c, 'mousemove', onMouseMove);
+    Util.addEvent(c, (Util.Engine.gecko) ? 'DOMMouseScroll' : 'mousewheel',
+            onMouseWheel);
+
+    /* Work around right and middle click browser behaviors */
+    Util.addEvent(conf.focusContainer, 'click', onMouseDisable);
+    Util.addEvent(conf.focusContainer.body, 'contextmenu', onMouseDisable);
+
+    Util.Debug("<< Canvas.start");
+};
+
+that.stop = function() {
+    var c = conf.target;
+    Util.removeEvent(conf.focusContainer, 'keydown', onKeyDown);
+    Util.removeEvent(conf.focusContainer, 'keyup', onKeyUp);
+    Util.removeEvent(conf.focusContainer, 'keypress', onKeyPress);
+    Util.removeEvent(c, 'mousedown', onMouseDown);
+    Util.removeEvent(c, 'mouseup', onMouseUp);
+    Util.removeEvent(c, 'mousemove', onMouseMove);
+    Util.removeEvent(c, (Util.Engine.gecko) ? 'DOMMouseScroll' : 'mousewheel',
+            onMouseWheel);
+
+    /* Work around right and middle click browser behaviors */
+    Util.removeEvent(conf.focusContainer, 'click', onMouseDisable);
+    Util.removeEvent(conf.focusContainer.body, 'contextmenu', onMouseDisable);
+
+    // Turn off cursor rendering
+    if (conf.cursor_uri) {
+        c.style.cursor = "default";
+    }
+};
+
+that.rescale = function(factor) {
+    var c, tp, x, y, 
+        properties = ['transform', 'WebkitTransform', 'MozTransform', null];
+    c = conf.target;
+    tp = properties.shift();
+    while (tp) {
+        if (typeof c.style[tp] !== 'undefined') {
+            break;
+        }
+        tp = properties.shift();
+    }
+
+    if (tp === null) {
+        Util.Debug("No scaling support");
+        return;
+    }
+
+    if (conf.scale === factor) {
+        //Util.Debug("Canvas already scaled to '" + factor + "'");
+        return;
+    }
+
+    conf.scale = factor;
+    x = c.width - c.width * factor;
+    y = c.height - c.height * factor;
+    c.style[tp] = "scale(" + conf.scale + ") translate(-" + x + "px, -" + y + "px)";
+};
+
+that.resize = function(width, height, true_color) {
+    var c = conf.target;
+
+    if (typeof true_color !== "undefined") {
+        conf.true_color = true_color;
+    }
+    c_prevStyle    = "";
+
+    c.width = width;
+    c.height = height;
+
+    c_width  = c.offsetWidth;
+    c_height = c.offsetHeight;
+
+    that.rescale(conf.scale);
+};
+
+that.clear = function() {
+    that.resize(640, 20);
+    conf.ctx.clearRect(0, 0, c_width, c_height);
+
+    // No benefit over default ("source-over") in Chrome and firefox
+    //conf.ctx.globalCompositeOperation = "copy";
+};
+
+that.flush = function() {
+    var old_val;
+    //Util.Debug(">> flush");
+    // Force canvas redraw (for webkit bug #46319 workaround)
+    old_val = conf.target.style.marginRight;
+    conf.target.style.marginRight = "1px";
+    c_flush_timer = null;
+    setTimeout(function () {
+            conf.target.style.marginRight = old_val;
+        }, 1);
+};
+
+that.setFillColor = function(color) {
+    var rgb, newStyle;
+    if (conf.true_color) {
+        rgb = color;
+    } else {
+        rgb = conf.colourMap[color[0]];
+    }
+    newStyle = "rgb(" + rgb[0] + "," + rgb[1] + "," + rgb[2] + ")";
+    if (newStyle !== c_prevStyle) {
+        conf.ctx.fillStyle = newStyle;
+        c_prevStyle = newStyle;
+    }
+};
+
+that.fillRect = function(x, y, width, height, color) {
+    that.setFillColor(color);
+    conf.ctx.fillRect(x, y, width, height);
+};
+
+that.copyImage = function(old_x, old_y, new_x, new_y, width, height) {
+    conf.ctx.drawImage(conf.target, old_x, old_y, width, height,
+                                       new_x, new_y, width, height);
+};
+
+/*
+ * Tile rendering functions optimized for rendering engines.
+ *
+ * - In Chrome/webkit, Javascript image data array manipulations are
+ *   faster than direct Canvas fillStyle, fillRect rendering. In
+ *   gecko, Javascript array handling is much slower.
+ */
+that.getTile = function(x, y, width, height, color) {
+    var img, data = [], p, rgb, red, green, blue, j, i;
+    img = {'x': x, 'y': y, 'width': width, 'height': height,
+           'data': data};
+    if (conf.prefer_js) {
+        if (conf.true_color) {
+            rgb = color;
+        } else {
+            rgb = conf.colourMap[color[0]];
+        }
+        red = rgb[0];
+        green = rgb[1];
+        blue = rgb[2];
+        for (i = 0; i < (width * height * 4); i+=4) {
+            data[i    ] = red;
+            data[i + 1] = green;
+            data[i + 2] = blue;
+        }
+    } else {
+        that.fillRect(x, y, width, height, color);
+    }
+    return img;
+};
+
+that.setSubTile = function(img, x, y, w, h, color) {
+    var data, p, rgb, red, green, blue, width, j, i, xend, yend;
+    if (conf.prefer_js) {
+        data = img.data;
+        width = img.width;
+        if (conf.true_color) {
+            rgb = color;
+        } else {
+            rgb = conf.colourMap[color[0]];
+        }
+        red = rgb[0];
+        green = rgb[1];
+        blue = rgb[2];
+        xend = x + w;
+        yend = y + h;
+        for (j = y; j < yend; j += 1) {
+            for (i = x; i < xend; i += 1) {
+                p = (i + (j * width) ) * 4;
+                data[p    ] = red;
+                data[p + 1] = green;
+                data[p + 2] = blue;
+            }   
+        } 
+    } else {
+        that.fillRect(img.x + x, img.y + y, w, h, color);
+    }
+};
+
+that.putTile = function(img) {
+    if (conf.prefer_js) {
+        that.rgbxImage(img.x, img.y, img.width, img.height, img.data, 0);
+    } else {
+        // No-op, under gecko already done by setSubTile
+    }
+};
+
+that.imageDataGet = function(width, height) {
+    return conf.ctx.getImageData(0, 0, width, height);
+};
+that.imageDataCreate = function(width, height) {
+    return conf.ctx.createImageData(width, height);
+};
+
+that.rgbxImageData = function(x, y, width, height, arr, offset) {
+    var img, i, j, data;
+    img = that.imageData(width, height);
+    data = img.data;
+    for (i=0, j=offset; i < (width * height * 4); i=i+4, j=j+4) {
+        data[i + 0] = arr[j + 0];
+        data[i + 1] = arr[j + 1];
+        data[i + 2] = arr[j + 2];
+        data[i + 3] = 255; // Set Alpha
+    }
+    conf.ctx.putImageData(img, x, y);
+};
+
+// really slow fallback if we don't have imageData
+that.rgbxImageFill = function(x, y, width, height, arr, offset) {
+    var i, j, sx = 0, sy = 0;
+    for (i=0, j=offset; i < (width * height); i+=1, j+=4) {
+        that.fillRect(x+sx, y+sy, 1, 1, [arr[j+0], arr[j+1], arr[j+2]]);
+        sx += 1;
+        if ((sx % width) === 0) {
+            sx = 0;
+            sy += 1;
+        }
+    }
+};
+
+that.cmapImageData = function(x, y, width, height, arr, offset) {
+    var img, i, j, data, rgb, cmap;
+    img = that.imageData(width, height);
+    data = img.data;
+    cmap = conf.colourMap;
+    for (i=0, j=offset; i < (width * height * 4); i+=4, j+=1) {
+        rgb = cmap[arr[j]];
+        data[i + 0] = rgb[0];
+        data[i + 1] = rgb[1];
+        data[i + 2] = rgb[2];
+        data[i + 3] = 255; // Set Alpha
+    }
+    conf.ctx.putImageData(img, x, y);
+};
+
+that.cmapImageFill = function(x, y, width, height, arr, offset) {
+    var i, j, sx = 0, sy = 0, cmap;
+    cmap = conf.colourMap;
+    for (i=0, j=offset; i < (width * height); i+=1, j+=1) {
+        that.fillRect(x+sx, y+sy, 1, 1, [arr[j]]);
+        sx += 1;
+        if ((sx % width) === 0) {
+            sx = 0;
+            sy += 1;
+        }
+    }
+};
+
+
+that.blitImage = function(x, y, width, height, arr, offset) {
+    if (conf.true_color) {
+        that.rgbxImage(x, y, width, height, arr, offset);
+    } else {
+        that.cmapImage(x, y, width, height, arr, offset);
+    }
+};
+
+that.blitStringImage = function(str, x, y) {
+    var img = new Image();
+    img.onload = function () { conf.ctx.drawImage(img, x, y); };
+    img.src = str;
+};
+
+that.changeCursor = function(pixels, mask, hotx, hoty, w, h) {
+    if (conf.cursor_uri === false) {
+        Util.Warn("changeCursor called but no cursor data URI support");
+        return;
+    }
+
+    if (conf.true_color) {
+        changeCursor(conf.target, pixels, mask, hotx, hoty, w, h);
+    } else {
+        changeCursor(conf.target, pixels, mask, hotx, hoty, w, h, conf.colourMap);
+    }
+};
+
+return constructor();  // Return the public API interface
+
+}  // End of Canvas()
+
+
+/* Set CSS cursor property using data URI encoded cursor file */
+function changeCursor(target, pixels, mask, hotx, hoty, w, h, cmap) {
+    var cur = [], rgb, IHDRsz, RGBsz, ANDsz, XORsz, url, idx, alpha, x, y;
+    //Util.Debug(">> changeCursor, x: " + hotx + ", y: " + hoty + ", w: " + w + ", h: " + h);
+    
+    // Push multi-byte little-endian values
+    cur.push16le = function (num) {
+        this.push((num     ) & 0xFF,
+                  (num >> 8) & 0xFF  );
+    };
+    cur.push32le = function (num) {
+        this.push((num      ) & 0xFF,
+                  (num >>  8) & 0xFF,
+                  (num >> 16) & 0xFF,
+                  (num >> 24) & 0xFF  );
+    };
+
+    IHDRsz = 40;
+    RGBsz = w * h * 4;
+    XORsz = Math.ceil( (w * h) / 8.0 );
+    ANDsz = Math.ceil( (w * h) / 8.0 );
+
+    // Main header
+    cur.push16le(0);      // 0: Reserved
+    cur.push16le(2);      // 2: .CUR type
+    cur.push16le(1);      // 4: Number of images, 1 for non-animated ico
+
+    // Cursor #1 header (ICONDIRENTRY)
+    cur.push(w);          // 6: width
+    cur.push(h);          // 7: height
+    cur.push(0);          // 8: colors, 0 -> true-color
+    cur.push(0);          // 9: reserved
+    cur.push16le(hotx);   // 10: hotspot x coordinate
+    cur.push16le(hoty);   // 12: hotspot y coordinate
+    cur.push32le(IHDRsz + RGBsz + XORsz + ANDsz);
+                          // 14: cursor data byte size
+    cur.push32le(22);     // 18: offset of cursor data in the file
+
+
+    // Cursor #1 InfoHeader (ICONIMAGE/BITMAPINFO)
+    cur.push32le(IHDRsz); // 22: Infoheader size
+    cur.push32le(w);      // 26: Cursor width
+    cur.push32le(h*2);    // 30: XOR+AND height
+    cur.push16le(1);      // 34: number of planes
+    cur.push16le(32);     // 36: bits per pixel
+    cur.push32le(0);      // 38: Type of compression
+
+    cur.push32le(XORsz + ANDsz); // 43: Size of Image
+                                 // Gimp leaves this as 0
+
+    cur.push32le(0);      // 46: reserved
+    cur.push32le(0);      // 50: reserved
+    cur.push32le(0);      // 54: reserved
+    cur.push32le(0);      // 58: reserved
+
+    // 62: color data (RGBQUAD icColors[])
+    for (y = h-1; y >= 0; y -= 1) {
+        for (x = 0; x < w; x += 1) {
+            idx = y * Math.ceil(w / 8) + Math.floor(x/8);
+            alpha = (mask[idx] << (x % 8)) & 0x80 ? 255 : 0;
+
+            if (cmap) {
+                idx = (w * y) + x;
+                rgb = cmap[pixels[idx]];
+                cur.push(rgb[2]);          // blue
+                cur.push(rgb[1]);          // green
+                cur.push(rgb[0]);          // red
+                cur.push(alpha);           // alpha
+            } else {
+                idx = ((w * y) + x) * 4;
+                cur.push(pixels[idx + 2]); // blue
+                cur.push(pixels[idx + 1]); // green
+                cur.push(pixels[idx + 0]); // red
+                cur.push(alpha);           // alpha
+            }
+        }
+    }
+
+    // XOR/bitmask data (BYTE icXOR[])
+    // (ignored, just needs to be right size)
+    for (y = 0; y < h; y += 1) {
+        for (x = 0; x < Math.ceil(w / 8); x += 1) {
+            cur.push(0x00);
+        }
+    }
+
+    // AND/bitmask data (BYTE icAND[])
+    // (ignored, just needs to be right size)
+    for (y = 0; y < h; y += 1) {
+        for (x = 0; x < Math.ceil(w / 8); x += 1) {
+            cur.push(0x00);
+        }
+    }
+
+    url = "data:image/x-icon;base64," + Base64.encode(cur);
+    target.style.cursor = "url(" + url + ") " + hotx + " " + hoty + ", default";
+    //Util.Debug("<< changeCursor, cur.length: " + cur.length);
+}
+
+
+
+/* Translate DOM key down/up event to keysym value */
+function getKeysym(e) {
+    var evt, keysym;
+    evt = (e ? e : window.event);
+
+    /* Remap modifier and special keys */
+    switch ( evt.keyCode ) {
+        case 8         : keysym = 0xFF08; break; // BACKSPACE
+        case 9         : keysym = 0xFF09; break; // TAB
+        case 13        : keysym = 0xFF0D; break; // ENTER
+        case 27        : keysym = 0xFF1B; break; // ESCAPE
+        case 45        : keysym = 0xFF63; break; // INSERT
+        case 46        : keysym = 0xFFFF; break; // DELETE
+        case 36        : keysym = 0xFF50; break; // HOME
+        case 35        : keysym = 0xFF57; break; // END
+        case 33        : keysym = 0xFF55; break; // PAGE_UP
+        case 34        : keysym = 0xFF56; break; // PAGE_DOWN
+        case 37        : keysym = 0xFF51; break; // LEFT
+        case 38        : keysym = 0xFF52; break; // UP
+        case 39        : keysym = 0xFF53; break; // RIGHT
+        case 40        : keysym = 0xFF54; break; // DOWN
+        case 112       : keysym = 0xFFBE; break; // F1
+        case 113       : keysym = 0xFFBF; break; // F2
+        case 114       : keysym = 0xFFC0; break; // F3
+        case 115       : keysym = 0xFFC1; break; // F4
+        case 116       : keysym = 0xFFC2; break; // F5
+        case 117       : keysym = 0xFFC3; break; // F6
+        case 118       : keysym = 0xFFC4; break; // F7
+        case 119       : keysym = 0xFFC5; break; // F8
+        case 120       : keysym = 0xFFC6; break; // F9
+        case 121       : keysym = 0xFFC7; break; // F10
+        case 122       : keysym = 0xFFC8; break; // F11
+        case 123       : keysym = 0xFFC9; break; // F12
+        case 16        : keysym = 0xFFE1; break; // SHIFT
+        case 17        : keysym = 0xFFE3; break; // CONTROL
+        //case 18        : keysym = 0xFFE7; break; // Left Meta (Mac Option)
+        case 18        : keysym = 0xFFE9; break; // Left ALT (Mac Command)
+        default        : keysym = evt.keyCode; break;
+    }
+
+    /* Remap symbols */
+    switch (keysym) {
+        case 186       : keysym = 59; break; // ;  (IE)
+        case 187       : keysym = 61; break; // =  (IE)
+        case 188       : keysym = 44; break; // ,  (Mozilla, IE)
+        case 109       :                     // -  (Mozilla, Opera)
+            if (Util.Engine.gecko || Util.Engine.presto) {
+                         keysym = 45; }
+                                      break;
+        case 189       : keysym = 45; break; // -  (IE)
+        case 190       : keysym = 46; break; // .  (Mozilla, IE)
+        case 191       : keysym = 47; break; // /  (Mozilla, IE)
+        case 192       : keysym = 96; break; // `  (Mozilla, IE)
+        case 219       : keysym = 91; break; // [  (Mozilla, IE)
+        case 220       : keysym = 92; break; // \  (Mozilla, IE)
+        case 221       : keysym = 93; break; // ]  (Mozilla, IE)
+        case 222       : keysym = 39; break; // '  (Mozilla, IE)
+    }
+    
+    /* Remap shifted and unshifted keys */
+    if (!!evt.shiftKey) {
+        switch (keysym) {
+            case 48        : keysym = 41 ; break; // )  (shifted 0)
+            case 49        : keysym = 33 ; break; // !  (shifted 1)
+            case 50        : keysym = 64 ; break; // @  (shifted 2)
+            case 51        : keysym = 35 ; break; // #  (shifted 3)
+            case 52        : keysym = 36 ; break; // $  (shifted 4)
+            case 53        : keysym = 37 ; break; // %  (shifted 5)
+            case 54        : keysym = 94 ; break; // ^  (shifted 6)
+            case 55        : keysym = 38 ; break; // &  (shifted 7)
+            case 56        : keysym = 42 ; break; // *  (shifted 8)
+            case 57        : keysym = 40 ; break; // (  (shifted 9)
+
+            case 59        : keysym = 58 ; break; // :  (shifted `)
+            case 61        : keysym = 43 ; break; // +  (shifted ;)
+            case 44        : keysym = 60 ; break; // <  (shifted ,)
+            case 45        : keysym = 95 ; break; // _  (shifted -)
+            case 46        : keysym = 62 ; break; // >  (shifted .)
+            case 47        : keysym = 63 ; break; // ?  (shifted /)
+            case 96        : keysym = 126; break; // ~  (shifted `)
+            case 91        : keysym = 123; break; // {  (shifted [)
+            case 92        : keysym = 124; break; // |  (shifted \)
+            case 93        : keysym = 125; break; // }  (shifted ])
+            case 39        : keysym = 34 ; break; // "  (shifted ')
+        }
+    } else if ((keysym >= 65) && (keysym <=90)) {
+        /* Remap unshifted A-Z */
+        keysym += 32;
+    } else if (evt.keyLocation === 3) {
+        // numpad keys
+        switch (keysym) {
+            case 96 : keysym = 48; break; // 0
+            case 97 : keysym = 49; break; // 1
+            case 98 : keysym = 50; break; // 2
+            case 99 : keysym = 51; break; // 3
+            case 100: keysym = 52; break; // 4
+            case 101: keysym = 53; break; // 5
+            case 102: keysym = 54; break; // 6
+            case 103: keysym = 55; break; // 7
+            case 104: keysym = 56; break; // 8
+            case 105: keysym = 57; break; // 9
+            case 109: keysym = 45; break; // -
+            case 110: keysym = 46; break; // .
+            case 111: keysym = 47; break; // /
+        }
+    }
+
+    return keysym;
+}
+
--- a/include/display.js
+++ /dev/null
@@ -1,744 +0,0 @@
-/*
- * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
- * Licensed under LGPL-3 (see LICENSE.txt)
- *
- * See README.md for usage and integration instructions.
- */
-
-/*jslint browser: true, white: false, bitwise: false */
-/*global Util, Base64, changeCursor */
-
-function Display(defaults) {
-"use strict";
-
-var that           = {},  // Public API methods
-    conf           = {},  // Configuration attributes
-
-    // Private Display namespace variables
-    c_ctx          = null,
-    c_forceCanvas  = false,
-
-    c_imageData, c_rgbxImage, c_cmapImage,
-
-    // Predefine function variables (jslint)
-    imageDataCreate, imageDataGet, rgbxImageData, cmapImageData,
-    rgbxImageFill, cmapImageFill, setFillColor, rescale, flush,
-
-    // The full frame buffer (logical canvas) size
-    fb_width        = 0,
-    fb_height       = 0,
-    // The visible "physical canvas" viewport
-    viewport       = {'x': 0, 'y': 0, 'w' : 0, 'h' : 0 },
-    cleanRect      = {'x1': 0, 'y1': 0, 'x2': -1, 'y2': -1},
-
-    c_prevStyle    = "",
-
-    c_webkit_bug   = false,
-    c_flush_timer  = null;
-
-// Configuration attributes
-Util.conf_defaults(conf, that, defaults, [
-    ['target',      'wo', 'dom',  null, 'Canvas element for rendering'],
-    ['context',     'ro', 'raw',  null, 'Canvas 2D context for rendering (read-only)'],
-    ['logo',        'rw', 'raw',  null, 'Logo to display when cleared: {"width": width, "height": height, "data": data}'],
-    ['true_color',  'rw', 'bool', true, 'Use true-color pixel data'],
-    ['colourMap',   'rw', 'arr',  [], 'Colour map array (when not true-color)'],
-    ['scale',       'rw', 'float', 1.0, 'Display area scale factor 0.0 - 1.0'],
-    ['width',       'rw', 'int', null, 'Display area width'],
-    ['height',      'rw', 'int', null, 'Display area height'],
-
-    ['render_mode', 'ro', 'str', '', 'Canvas rendering mode (read-only)'],
-
-    ['prefer_js',   'rw', 'str', null, 'Prefer Javascript over canvas methods'],
-    ['cursor_uri',  'rw', 'raw', null, 'Can we render cursor using data URI']
-    ]);
-
-// Override some specific getters/setters
-that.get_context = function () { return c_ctx; };
-
-that.set_scale = function(scale) { rescale(scale); };
-
-that.set_width = function (val) { that.resize(val, fb_height); };
-that.get_width = function() { return fb_width; };
-
-that.set_height = function (val) { that.resize(fb_width, val); };
-that.get_height = function() { return fb_height; };
-
-that.set_prefer_js = function(val) {
-    if (val && c_forceCanvas) {
-        Util.Warn("Preferring Javascript to Canvas ops is not supported");
-        return false;
-    }
-    conf.prefer_js = val;
-    return true;
-};
-
-
-
-//
-// Private functions
-//
-
-// Create the public API interface
-function constructor() {
-    Util.Debug(">> Display.constructor");
-
-    var c, func, imgTest, tval, i, curDat, curSave,
-        has_imageData = false, UE = Util.Engine;
-
-    if (! conf.target) { throw("target must be set"); }
-
-    if (typeof conf.target === 'string') {
-        throw("target must be a DOM element");
-    }
-
-    c = conf.target;
-
-    if (! c.getContext) { throw("no getContext method"); }
-
-    if (! c_ctx) { c_ctx = c.getContext('2d'); }
-
-    Util.Debug("User Agent: " + navigator.userAgent);
-    if (UE.gecko) { Util.Debug("Browser: gecko " + UE.gecko); }
-    if (UE.webkit) { Util.Debug("Browser: webkit " + UE.webkit); }
-    if (UE.trident) { Util.Debug("Browser: trident " + UE.trident); }
-    if (UE.presto) { Util.Debug("Browser: presto " + UE.presto); }
-
-    that.clear();
-
-    /*
-     * Determine browser Canvas feature support
-     * and select fastest rendering methods
-     */
-    tval = 0;
-    try {
-        imgTest = c_ctx.getImageData(0, 0, 1,1);
-        imgTest.data[0] = 123;
-        imgTest.data[3] = 255;
-        c_ctx.putImageData(imgTest, 0, 0);
-        tval = c_ctx.getImageData(0, 0, 1, 1).data[0];
-        if (tval === 123) {
-            has_imageData = true;
-        }
-    } catch (exc1) {}
-
-    if (has_imageData) {
-        Util.Info("Canvas supports imageData");
-        c_forceCanvas = false;
-        if (c_ctx.createImageData) {
-            // If it's there, it's faster
-            Util.Info("Using Canvas createImageData");
-            conf.render_mode = "createImageData rendering";
-            c_imageData = imageDataCreate;
-        } else if (c_ctx.getImageData) {
-            // I think this is mostly just Opera
-            Util.Info("Using Canvas getImageData");
-            conf.render_mode = "getImageData rendering";
-            c_imageData = imageDataGet;
-        }
-        Util.Info("Prefering javascript operations");
-        if (conf.prefer_js === null) {
-            conf.prefer_js = true;
-        }
-        c_rgbxImage = rgbxImageData;
-        c_cmapImage = cmapImageData;
-    } else {
-        Util.Warn("Canvas lacks imageData, using fillRect (slow)");
-        conf.render_mode = "fillRect rendering (slow)";
-        c_forceCanvas = true;
-        conf.prefer_js = false;
-        c_rgbxImage = rgbxImageFill;
-        c_cmapImage = cmapImageFill;
-    }
-
-    if (UE.webkit && UE.webkit >= 534.7 && UE.webkit <= 534.9) {
-        // Workaround WebKit canvas rendering bug #46319
-        conf.render_mode += ", webkit bug workaround";
-        Util.Debug("Working around WebKit bug #46319");
-        c_webkit_bug = true;
-        for (func in {"fillRect":1, "copyImage":1, "rgbxImage":1,
-                "cmapImage":1, "blitStringImage":1}) {
-            that[func] = (function() {
-                var myfunc = that[func]; // Save original function
-                //Util.Debug("Wrapping " + func);
-                return function() {
-                    myfunc.apply(this, arguments);
-                    if (!c_flush_timer) {
-                        c_flush_timer = setTimeout(flush, 100);
-                    }
-                };
-            }());
-        }
-    }
-
-    /*
-     * Determine browser support for setting the cursor via data URI
-     * scheme
-     */
-    curDat = [];
-    for (i=0; i < 8 * 8 * 4; i += 1) {
-        curDat.push(255);
-    }
-    try {
-        curSave = c.style.cursor;
-        changeCursor(conf.target, curDat, curDat, 2, 2, 8, 8);
-        if (c.style.cursor) {
-            if (conf.cursor_uri === null) {
-                conf.cursor_uri = true;
-            }
-            Util.Info("Data URI scheme cursor supported");
-        } else {
-            if (conf.cursor_uri === null) {
-                conf.cursor_uri = false;
-            }
-            Util.Warn("Data URI scheme cursor not supported");
-        }
-        c.style.cursor = curSave;
-    } catch (exc2) { 
-        Util.Error("Data URI scheme cursor test exception: " + exc2);
-        conf.cursor_uri = false;
-    }
-
-    Util.Debug("<< Display.constructor");
-    return that ;
-}
-
-rescale = function(factor) {
-    var c, tp, x, y, 
-        properties = ['transform', 'WebkitTransform', 'MozTransform', null];
-    c = conf.target;
-    tp = properties.shift();
-    while (tp) {
-        if (typeof c.style[tp] !== 'undefined') {
-            break;
-        }
-        tp = properties.shift();
-    }
-
-    if (tp === null) {
-        Util.Debug("No scaling support");
-        return;
-    }
-
-
-    if (typeof(factor) === "undefined") {
-        factor = conf.scale;
-    } else if (factor > 1.0) {
-        factor = 1.0;
-    } else if (factor < 0.1) {
-        factor = 0.1;
-    }
-
-    if (conf.scale === factor) {
-        //Util.Debug("Display already scaled to '" + factor + "'");
-        return;
-    }
-
-    conf.scale = factor;
-    x = c.width - c.width * factor;
-    y = c.height - c.height * factor;
-    c.style[tp] = "scale(" + conf.scale + ") translate(-" + x + "px, -" + y + "px)";
-};
-
-that.viewportChange = function(deltaX, deltaY, width, height) {
-    var c = conf.target, v = viewport, cr = cleanRect,
-        saveImg = null, saveStyle, x1, y1, vx2, vy2, w, h;
-
-    if (typeof(deltaX) === "undefined") { deltaX = 0; }
-    if (typeof(deltaY) === "undefined") { deltaY = 0; }
-    if (typeof(width) === "undefined") { width = v.w; }
-    if (typeof(height) === "undefined") { height = v.h; }
-
-    // Size change
-
-    if (width > fb_width) { width = fb_width; }
-    if (height > fb_height) { height = fb_height; }
-
-    if ((v.w !== width) || (v.h !== height)) {
-        // Change width
-        if ((width < v.w) && (cr.x2 > v.x + width -1)) {
-            cr.x2 = v.x + width - 1;
-        }
-        v.w = width;
-
-        // Change height
-        if ((height < v.h) && (cr.y2 > v.y + height -1)) {
-            cr.y2 = v.y + height - 1;
-        }
-        v.h = height;
-
-
-        if (v.w > 0 && v.h > 0) {
-            saveImg = c_ctx.getImageData(0, 0,
-                    (c.width < v.w) ? c.width : v.w,
-                    (c.height < v.h) ? c.height : v.h);
-        }
-
-        c.width = v.w;
-        c.height = v.h;
-
-        if (saveImg) {
-            c_ctx.putImageData(saveImg, 0, 0);
-        }
-    }
-
-    vx2 = v.x + v.w - 1;
-    vy2 = v.y + v.h - 1;
-
-
-    // Position change
-
-    if ((deltaX < 0) && ((v.x + deltaX) < 0)) {
-        deltaX = - v.x;
-    }
-    if ((vx2 + deltaX) >= fb_width) {
-        deltaX -= ((vx2 + deltaX) - fb_width + 1);
-    }
-
-    if ((v.y + deltaY) < 0) {
-        deltaY = - v.y;
-    }
-    if ((vy2 + deltaY) >= fb_height) {
-        deltaY -= ((vy2 + deltaY) - fb_height + 1);
-    }
-
-    if ((deltaX === 0) && (deltaY === 0)) {
-        //message("skipping");
-        return;
-    }
-    message("deltaX: " + deltaX + ", deltaY: " + deltaY);
-
-    v.x += deltaX;
-    vx2 += deltaX;
-    v.y += deltaY;
-    vy2 += deltaY;
-
-    // Update the clean rectangle
-    if (v.x > cr.x1) {
-        cr.x1 = v.x;
-    }
-    if (vx2 < cr.x2) {
-        cr.x2 = vx2;
-    }
-    if (v.y > cr.y1) {
-        cr.y1 = v.y;
-    }
-    if (vy2 < cr.y2) {
-        cr.y2 = vy2;
-    }
-
-    if (deltaX < 0) {
-        // Shift viewport left, redraw left section
-        x1 = 0;
-        w = - deltaX;
-    } else {
-        // Shift viewport right, redraw right section
-        x1 = v.w - deltaX;
-        w = deltaX;
-    }
-    if (deltaY < 0) {
-        // Shift viewport up, redraw top section
-        y1 = 0;
-        h = - deltaY;
-    } else {
-        // Shift viewport down, redraw bottom section
-        y1 = v.h - deltaY;
-        h = deltaY;
-    }
-
-    // Copy the valid part of the viewport to the shifted location
-    saveStyle = c_ctx.fillStyle;
-    c_ctx.fillStyle = "rgb(255,255,255)";
-    if (deltaX !== 0) {
-        //that.copyImage(0, 0, -deltaX, 0, v.w, v.h);
-        //that.fillRect(x1, 0, w, v.h, [255,255,255]);
-        c_ctx.drawImage(c, 0, 0, v.w, v.h, -deltaX, 0, v.w, v.h);
-        c_ctx.fillRect(x1, 0, w, v.h);
-    }
-    if (deltaY !== 0) {
-        //that.copyImage(0, 0, 0, -deltaY, v.w, v.h);
-        //that.fillRect(0, y1, v.w, h, [255,255,255]);
-        c_ctx.drawImage(c, 0, 0, v.w, v.h, 0, -deltaY, v.w, v.h);
-        c_ctx.fillRect(0, y1, v.w, h);
-    }
-    c_ctx.fillStyle = saveStyle;
-}
-
-that.getCleanDirtyReset = function() {
-    var v = viewport, c = cleanRect, cleanBox, dirtyBoxes = [],
-        vx2 = v.x + v.w - 1, vy2 = v.y + v.h - 1;
-
-
-    // Copy the cleanRect
-    cleanBox = {'x': c.x1, 'y': c.y1,
-                'w': c.x2 - c.x1 + 1, 'h': c.y2 - c.y1 + 1};
-
-    if ((c.x1 >= c.x2) || (c.y1 >= c.y2)) {
-        // Whole viewport is dirty
-        dirtyBoxes.push({'x': v.x, 'y': v.y, 'w': v.w, 'h': v.h});
-    } else {
-        // Redraw dirty regions
-        if (v.x < c.x1) {
-            // left side dirty region
-            dirtyBoxes.push({'x': v.x, 'y': v.y,
-                             'w': c.x1 - v.x + 1, 'h': v.h});
-        }
-        if (vx2 > c.x2) {
-            // right side dirty region
-            dirtyBoxes.push({'x': c.x2 + 1, 'y': v.y,
-                             'w': vx2 - c.x2, 'h': v.h});
-        }
-        if (v.y < c.y1) {
-            // top/middle dirty region
-            dirtyBoxes.push({'x': c.x1, 'y': v.y,
-                             'w': c.x2 - c.x1 + 1, 'h': c.y1 - v.y});
-        }
-        if (vy2 > c.y2) {
-            // bottom/middle dirty region
-            dirtyBoxes.push({'x': c.x1, 'y': c.y2 + 1,
-                             'w': c.x2 - c.x1 + 1, 'h': vy2 - c.y2});
-        }
-    }
-
-    // Reset the cleanRect to the whole viewport
-    cleanRect = {'x1': v.x, 'y1': v.y,
-                 'x2': v.x + v.w - 1, 'y2': v.y + v.h - 1};
-
-    return {'cleanBox': cleanBox, 'dirtyBoxes': dirtyBoxes};
-}
-
-
-// Force canvas redraw (for webkit bug #46319 workaround)
-flush = function() {
-    var old_val;
-    //Util.Debug(">> flush");
-    old_val = conf.target.style.marginRight;
-    conf.target.style.marginRight = "1px";
-    c_flush_timer = null;
-    setTimeout(function () {
-            conf.target.style.marginRight = old_val;
-        }, 1);
-};
-
-setFillColor = function(color) {
-    var rgb, newStyle;
-    if (conf.true_color) {
-        rgb = color;
-    } else {
-        rgb = conf.colourMap[color[0]];
-    }
-    newStyle = "rgb(" + rgb[0] + "," + rgb[1] + "," + rgb[2] + ")";
-    if (newStyle !== c_prevStyle) {
-        c_ctx.fillStyle = newStyle;
-        c_prevStyle = newStyle;
-    }
-};
-
-
-//
-// Public API interface functions
-//
-
-that.resize = function(width, height) {
-    c_prevStyle    = "";
-
-    fb_width = width;
-    fb_height = height;
-
-    rescale(conf.scale);
-    that.viewportChange();
-};
-
-that.clear = function() {
-
-    if (conf.logo) {
-        that.resize(conf.logo.width, conf.logo.height);
-        that.viewportChange(0, 0, conf.logo.width, conf.logo.height);
-        that.blitStringImage(conf.logo.data, 0, 0);
-    } else {
-        that.resize(640, 20);
-        that.viewportChange(0, 0, 640, 20);
-        c_ctx.clearRect(0, 0, viewport.w, viewport.h);
-    }
-
-    // No benefit over default ("source-over") in Chrome and firefox
-    //c_ctx.globalCompositeOperation = "copy";
-};
-
-that.fillRect = function(x, y, width, height, color) {
-    setFillColor(color);
-    c_ctx.fillRect(x - viewport.x, y - viewport.y, width, height);
-};
-
-that.copyImage = function(old_x, old_y, new_x, new_y, w, h) {
-    var x1 = old_x - viewport.x, y1 = old_y - viewport.y,
-        x2 = new_x - viewport.x, y2 = new_y  - viewport.y;
-    c_ctx.drawImage(conf.target, x1, y1, w, h, x2, y2, w, h);
-};
-
-/*
- * Tile rendering functions optimized for rendering engines.
- *
- * - In Chrome/webkit, Javascript image data array manipulations are
- *   faster than direct Canvas fillStyle, fillRect rendering. In
- *   gecko, Javascript array handling is much slower.
- */
-that.getTile = function(x, y, width, height, color) {
-    var img, data = [], rgb, red, green, blue, i;
-    img = {'x': x, 'y': y, 'width': width, 'height': height,
-           'data': data};
-    if (conf.prefer_js) {
-        if (conf.true_color) {
-            rgb = color;
-        } else {
-            rgb = conf.colourMap[color[0]];
-        }
-        red = rgb[0];
-        green = rgb[1];
-        blue = rgb[2];
-        for (i = 0; i < (width * height * 4); i+=4) {
-            data[i    ] = red;
-            data[i + 1] = green;
-            data[i + 2] = blue;
-        }
-    } else {
-        that.fillRect(x, y, width, height, color);
-    }
-    return img;
-};
-
-that.setSubTile = function(img, x, y, w, h, color) {
-    var data, p, rgb, red, green, blue, width, j, i, xend, yend;
-    if (conf.prefer_js) {
-        data = img.data;
-        width = img.width;
-        if (conf.true_color) {
-            rgb = color;
-        } else {
-            rgb = conf.colourMap[color[0]];
-        }
-        red = rgb[0];
-        green = rgb[1];
-        blue = rgb[2];
-        xend = x + w;
-        yend = y + h;
-        for (j = y; j < yend; j += 1) {
-            for (i = x; i < xend; i += 1) {
-                p = (i + (j * width) ) * 4;
-                data[p    ] = red;
-                data[p + 1] = green;
-                data[p + 2] = blue;
-            }   
-        } 
-    } else {
-        that.fillRect(img.x + x, img.y + y, w, h, color);
-    }
-};
-
-that.putTile = function(img) {
-    if (conf.prefer_js) {
-        c_rgbxImage(img.x, img.y, img.width, img.height, img.data, 0);
-    }
-    // else: No-op, under gecko already done by setSubTile
-};
-
-imageDataGet = function(width, height) {
-    return c_ctx.getImageData(0, 0, width, height);
-};
-imageDataCreate = function(width, height) {
-    return c_ctx.createImageData(width, height);
-};
-
-rgbxImageData = function(x, y, width, height, arr, offset) {
-    var img, i, j, data;
-    img = c_imageData(width, height);
-    data = img.data;
-    for (i=0, j=offset; i < (width * height * 4); i=i+4, j=j+4) {
-        data[i    ] = arr[j    ];
-        data[i + 1] = arr[j + 1];
-        data[i + 2] = arr[j + 2];
-        data[i + 3] = 255; // Set Alpha
-    }
-    c_ctx.putImageData(img, x - viewport.x, y - viewport.y);
-};
-
-// really slow fallback if we don't have imageData
-rgbxImageFill = function(x, y, width, height, arr, offset) {
-    var i, j, sx = 0, sy = 0;
-    for (i=0, j=offset; i < (width * height); i+=1, j+=4) {
-        that.fillRect(x+sx, y+sy, 1, 1, [arr[j], arr[j+1], arr[j+2]]);
-        sx += 1;
-        if ((sx % width) === 0) {
-            sx = 0;
-            sy += 1;
-        }
-    }
-};
-
-cmapImageData = function(x, y, width, height, arr, offset) {
-    var img, i, j, data, rgb, cmap;
-    img = c_imageData(width, height);
-    data = img.data;
-    cmap = conf.colourMap;
-    for (i=0, j=offset; i < (width * height * 4); i+=4, j+=1) {
-        rgb = cmap[arr[j]];
-        data[i    ] = rgb[0];
-        data[i + 1] = rgb[1];
-        data[i + 2] = rgb[2];
-        data[i + 3] = 255; // Set Alpha
-    }
-    c_ctx.putImageData(img, x - viewport.x, y - viewport.y);
-};
-
-cmapImageFill = function(x, y, width, height, arr, offset) {
-    var i, j, sx = 0, sy = 0, cmap;
-    cmap = conf.colourMap;
-    for (i=0, j=offset; i < (width * height); i+=1, j+=1) {
-        that.fillRect(x+sx, y+sy, 1, 1, [arr[j]]);
-        sx += 1;
-        if ((sx % width) === 0) {
-            sx = 0;
-            sy += 1;
-        }
-    }
-};
-
-
-that.blitImage = function(x, y, width, height, arr, offset) {
-    if (conf.true_color) {
-        c_rgbxImage(x, y, width, height, arr, offset);
-    } else {
-        c_cmapImage(x, y, width, height, arr, offset);
-    }
-};
-
-that.blitStringImage = function(str, x, y) {
-    var img = new Image();
-    img.onload = function () {
-        c_ctx.drawImage(img, x - viewport.x, y - viewport.y);
-    };
-    img.src = str;
-};
-
-that.changeCursor = function(pixels, mask, hotx, hoty, w, h) {
-    if (conf.cursor_uri === false) {
-        Util.Warn("changeCursor called but no cursor data URI support");
-        return;
-    }
-
-    if (conf.true_color) {
-        changeCursor(conf.target, pixels, mask, hotx, hoty, w, h);
-    } else {
-        changeCursor(conf.target, pixels, mask, hotx, hoty, w, h, conf.colourMap);
-    }
-};
-
-that.defaultCursor = function() {
-    conf.target.style.cursor = "default";
-};
-
-return constructor();  // Return the public API interface
-
-}  // End of Display()
-
-
-/* Set CSS cursor property using data URI encoded cursor file */
-function changeCursor(target, pixels, mask, hotx, hoty, w, h, cmap) {
-    "use strict";
-    var cur = [], rgb, IHDRsz, RGBsz, ANDsz, XORsz, url, idx, alpha, x, y;
-    //Util.Debug(">> changeCursor, x: " + hotx + ", y: " + hoty + ", w: " + w + ", h: " + h);
-    
-    // Push multi-byte little-endian values
-    cur.push16le = function (num) {
-        this.push((num     ) & 0xFF,
-                  (num >> 8) & 0xFF  );
-    };
-    cur.push32le = function (num) {
-        this.push((num      ) & 0xFF,
-                  (num >>  8) & 0xFF,
-                  (num >> 16) & 0xFF,
-                  (num >> 24) & 0xFF  );
-    };
-
-    IHDRsz = 40;
-    RGBsz = w * h * 4;
-    XORsz = Math.ceil( (w * h) / 8.0 );
-    ANDsz = Math.ceil( (w * h) / 8.0 );
-
-    // Main header
-    cur.push16le(0);      // 0: Reserved
-    cur.push16le(2);      // 2: .CUR type
-    cur.push16le(1);      // 4: Number of images, 1 for non-animated ico
-
-    // Cursor #1 header (ICONDIRENTRY)
-    cur.push(w);          // 6: width
-    cur.push(h);          // 7: height
-    cur.push(0);          // 8: colors, 0 -> true-color
-    cur.push(0);          // 9: reserved
-    cur.push16le(hotx);   // 10: hotspot x coordinate
-    cur.push16le(hoty);   // 12: hotspot y coordinate
-    cur.push32le(IHDRsz + RGBsz + XORsz + ANDsz);
-                          // 14: cursor data byte size
-    cur.push32le(22);     // 18: offset of cursor data in the file
-
-
-    // Cursor #1 InfoHeader (ICONIMAGE/BITMAPINFO)
-    cur.push32le(IHDRsz); // 22: Infoheader size
-    cur.push32le(w);      // 26: Cursor width
-    cur.push32le(h*2);    // 30: XOR+AND height
-    cur.push16le(1);      // 34: number of planes
-    cur.push16le(32);     // 36: bits per pixel
-    cur.push32le(0);      // 38: Type of compression
-
-    cur.push32le(XORsz + ANDsz); // 43: Size of Image
-                                 // Gimp leaves this as 0
-
-    cur.push32le(0);      // 46: reserved
-    cur.push32le(0);      // 50: reserved
-    cur.push32le(0);      // 54: reserved
-    cur.push32le(0);      // 58: reserved
-
-    // 62: color data (RGBQUAD icColors[])
-    for (y = h-1; y >= 0; y -= 1) {
-        for (x = 0; x < w; x += 1) {
-            idx = y * Math.ceil(w / 8) + Math.floor(x/8);
-            alpha = (mask[idx] << (x % 8)) & 0x80 ? 255 : 0;
-
-            if (cmap) {
-                idx = (w * y) + x;
-                rgb = cmap[pixels[idx]];
-                cur.push(rgb[2]);          // blue
-                cur.push(rgb[1]);          // green
-                cur.push(rgb[0]);          // red
-                cur.push(alpha);           // alpha
-            } else {
-                idx = ((w * y) + x) * 4;
-                cur.push(pixels[idx + 2]); // blue
-                cur.push(pixels[idx + 1]); // green
-                cur.push(pixels[idx    ]); // red
-                cur.push(alpha);           // alpha
-            }
-        }
-    }
-
-    // XOR/bitmask data (BYTE icXOR[])
-    // (ignored, just needs to be right size)
-    for (y = 0; y < h; y += 1) {
-        for (x = 0; x < Math.ceil(w / 8); x += 1) {
-            cur.push(0x00);
-        }
-    }
-
-    // AND/bitmask data (BYTE icAND[])
-    // (ignored, just needs to be right size)
-    for (y = 0; y < h; y += 1) {
-        for (x = 0; x < Math.ceil(w / 8); x += 1) {
-            cur.push(0x00);
-        }
-    }
-
-    url = "data:image/x-icon;base64," + Base64.encode(cur);
-    target.style.cursor = "url(" + url + ") " + hotx + " " + hoty + ", default";
-    //Util.Debug("<< changeCursor, cur.length: " + cur.length);
-}
--- a/include/input.js
+++ /dev/null
@@ -1,1884 +0,0 @@
-/*
- * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
- * Licensed under LGPL-2 or any later version (see LICENSE.txt)
- */
-
-/*jslint browser: true, white: false, bitwise: false */
-/*global window, Util */
-
-
-//
-// Keyboard event handler
-//
-
-function Keyboard(defaults) {
-"use strict";
-
-var that           = {},  // Public API methods
-    conf           = {},  // Configuration attributes
-
-    keyDownList    = [];         // List of depressed keys 
-                                 // (even if they are happy)
-
-// Configuration attributes
-Util.conf_defaults(conf, that, defaults, [
-    ['target',      'wo', 'dom',  document, 'DOM element that captures keyboard input'],
-    ['focused',     'rw', 'bool', true, 'Capture and send key events'],
-
-    ['onKeyPress',  'rw', 'func', null, 'Handler for key press/release']
-    ]);
-
-
-// 
-// Private functions
-//
-
-// From the event keyCode return the keysym value for keys that need
-// to be suppressed otherwise they may trigger unintended browser
-// actions
-function getKeysymSpecial(evt) {
-    var keysym = null;
-
-    switch ( evt.keyCode ) {
-        // These generate a keyDown and keyPress in Firefox and Opera
-        case 8         : keysym = 0xFF08; break; // BACKSPACE
-        case 13        : keysym = 0xFF0D; break; // ENTER
-
-        // This generates a keyDown and keyPress in Opera
-        case 9         : keysym = 0xFF09; break; // TAB
-        default        :                  break;
-    }
-
-    if (evt.type === 'keydown') {
-        switch ( evt.keyCode ) {
-            case 27        : keysym = 0xFF1B; break; // ESCAPE
-            case 46        : keysym = 0xFFFF; break; // DELETE
-
-            case 36        : keysym = 0xFF50; break; // HOME
-            case 35        : keysym = 0xFF57; break; // END
-            case 33        : keysym = 0xFF55; break; // PAGE_UP
-            case 34        : keysym = 0xFF56; break; // PAGE_DOWN
-            case 45        : keysym = 0xFF63; break; // INSERT
-                                                     // '-' during keyPress
-            case 37        : keysym = 0xFF51; break; // LEFT
-            case 38        : keysym = 0xFF52; break; // UP
-            case 39        : keysym = 0xFF53; break; // RIGHT
-            case 40        : keysym = 0xFF54; break; // DOWN
-            case 16        : keysym = 0xFFE1; break; // SHIFT
-            case 17        : keysym = 0xFFE3; break; // CONTROL
-            //case 18        : keysym = 0xFFE7; break; // Left Meta (Mac Option)
-            case 18        : keysym = 0xFFE9; break; // Left ALT (Mac Command)
-
-            case 112       : keysym = 0xFFBE; break; // F1
-            case 113       : keysym = 0xFFBF; break; // F2
-            case 114       : keysym = 0xFFC0; break; // F3
-            case 115       : keysym = 0xFFC1; break; // F4
-            case 116       : keysym = 0xFFC2; break; // F5
-            case 117       : keysym = 0xFFC3; break; // F6
-            case 118       : keysym = 0xFFC4; break; // F7
-            case 119       : keysym = 0xFFC5; break; // F8
-            case 120       : keysym = 0xFFC6; break; // F9
-            case 121       : keysym = 0xFFC7; break; // F10
-            case 122       : keysym = 0xFFC8; break; // F11
-            case 123       : keysym = 0xFFC9; break; // F12
-
-            default        :                  break;
-        }
-    }
-
-    if ((!keysym) && (evt.ctrlKey || evt.altKey)) {
-        if ((typeof(evt.which) !== "undefined") && (evt.which > 0)) {
-            keysym = evt.which;
-        } else {
-            // IE9 always
-            // Firefox and Opera when ctrl/alt + special
-            Util.Warn("which not set, using keyCode");
-            keysym = evt.keyCode;
-        }
-
-        /* Remap symbols */
-        switch (keysym) {
-            case 186       : keysym = 59; break; // ;  (IE)
-            case 187       : keysym = 61; break; // =  (IE)
-            case 188       : keysym = 44; break; // ,  (Mozilla, IE)
-            case 109       :                     // -  (Mozilla, Opera)
-                if (Util.Engine.gecko || Util.Engine.presto) {
-                            keysym = 45; }
-                                        break;
-            case 189       : keysym = 45; break; // -  (IE)
-            case 190       : keysym = 46; break; // .  (Mozilla, IE)
-            case 191       : keysym = 47; break; // /  (Mozilla, IE)
-            case 192       : keysym = 96; break; // `  (Mozilla, IE)
-            case 219       : keysym = 91; break; // [  (Mozilla, IE)
-            case 220       : keysym = 92; break; // \  (Mozilla, IE)
-            case 221       : keysym = 93; break; // ]  (Mozilla, IE)
-            case 222       : keysym = 39; break; // '  (Mozilla, IE)
-        }
-        
-        /* Remap shifted and unshifted keys */
-        if (!!evt.shiftKey) {
-            switch (keysym) {
-                case 48        : keysym = 41 ; break; // )  (shifted 0)
-                case 49        : keysym = 33 ; break; // !  (shifted 1)
-                case 50        : keysym = 64 ; break; // @  (shifted 2)
-                case 51        : keysym = 35 ; break; // #  (shifted 3)
-                case 52        : keysym = 36 ; break; // $  (shifted 4)
-                case 53        : keysym = 37 ; break; // %  (shifted 5)
-                case 54        : keysym = 94 ; break; // ^  (shifted 6)
-                case 55        : keysym = 38 ; break; // &  (shifted 7)
-                case 56        : keysym = 42 ; break; // *  (shifted 8)
-                case 57        : keysym = 40 ; break; // (  (shifted 9)
-
-                case 59        : keysym = 58 ; break; // :  (shifted `)
-                case 61        : keysym = 43 ; break; // +  (shifted ;)
-                case 44        : keysym = 60 ; break; // <  (shifted ,)
-                case 45        : keysym = 95 ; break; // _  (shifted -)
-                case 46        : keysym = 62 ; break; // >  (shifted .)
-                case 47        : keysym = 63 ; break; // ?  (shifted /)
-                case 96        : keysym = 126; break; // ~  (shifted `)
-                case 91        : keysym = 123; break; // {  (shifted [)
-                case 92        : keysym = 124; break; // |  (shifted \)
-                case 93        : keysym = 125; break; // }  (shifted ])
-                case 39        : keysym = 34 ; break; // "  (shifted ')
-            }
-        } else if ((keysym >= 65) && (keysym <=90)) {
-            /* Remap unshifted A-Z */
-            keysym += 32;
-        } else if (evt.keyLocation === 3) {
-            // numpad keys
-            switch (keysym) {
-                case 96 : keysym = 48; break; // 0
-                case 97 : keysym = 49; break; // 1
-                case 98 : keysym = 50; break; // 2
-                case 99 : keysym = 51; break; // 3
-                case 100: keysym = 52; break; // 4
-                case 101: keysym = 53; break; // 5
-                case 102: keysym = 54; break; // 6
-                case 103: keysym = 55; break; // 7
-                case 104: keysym = 56; break; // 8
-                case 105: keysym = 57; break; // 9
-                case 109: keysym = 45; break; // -
-                case 110: keysym = 46; break; // .
-                case 111: keysym = 47; break; // /
-            }
-        }
-    }
-
-    return keysym;
-}
-
-/* Translate DOM keyPress event to keysym value */
-function getKeysym(evt) {
-    var keysym, msg;
-
-    if (typeof(evt.which) !== "undefined") {
-        // WebKit, Firefox, Opera
-        keysym = evt.which;
-    } else {
-        // IE9
-        Util.Warn("which not set, using keyCode");
-        keysym = evt.keyCode;
-    }
-
-    if ((keysym > 255) && (keysym < 0xFF00)) {
-        msg = "Mapping character code " + keysym;
-        // Map Unicode outside Latin 1 to X11 keysyms
-        keysym = unicodeTable[keysym];
-        if (typeof(keysym) === 'undefined') {
-           keysym = 0; 
-        }
-        Util.Debug(msg + " to " + keysym);
-    }
-
-    return keysym;
-}
-
-function show_keyDownList(kind) {
-    var c;
-    var msg = "keyDownList (" + kind + "):\n";
-    for (c = 0; c < keyDownList.length; c++) {
-        msg = msg + "    " + c + " - keyCode: " + keyDownList[c].keyCode +
-              " - which: " + keyDownList[c].which + "\n";
-    }
-    Util.Debug(msg);
-}
-
-function copyKeyEvent(evt) {
-    var members = ['type', 'keyCode', 'charCode', 'which',
-                   'altKey', 'ctrlKey', 'shiftKey',
-                   'keyLocation', 'keyIdentifier'], i, obj = {};
-    for (i = 0; i < members.length; i++) {
-        if (typeof(evt[members[i]]) !== "undefined") {
-            obj[members[i]] = evt[members[i]];
-        }
-    }
-    return obj;
-}
-
-function pushKeyEvent(fevt) {
-    keyDownList.push(fevt);
-}
-
-function getKeyEvent(keyCode, pop) {
-    var i, fevt = null;
-    for (i = keyDownList.length-1; i >= 0; i--) {
-        if (keyDownList[i].keyCode === keyCode) {
-            if ((typeof(pop) !== "undefined") && (pop)) {
-                fevt = keyDownList.splice(i, 1)[0];
-            } else {
-                fevt = keyDownList[i];
-            }
-            break;
-        }
-    }
-    return fevt;
-}
-
-function ignoreKeyEvent(evt) {
-    // Blarg. Some keys have a different keyCode on keyDown vs keyUp
-    if (evt.keyCode === 229) {
-        // French AZERTY keyboard dead key.
-        // Lame thing is that the respective keyUp is 219 so we can't
-        // properly ignore the keyUp event
-        return true;
-    }
-    return false;
-}
-
-
-//
-// Key Event Handling:
-//
-// There are several challenges when dealing with key events:
-//   - The meaning and use of keyCode, charCode and which depends on
-//     both the browser and the event type (keyDown/Up vs keyPress).
-//   - We cannot automatically determine the keyboard layout
-//   - The keyDown and keyUp events have a keyCode value that has not
-//     been translated by modifier keys.
-//   - The keyPress event has a translated (for layout and modifiers)
-//     character code but the attribute containing it differs. keyCode
-//     contains the translated value in WebKit (Chrome/Safari), Opera
-//     11 and IE9. charCode contains the value in WebKit and Firefox.
-//     The which attribute contains the value on WebKit, Firefox and
-//     Opera 11.
-//   - The keyDown/Up keyCode value indicates (sort of) the physical
-//     key was pressed but only for standard US layout. On a US
-//     keyboard, the '-' and '_' characters are on the same key and
-//     generate a keyCode value of 189. But on an AZERTY keyboard even
-//     though they are different physical keys they both still
-//     generate a keyCode of 189!
-//   - To prevent a key event from propagating to the browser and
-//     causing unwanted default actions (such as closing a tab,
-//     opening a menu, shifting focus, etc) we must suppress this
-//     event in both keyDown and keyPress because not all key strokes
-//     generate on a keyPress event. Also, in WebKit and IE9
-//     suppressing the keyDown prevents a keyPress but other browsers
-//     still generated a keyPress even if keyDown is suppressed.
-//
-// For safe key events, we wait until the keyPress event before
-// reporting a key down event. For unsafe key events, we report a key
-// down event when the keyDown event fires and we suppress any further
-// actions (including keyPress).
-//
-// In order to report a key up event that matches what we reported
-// for the key down event, we keep a list of keys that are currently
-// down. When the keyDown event happens, we add the key event to the
-// list. If it is a safe key event, then we update the which attribute
-// in the most recent item on the list when we received a keyPress
-// event (keyPress should immediately follow keyDown). When we
-// received a keyUp event we search for the event on the list with
-// a matching keyCode and we report the character code using the value
-// in the 'which' attribute that was stored with that key.
-//
-
-function onKeyDown(e) {
-    if (! conf.focused) {
-        return true;
-    }
-    var fevt = null, evt = (e ? e : window.event),
-        keysym = null, suppress = false;
-    //Util.Debug("onKeyDown kC:" + evt.keyCode + " cC:" + evt.charCode + " w:" + evt.which);
-
-    fevt = copyKeyEvent(evt);
-
-    keysym = getKeysymSpecial(evt);
-    // Save keysym decoding for use in keyUp
-    fevt.keysym = keysym;
-    if (keysym) {
-        // If it is a key or key combination that might trigger
-        // browser behaviors or it has no corresponding keyPress
-        // event, then send it immediately
-        if (conf.onKeyPress && !ignoreKeyEvent(evt)) {
-            Util.Debug("onKeyPress down, keysym: " + keysym +
-                   " (onKeyDown key: " + evt.keyCode +
-                   ", which: " + evt.which + ")");
-            conf.onKeyPress(keysym, 1, evt);
-        }
-        suppress = true;
-    }
-
-    if (! ignoreKeyEvent(evt)) {
-        // Add it to the list of depressed keys
-        pushKeyEvent(fevt);
-        //show_keyDownList('down');
-    }
-
-    if (suppress) {
-        // Suppress bubbling/default actions
-        Util.stopEvent(e);
-        return false;
-    } else {
-        // Allow the event to bubble and become a keyPress event which
-        // will have the character code translated
-        return true;
-    }
-}
-
-function onKeyPress(e) {
-    if (! conf.focused) {
-        return true;
-    }
-    var evt = (e ? e : window.event),
-        kdlen = keyDownList.length, keysym = null;
-    //Util.Debug("onKeyPress kC:" + evt.keyCode + " cC:" + evt.charCode + " w:" + evt.which);
-    
-    if (((evt.which !== "undefined") && (evt.which === 0)) ||
-        (getKeysymSpecial(evt))) {
-        // Firefox and Opera generate a keyPress event even if keyDown
-        // is suppressed. But the keys we want to suppress will have
-        // either:
-        //     - the which attribute set to 0
-        //     - getKeysymSpecial() will identify it
-        Util.Debug("Ignoring special key in keyPress");
-        Util.stopEvent(e);
-        return false;
-    }
-
-    keysym = getKeysym(evt);
-
-    // Modify the the which attribute in the depressed keys list so
-    // that the keyUp event will be able to have the character code
-    // translation available.
-    if (kdlen > 0) {
-        keyDownList[kdlen-1].keysym = keysym;
-    } else {
-        Util.Warn("keyDownList empty when keyPress triggered");
-    }
-
-    //show_keyDownList('press');
-    
-    // Send the translated keysym
-    if (conf.onKeyPress && (keysym > 0)) {
-        Util.Debug("onKeyPress down, keysym: " + keysym +
-                   " (onKeyPress key: " + evt.keyCode +
-                   ", which: " + evt.which + ")");
-        conf.onKeyPress(keysym, 1, evt);
-    }
-
-    // Stop keypress events just in case
-    Util.stopEvent(e);
-    return false;
-}
-
-function onKeyUp(e) {
-    if (! conf.focused) {
-        return true;
-    }
-    var fevt = null, evt = (e ? e : window.event), keysym;
-    //Util.Debug("onKeyUp   kC:" + evt.keyCode + " cC:" + evt.charCode + " w:" + evt.which);
-
-    fevt = getKeyEvent(evt.keyCode, true);
-    
-    if (fevt) {
-        keysym = fevt.keysym;
-    } else {
-        Util.Warn("Key event (keyCode = " + evt.keyCode +
-                ") not found on keyDownList");
-        keysym = 0;
-    }
-
-    //show_keyDownList('up');
-
-    if (conf.onKeyPress && (keysym > 0)) {
-        //Util.Debug("keyPress up,   keysym: " + keysym +
-        //        " (key: " + evt.keyCode + ", which: " + evt.which + ")");
-        Util.Debug("onKeyPress up, keysym: " + keysym +
-                   " (onKeyPress key: " + evt.keyCode +
-                   ", which: " + evt.which + ")");
-        conf.onKeyPress(keysym, 0, evt);
-    }
-    Util.stopEvent(e);
-    return false;
-}
-
-//
-// Public API interface functions
-//
-
-that.grab = function() {
-    //Util.Debug(">> Keyboard.grab");
-    var c = conf.target;
-
-    Util.addEvent(c, 'keydown', onKeyDown);
-    Util.addEvent(c, 'keyup', onKeyUp);
-    Util.addEvent(c, 'keypress', onKeyPress);
-
-    //Util.Debug("<< Keyboard.grab");
-};
-
-that.ungrab = function() {
-    //Util.Debug(">> Keyboard.ungrab");
-    var c = conf.target;
-
-    Util.removeEvent(c, 'keydown', onKeyDown);
-    Util.removeEvent(c, 'keyup', onKeyUp);
-    Util.removeEvent(c, 'keypress', onKeyPress);
-
-    //Util.Debug(">> Keyboard.ungrab");
-};
-
-return that;  // Return the public API interface
-
-}  // End of Keyboard()
-
-
-//
-// Mouse event handler
-//
-
-function Mouse(defaults) {
-"use strict";
-
-var that           = {},  // Public API methods
-    conf           = {};  // Configuration attributes
-
-// Configuration attributes
-Util.conf_defaults(conf, that, defaults, [
-    ['target',         'ro', 'dom',  document, 'DOM element that captures mouse input'],
-    ['focused',        'rw', 'bool', true, 'Capture and send mouse clicks/movement'],
-    ['scale',          'rw', 'float', 1.0, 'Viewport scale factor 0.0 - 1.0'],
-
-    ['onMouseButton',  'rw', 'func', null, 'Handler for mouse button click/release'],
-    ['onMouseMove',    'rw', 'func', null, 'Handler for mouse movement'],
-    ['touchButton',    'rw', 'int', 1, 'Button mask (1, 2, 4) for touch devices (0 means ignore clicks)']
-    ]);
-
-
-// 
-// Private functions
-//
-
-function onMouseButton(e, down) {
-    var evt, pos, bmask;
-    if (! conf.focused) {
-        return true;
-    }
-    evt = (e ? e : window.event);
-    pos = Util.getEventPosition(e, conf.target, conf.scale);
-    if (e.touches || e.changedTouches) {
-        // Touch device
-        bmask = conf.touchButton;
-        // If bmask is set
-    } else if (evt.which) {
-        /* everything except IE */
-        bmask = 1 << evt.button;
-    } else {
-        /* IE including 9 */
-        bmask = (evt.button & 0x1) +      // Left
-                (evt.button & 0x2) * 2 +  // Right
-                (evt.button & 0x4) / 2;   // Middle
-    }
-    //Util.Debug("mouse " + pos.x + "," + pos.y + " down: " + down +
-    //           " bmask: " + bmask + "(evt.button: " + evt.button + ")");
-    if (bmask > 0 && conf.onMouseButton) {
-        Util.Debug("onMouseButton " + (down ? "down" : "up") +
-                   ", x: " + pos.x + ", y: " + pos.y + ", bmask: " + bmask);
-        conf.onMouseButton(pos.x, pos.y, down, bmask);
-    }
-    Util.stopEvent(e);
-    return false;
-}
-
-function onMouseDown(e) {
-    onMouseButton(e, 1);
-}
-
-function onMouseUp(e) {
-    onMouseButton(e, 0);
-}
-
-function onMouseWheel(e) {
-    var evt, pos, bmask, wheelData;
-    if (! conf.focused) {
-        return true;
-    }
-    evt = (e ? e : window.event);
-    pos = Util.getEventPosition(e, conf.target, conf.scale);
-    wheelData = evt.detail ? evt.detail * -1 : evt.wheelDelta / 40;
-    if (wheelData > 0) {
-        bmask = 1 << 3;
-    } else {
-        bmask = 1 << 4;
-    }
-    //Util.Debug('mouse scroll by ' + wheelData + ':' + pos.x + "," + pos.y);
-    if (conf.onMouseButton) {
-        conf.onMouseButton(pos.x, pos.y, 1, bmask);
-        conf.onMouseButton(pos.x, pos.y, 0, bmask);
-    }
-    Util.stopEvent(e);
-    return false;
-}
-
-function onMouseMove(e) {
-    var evt, pos;
-    if (! conf.focused) {
-        return true;
-    }
-    evt = (e ? e : window.event);
-    pos = Util.getEventPosition(e, conf.target, conf.scale);
-    //Util.Debug('mouse ' + evt.which + '/' + evt.button + ' up:' + pos.x + "," + pos.y);
-    if (conf.onMouseMove) {
-        conf.onMouseMove(pos.x, pos.y);
-    }
-    Util.stopEvent(e);
-    return false;
-}
-
-function onMouseDisable(e) {
-    var evt, pos;
-    if (! conf.focused) {
-        return true;
-    }
-    evt = (e ? e : window.event);
-    pos = Util.getEventPosition(e, conf.target, conf.scale);
-    /* Stop propagation if inside canvas area */
-    if ((pos.x >= 0) && (pos.y >= 0) &&
-        (pos.x < conf.target.offsetWidth) &&
-        (pos.y < conf.target.offsetHeight)) {
-        //Util.Debug("mouse event disabled");
-        Util.stopEvent(e);
-        return false;
-    }
-    //Util.Debug("mouse event not disabled");
-    return true;
-}
-
-//
-// Public API interface functions
-//
-
-that.grab = function() {
-    //Util.Debug(">> Mouse.grab");
-    var c = conf.target;
-
-    if ('ontouchstart' in document.documentElement) {
-        Util.addEvent(c, 'touchstart', onMouseDown);
-        Util.addEvent(c, 'touchend', onMouseUp);
-        Util.addEvent(c, 'touchmove', onMouseMove);
-    } else {
-        Util.addEvent(c, 'mousedown', onMouseDown);
-        Util.addEvent(c, 'mouseup', onMouseUp);
-        Util.addEvent(c, 'mousemove', onMouseMove);
-        Util.addEvent(c, (Util.Engine.gecko) ? 'DOMMouseScroll' : 'mousewheel',
-                onMouseWheel);
-    }
-
-    /* Work around right and middle click browser behaviors */
-    Util.addEvent(document, 'click', onMouseDisable);
-    Util.addEvent(document.body, 'contextmenu', onMouseDisable);
-
-    //Util.Debug("<< Mouse.grab");
-};
-
-that.ungrab = function() {
-    //Util.Debug(">> Mouse.ungrab");
-    var c = conf.target;
-
-    if ('ontouchstart' in document.documentElement) {
-        Util.removeEvent(c, 'touchstart', onMouseDown);
-        Util.removeEvent(c, 'touchend', onMouseUp);
-        Util.removeEvent(c, 'touchmove', onMouseMove);
-    } else {
-        Util.removeEvent(c, 'mousedown', onMouseDown);
-        Util.removeEvent(c, 'mouseup', onMouseUp);
-        Util.removeEvent(c, 'mousemove', onMouseMove);
-        Util.removeEvent(c, (Util.Engine.gecko) ? 'DOMMouseScroll' : 'mousewheel',
-                onMouseWheel);
-    }
-
-    /* Work around right and middle click browser behaviors */
-    Util.removeEvent(document, 'click', onMouseDisable);
-    Util.removeEvent(document.body, 'contextmenu', onMouseDisable);
-
-    //Util.Debug(">> Mouse.ungrab");
-};
-
-return that;  // Return the public API interface
-
-}  // End of Mouse()
-
-
-/*
- * Browser keypress to X11 keysym for Unicode characters > U+00FF
- */
-unicodeTable = {
-    0x0104 : 0x01a1,
-    0x02D8 : 0x01a2,
-    0x0141 : 0x01a3,
-    0x013D : 0x01a5,
-    0x015A : 0x01a6,
-    0x0160 : 0x01a9,
-    0x015E : 0x01aa,
-    0x0164 : 0x01ab,
-    0x0179 : 0x01ac,
-    0x017D : 0x01ae,
-    0x017B : 0x01af,
-    0x0105 : 0x01b1,
-    0x02DB : 0x01b2,
-    0x0142 : 0x01b3,
-    0x013E : 0x01b5,
-    0x015B : 0x01b6,
-    0x02C7 : 0x01b7,
-    0x0161 : 0x01b9,
-    0x015F : 0x01ba,
-    0x0165 : 0x01bb,
-    0x017A : 0x01bc,
-    0x02DD : 0x01bd,
-    0x017E : 0x01be,
-    0x017C : 0x01bf,
-    0x0154 : 0x01c0,
-    0x0102 : 0x01c3,
-    0x0139 : 0x01c5,
-    0x0106 : 0x01c6,
-    0x010C : 0x01c8,
-    0x0118 : 0x01ca,
-    0x011A : 0x01cc,
-    0x010E : 0x01cf,
-    0x0110 : 0x01d0,
-    0x0143 : 0x01d1,
-    0x0147 : 0x01d2,
-    0x0150 : 0x01d5,
-    0x0158 : 0x01d8,
-    0x016E : 0x01d9,
-    0x0170 : 0x01db,
-    0x0162 : 0x01de,
-    0x0155 : 0x01e0,
-    0x0103 : 0x01e3,
-    0x013A : 0x01e5,
-    0x0107 : 0x01e6,
-    0x010D : 0x01e8,
-    0x0119 : 0x01ea,
-    0x011B : 0x01ec,
-    0x010F : 0x01ef,
-    0x0111 : 0x01f0,
-    0x0144 : 0x01f1,
-    0x0148 : 0x01f2,
-    0x0151 : 0x01f5,
-    0x0171 : 0x01fb,
-    0x0159 : 0x01f8,
-    0x016F : 0x01f9,
-    0x0163 : 0x01fe,
-    0x02D9 : 0x01ff,
-    0x0126 : 0x02a1,
-    0x0124 : 0x02a6,
-    0x0130 : 0x02a9,
-    0x011E : 0x02ab,
-    0x0134 : 0x02ac,
-    0x0127 : 0x02b1,
-    0x0125 : 0x02b6,
-    0x0131 : 0x02b9,
-    0x011F : 0x02bb,
-    0x0135 : 0x02bc,
-    0x010A : 0x02c5,
-    0x0108 : 0x02c6,
-    0x0120 : 0x02d5,
-    0x011C : 0x02d8,
-    0x016C : 0x02dd,
-    0x015C : 0x02de,
-    0x010B : 0x02e5,
-    0x0109 : 0x02e6,
-    0x0121 : 0x02f5,
-    0x011D : 0x02f8,
-    0x016D : 0x02fd,
-    0x015D : 0x02fe,
-    0x0138 : 0x03a2,
-    0x0156 : 0x03a3,
-    0x0128 : 0x03a5,
-    0x013B : 0x03a6,
-    0x0112 : 0x03aa,
-    0x0122 : 0x03ab,
-    0x0166 : 0x03ac,
-    0x0157 : 0x03b3,
-    0x0129 : 0x03b5,
-    0x013C : 0x03b6,
-    0x0113 : 0x03ba,
-    0x0123 : 0x03bb,
-    0x0167 : 0x03bc,
-    0x014A : 0x03bd,
-    0x014B : 0x03bf,
-    0x0100 : 0x03c0,
-    0x012E : 0x03c7,
-    0x0116 : 0x03cc,
-    0x012A : 0x03cf,
-    0x0145 : 0x03d1,
-    0x014C : 0x03d2,
-    0x0136 : 0x03d3,
-    0x0172 : 0x03d9,
-    0x0168 : 0x03dd,
-    0x016A : 0x03de,
-    0x0101 : 0x03e0,
-    0x012F : 0x03e7,
-    0x0117 : 0x03ec,
-    0x012B : 0x03ef,
-    0x0146 : 0x03f1,
-    0x014D : 0x03f2,
-    0x0137 : 0x03f3,
-    0x0173 : 0x03f9,
-    0x0169 : 0x03fd,
-    0x016B : 0x03fe,
-    0x1E02 : 0x1001e02,
-    0x1E03 : 0x1001e03,
-    0x1E0A : 0x1001e0a,
-    0x1E80 : 0x1001e80,
-    0x1E82 : 0x1001e82,
-    0x1E0B : 0x1001e0b,
-    0x1EF2 : 0x1001ef2,
-    0x1E1E : 0x1001e1e,
-    0x1E1F : 0x1001e1f,
-    0x1E40 : 0x1001e40,
-    0x1E41 : 0x1001e41,
-    0x1E56 : 0x1001e56,
-    0x1E81 : 0x1001e81,
-    0x1E57 : 0x1001e57,
-    0x1E83 : 0x1001e83,
-    0x1E60 : 0x1001e60,
-    0x1EF3 : 0x1001ef3,
-    0x1E84 : 0x1001e84,
-    0x1E85 : 0x1001e85,
-    0x1E61 : 0x1001e61,
-    0x0174 : 0x1000174,
-    0x1E6A : 0x1001e6a,
-    0x0176 : 0x1000176,
-    0x0175 : 0x1000175,
-    0x1E6B : 0x1001e6b,
-    0x0177 : 0x1000177,
-    0x0152 : 0x13bc,
-    0x0153 : 0x13bd,
-    0x0178 : 0x13be,
-    0x203E : 0x047e,
-    0x3002 : 0x04a1,
-    0x300C : 0x04a2,
-    0x300D : 0x04a3,
-    0x3001 : 0x04a4,
-    0x30FB : 0x04a5,
-    0x30F2 : 0x04a6,
-    0x30A1 : 0x04a7,
-    0x30A3 : 0x04a8,
-    0x30A5 : 0x04a9,
-    0x30A7 : 0x04aa,
-    0x30A9 : 0x04ab,
-    0x30E3 : 0x04ac,
-    0x30E5 : 0x04ad,
-    0x30E7 : 0x04ae,
-    0x30C3 : 0x04af,
-    0x30FC : 0x04b0,
-    0x30A2 : 0x04b1,
-    0x30A4 : 0x04b2,
-    0x30A6 : 0x04b3,
-    0x30A8 : 0x04b4,
-    0x30AA : 0x04b5,
-    0x30AB : 0x04b6,
-    0x30AD : 0x04b7,
-    0x30AF : 0x04b8,
-    0x30B1 : 0x04b9,
-    0x30B3 : 0x04ba,
-    0x30B5 : 0x04bb,
-    0x30B7 : 0x04bc,
-    0x30B9 : 0x04bd,
-    0x30BB : 0x04be,
-    0x30BD : 0x04bf,
-    0x30BF : 0x04c0,
-    0x30C1 : 0x04c1,
-    0x30C4 : 0x04c2,
-    0x30C6 : 0x04c3,
-    0x30C8 : 0x04c4,
-    0x30CA : 0x04c5,
-    0x30CB : 0x04c6,
-    0x30CC : 0x04c7,
-    0x30CD : 0x04c8,
-    0x30CE : 0x04c9,
-    0x30CF : 0x04ca,
-    0x30D2 : 0x04cb,
-    0x30D5 : 0x04cc,
-    0x30D8 : 0x04cd,
-    0x30DB : 0x04ce,
-    0x30DE : 0x04cf,
-    0x30DF : 0x04d0,
-    0x30E0 : 0x04d1,
-    0x30E1 : 0x04d2,
-    0x30E2 : 0x04d3,
-    0x30E4 : 0x04d4,
-    0x30E6 : 0x04d5,
-    0x30E8 : 0x04d6,
-    0x30E9 : 0x04d7,
-    0x30EA : 0x04d8,
-    0x30EB : 0x04d9,
-    0x30EC : 0x04da,
-    0x30ED : 0x04db,
-    0x30EF : 0x04dc,
-    0x30F3 : 0x04dd,
-    0x309B : 0x04de,
-    0x309C : 0x04df,
-    0x06F0 : 0x10006f0,
-    0x06F1 : 0x10006f1,
-    0x06F2 : 0x10006f2,
-    0x06F3 : 0x10006f3,
-    0x06F4 : 0x10006f4,
-    0x06F5 : 0x10006f5,
-    0x06F6 : 0x10006f6,
-    0x06F7 : 0x10006f7,
-    0x06F8 : 0x10006f8,
-    0x06F9 : 0x10006f9,
-    0x066A : 0x100066a,
-    0x0670 : 0x1000670,
-    0x0679 : 0x1000679,
-    0x067E : 0x100067e,
-    0x0686 : 0x1000686,
-    0x0688 : 0x1000688,
-    0x0691 : 0x1000691,
-    0x060C : 0x05ac,
-    0x06D4 : 0x10006d4,
-    0x0660 : 0x1000660,
-    0x0661 : 0x1000661,
-    0x0662 : 0x1000662,
-    0x0663 : 0x1000663,
-    0x0664 : 0x1000664,
-    0x0665 : 0x1000665,
-    0x0666 : 0x1000666,
-    0x0667 : 0x1000667,
-    0x0668 : 0x1000668,
-    0x0669 : 0x1000669,
-    0x061B : 0x05bb,
-    0x061F : 0x05bf,
-    0x0621 : 0x05c1,
-    0x0622 : 0x05c2,
-    0x0623 : 0x05c3,
-    0x0624 : 0x05c4,
-    0x0625 : 0x05c5,
-    0x0626 : 0x05c6,
-    0x0627 : 0x05c7,
-    0x0628 : 0x05c8,
-    0x0629 : 0x05c9,
-    0x062A : 0x05ca,
-    0x062B : 0x05cb,
-    0x062C : 0x05cc,
-    0x062D : 0x05cd,
-    0x062E : 0x05ce,
-    0x062F : 0x05cf,
-    0x0630 : 0x05d0,
-    0x0631 : 0x05d1,
-    0x0632 : 0x05d2,
-    0x0633 : 0x05d3,
-    0x0634 : 0x05d4,
-    0x0635 : 0x05d5,
-    0x0636 : 0x05d6,
-    0x0637 : 0x05d7,
-    0x0638 : 0x05d8,
-    0x0639 : 0x05d9,
-    0x063A : 0x05da,
-    0x0640 : 0x05e0,
-    0x0641 : 0x05e1,
-    0x0642 : 0x05e2,
-    0x0643 : 0x05e3,
-    0x0644 : 0x05e4,
-    0x0645 : 0x05e5,
-    0x0646 : 0x05e6,
-    0x0647 : 0x05e7,
-    0x0648 : 0x05e8,
-    0x0649 : 0x05e9,
-    0x064A : 0x05ea,
-    0x064B : 0x05eb,
-    0x064C : 0x05ec,
-    0x064D : 0x05ed,
-    0x064E : 0x05ee,
-    0x064F : 0x05ef,
-    0x0650 : 0x05f0,
-    0x0651 : 0x05f1,
-    0x0652 : 0x05f2,
-    0x0653 : 0x1000653,
-    0x0654 : 0x1000654,
-    0x0655 : 0x1000655,
-    0x0698 : 0x1000698,
-    0x06A4 : 0x10006a4,
-    0x06A9 : 0x10006a9,
-    0x06AF : 0x10006af,
-    0x06BA : 0x10006ba,
-    0x06BE : 0x10006be,
-    0x06CC : 0x10006cc,
-    0x06D2 : 0x10006d2,
-    0x06C1 : 0x10006c1,
-    0x0492 : 0x1000492,
-    0x0493 : 0x1000493,
-    0x0496 : 0x1000496,
-    0x0497 : 0x1000497,
-    0x049A : 0x100049a,
-    0x049B : 0x100049b,
-    0x049C : 0x100049c,
-    0x049D : 0x100049d,
-    0x04A2 : 0x10004a2,
-    0x04A3 : 0x10004a3,
-    0x04AE : 0x10004ae,
-    0x04AF : 0x10004af,
-    0x04B0 : 0x10004b0,
-    0x04B1 : 0x10004b1,
-    0x04B2 : 0x10004b2,
-    0x04B3 : 0x10004b3,
-    0x04B6 : 0x10004b6,
-    0x04B7 : 0x10004b7,
-    0x04B8 : 0x10004b8,
-    0x04B9 : 0x10004b9,
-    0x04BA : 0x10004ba,
-    0x04BB : 0x10004bb,
-    0x04D8 : 0x10004d8,
-    0x04D9 : 0x10004d9,
-    0x04E2 : 0x10004e2,
-    0x04E3 : 0x10004e3,
-    0x04E8 : 0x10004e8,
-    0x04E9 : 0x10004e9,
-    0x04EE : 0x10004ee,
-    0x04EF : 0x10004ef,
-    0x0452 : 0x06a1,
-    0x0453 : 0x06a2,
-    0x0451 : 0x06a3,
-    0x0454 : 0x06a4,
-    0x0455 : 0x06a5,
-    0x0456 : 0x06a6,
-    0x0457 : 0x06a7,
-    0x0458 : 0x06a8,
-    0x0459 : 0x06a9,
-    0x045A : 0x06aa,
-    0x045B : 0x06ab,
-    0x045C : 0x06ac,
-    0x0491 : 0x06ad,
-    0x045E : 0x06ae,
-    0x045F : 0x06af,
-    0x2116 : 0x06b0,
-    0x0402 : 0x06b1,
-    0x0403 : 0x06b2,
-    0x0401 : 0x06b3,
-    0x0404 : 0x06b4,
-    0x0405 : 0x06b5,
-    0x0406 : 0x06b6,
-    0x0407 : 0x06b7,
-    0x0408 : 0x06b8,
-    0x0409 : 0x06b9,
-    0x040A : 0x06ba,
-    0x040B : 0x06bb,
-    0x040C : 0x06bc,
-    0x0490 : 0x06bd,
-    0x040E : 0x06be,
-    0x040F : 0x06bf,
-    0x044E : 0x06c0,
-    0x0430 : 0x06c1,
-    0x0431 : 0x06c2,
-    0x0446 : 0x06c3,
-    0x0434 : 0x06c4,
-    0x0435 : 0x06c5,
-    0x0444 : 0x06c6,
-    0x0433 : 0x06c7,
-    0x0445 : 0x06c8,
-    0x0438 : 0x06c9,
-    0x0439 : 0x06ca,
-    0x043A : 0x06cb,
-    0x043B : 0x06cc,
-    0x043C : 0x06cd,
-    0x043D : 0x06ce,
-    0x043E : 0x06cf,
-    0x043F : 0x06d0,
-    0x044F : 0x06d1,
-    0x0440 : 0x06d2,
-    0x0441 : 0x06d3,
-    0x0442 : 0x06d4,
-    0x0443 : 0x06d5,
-    0x0436 : 0x06d6,
-    0x0432 : 0x06d7,
-    0x044C : 0x06d8,
-    0x044B : 0x06d9,
-    0x0437 : 0x06da,
-    0x0448 : 0x06db,
-    0x044D : 0x06dc,
-    0x0449 : 0x06dd,
-    0x0447 : 0x06de,
-    0x044A : 0x06df,
-    0x042E : 0x06e0,
-    0x0410 : 0x06e1,
-    0x0411 : 0x06e2,
-    0x0426 : 0x06e3,
-    0x0414 : 0x06e4,
-    0x0415 : 0x06e5,
-    0x0424 : 0x06e6,
-    0x0413 : 0x06e7,
-    0x0425 : 0x06e8,
-    0x0418 : 0x06e9,
-    0x0419 : 0x06ea,
-    0x041A : 0x06eb,
-    0x041B : 0x06ec,
-    0x041C : 0x06ed,
-    0x041D : 0x06ee,
-    0x041E : 0x06ef,
-    0x041F : 0x06f0,
-    0x042F : 0x06f1,
-    0x0420 : 0x06f2,
-    0x0421 : 0x06f3,
-    0x0422 : 0x06f4,
-    0x0423 : 0x06f5,
-    0x0416 : 0x06f6,
-    0x0412 : 0x06f7,
-    0x042C : 0x06f8,
-    0x042B : 0x06f9,
-    0x0417 : 0x06fa,
-    0x0428 : 0x06fb,
-    0x042D : 0x06fc,
-    0x0429 : 0x06fd,
-    0x0427 : 0x06fe,
-    0x042A : 0x06ff,
-    0x0386 : 0x07a1,
-    0x0388 : 0x07a2,
-    0x0389 : 0x07a3,
-    0x038A : 0x07a4,
-    0x03AA : 0x07a5,
-    0x038C : 0x07a7,
-    0x038E : 0x07a8,
-    0x03AB : 0x07a9,
-    0x038F : 0x07ab,
-    0x0385 : 0x07ae,
-    0x2015 : 0x07af,
-    0x03AC : 0x07b1,
-    0x03AD : 0x07b2,
-    0x03AE : 0x07b3,
-    0x03AF : 0x07b4,
-    0x03CA : 0x07b5,
-    0x0390 : 0x07b6,
-    0x03CC : 0x07b7,
-    0x03CD : 0x07b8,
-    0x03CB : 0x07b9,
-    0x03B0 : 0x07ba,
-    0x03CE : 0x07bb,
-    0x0391 : 0x07c1,
-    0x0392 : 0x07c2,
-    0x0393 : 0x07c3,
-    0x0394 : 0x07c4,
-    0x0395 : 0x07c5,
-    0x0396 : 0x07c6,
-    0x0397 : 0x07c7,
-    0x0398 : 0x07c8,
-    0x0399 : 0x07c9,
-    0x039A : 0x07ca,
-    0x039B : 0x07cb,
-    0x039C : 0x07cc,
-    0x039D : 0x07cd,
-    0x039E : 0x07ce,
-    0x039F : 0x07cf,
-    0x03A0 : 0x07d0,
-    0x03A1 : 0x07d1,
-    0x03A3 : 0x07d2,
-    0x03A4 : 0x07d4,
-    0x03A5 : 0x07d5,
-    0x03A6 : 0x07d6,
-    0x03A7 : 0x07d7,
-    0x03A8 : 0x07d8,
-    0x03A9 : 0x07d9,
-    0x03B1 : 0x07e1,
-    0x03B2 : 0x07e2,
-    0x03B3 : 0x07e3,
-    0x03B4 : 0x07e4,
-    0x03B5 : 0x07e5,
-    0x03B6 : 0x07e6,
-    0x03B7 : 0x07e7,
-    0x03B8 : 0x07e8,
-    0x03B9 : 0x07e9,
-    0x03BA : 0x07ea,
-    0x03BB : 0x07eb,
-    0x03BC : 0x07ec,
-    0x03BD : 0x07ed,
-    0x03BE : 0x07ee,
-    0x03BF : 0x07ef,
-    0x03C0 : 0x07f0,
-    0x03C1 : 0x07f1,
-    0x03C3 : 0x07f2,
-    0x03C2 : 0x07f3,
-    0x03C4 : 0x07f4,
-    0x03C5 : 0x07f5,
-    0x03C6 : 0x07f6,
-    0x03C7 : 0x07f7,
-    0x03C8 : 0x07f8,
-    0x03C9 : 0x07f9,
-    0x23B7 : 0x08a1,
-    0x2320 : 0x08a4,
-    0x2321 : 0x08a5,
-    0x23A1 : 0x08a7,
-    0x23A3 : 0x08a8,
-    0x23A4 : 0x08a9,
-    0x23A6 : 0x08aa,
-    0x239B : 0x08ab,
-    0x239D : 0x08ac,
-    0x239E : 0x08ad,
-    0x23A0 : 0x08ae,
-    0x23A8 : 0x08af,
-    0x23AC : 0x08b0,
-    0x2264 : 0x08bc,
-    0x2260 : 0x08bd,
-    0x2265 : 0x08be,
-    0x222B : 0x08bf,
-    0x2234 : 0x08c0,
-    0x221D : 0x08c1,
-    0x221E : 0x08c2,
-    0x2207 : 0x08c5,
-    0x223C : 0x08c8,
-    0x2243 : 0x08c9,
-    0x21D4 : 0x08cd,
-    0x21D2 : 0x08ce,
-    0x2261 : 0x08cf,
-    0x221A : 0x08d6,
-    0x2282 : 0x08da,
-    0x2283 : 0x08db,
-    0x2229 : 0x08dc,
-    0x222A : 0x08dd,
-    0x2227 : 0x08de,
-    0x2228 : 0x08df,
-    0x2202 : 0x08ef,
-    0x0192 : 0x08f6,
-    0x2190 : 0x08fb,
-    0x2191 : 0x08fc,
-    0x2192 : 0x08fd,
-    0x2193 : 0x08fe,
-    0x25C6 : 0x09e0,
-    0x2592 : 0x09e1,
-    0x2409 : 0x09e2,
-    0x240C : 0x09e3,
-    0x240D : 0x09e4,
-    0x240A : 0x09e5,
-    0x2424 : 0x09e8,
-    0x240B : 0x09e9,
-    0x2518 : 0x09ea,
-    0x2510 : 0x09eb,
-    0x250C : 0x09ec,
-    0x2514 : 0x09ed,
-    0x253C : 0x09ee,
-    0x23BA : 0x09ef,
-    0x23BB : 0x09f0,
-    0x2500 : 0x09f1,
-    0x23BC : 0x09f2,
-    0x23BD : 0x09f3,
-    0x251C : 0x09f4,
-    0x2524 : 0x09f5,
-    0x2534 : 0x09f6,
-    0x252C : 0x09f7,
-    0x2502 : 0x09f8,
-    0x2003 : 0x0aa1,
-    0x2002 : 0x0aa2,
-    0x2004 : 0x0aa3,
-    0x2005 : 0x0aa4,
-    0x2007 : 0x0aa5,
-    0x2008 : 0x0aa6,
-    0x2009 : 0x0aa7,
-    0x200A : 0x0aa8,
-    0x2014 : 0x0aa9,
-    0x2013 : 0x0aaa,
-    0x2026 : 0x0aae,
-    0x2025 : 0x0aaf,
-    0x2153 : 0x0ab0,
-    0x2154 : 0x0ab1,
-    0x2155 : 0x0ab2,
-    0x2156 : 0x0ab3,
-    0x2157 : 0x0ab4,
-    0x2158 : 0x0ab5,
-    0x2159 : 0x0ab6,
-    0x215A : 0x0ab7,
-    0x2105 : 0x0ab8,
-    0x2012 : 0x0abb,
-    0x215B : 0x0ac3,
-    0x215C : 0x0ac4,
-    0x215D : 0x0ac5,
-    0x215E : 0x0ac6,
-    0x2122 : 0x0ac9,
-    0x2018 : 0x0ad0,
-    0x2019 : 0x0ad1,
-    0x201C : 0x0ad2,
-    0x201D : 0x0ad3,
-    0x211E : 0x0ad4,
-    0x2032 : 0x0ad6,
-    0x2033 : 0x0ad7,
-    0x271D : 0x0ad9,
-    0x2663 : 0x0aec,
-    0x2666 : 0x0aed,
-    0x2665 : 0x0aee,
-    0x2720 : 0x0af0,
-    0x2020 : 0x0af1,
-    0x2021 : 0x0af2,
-    0x2713 : 0x0af3,
-    0x2717 : 0x0af4,
-    0x266F : 0x0af5,
-    0x266D : 0x0af6,
-    0x2642 : 0x0af7,
-    0x2640 : 0x0af8,
-    0x260E : 0x0af9,
-    0x2315 : 0x0afa,
-    0x2117 : 0x0afb,
-    0x2038 : 0x0afc,
-    0x201A : 0x0afd,
-    0x201E : 0x0afe,
-    0x22A4 : 0x0bc2,
-    0x230A : 0x0bc4,
-    0x2218 : 0x0bca,
-    0x2395 : 0x0bcc,
-    0x22A5 : 0x0bce,
-    0x25CB : 0x0bcf,
-    0x2308 : 0x0bd3,
-    0x22A3 : 0x0bdc,
-    0x22A2 : 0x0bfc,
-    0x2017 : 0x0cdf,
-    0x05D0 : 0x0ce0,
-    0x05D1 : 0x0ce1,
-    0x05D2 : 0x0ce2,
-    0x05D3 : 0x0ce3,
-    0x05D4 : 0x0ce4,
-    0x05D5 : 0x0ce5,
-    0x05D6 : 0x0ce6,
-    0x05D7 : 0x0ce7,
-    0x05D8 : 0x0ce8,
-    0x05D9 : 0x0ce9,
-    0x05DA : 0x0cea,
-    0x05DB : 0x0ceb,
-    0x05DC : 0x0cec,
-    0x05DD : 0x0ced,
-    0x05DE : 0x0cee,
-    0x05DF : 0x0cef,
-    0x05E0 : 0x0cf0,
-    0x05E1 : 0x0cf1,
-    0x05E2 : 0x0cf2,
-    0x05E3 : 0x0cf3,
-    0x05E4 : 0x0cf4,
-    0x05E5 : 0x0cf5,
-    0x05E6 : 0x0cf6,
-    0x05E7 : 0x0cf7,
-    0x05E8 : 0x0cf8,
-    0x05E9 : 0x0cf9,
-    0x05EA : 0x0cfa,
-    0x0E01 : 0x0da1,
-    0x0E02 : 0x0da2,
-    0x0E03 : 0x0da3,
-    0x0E04 : 0x0da4,
-    0x0E05 : 0x0da5,
-    0x0E06 : 0x0da6,
-    0x0E07 : 0x0da7,
-    0x0E08 : 0x0da8,
-    0x0E09 : 0x0da9,
-    0x0E0A : 0x0daa,
-    0x0E0B : 0x0dab,
-    0x0E0C : 0x0dac,
-    0x0E0D : 0x0dad,
-    0x0E0E : 0x0dae,
-    0x0E0F : 0x0daf,
-    0x0E10 : 0x0db0,
-    0x0E11 : 0x0db1,
-    0x0E12 : 0x0db2,
-    0x0E13 : 0x0db3,
-    0x0E14 : 0x0db4,
-    0x0E15 : 0x0db5,
-    0x0E16 : 0x0db6,
-    0x0E17 : 0x0db7,
-    0x0E18 : 0x0db8,
-    0x0E19 : 0x0db9,
-    0x0E1A : 0x0dba,
-    0x0E1B : 0x0dbb,
-    0x0E1C : 0x0dbc,
-    0x0E1D : 0x0dbd,
-    0x0E1E : 0x0dbe,
-    0x0E1F : 0x0dbf,
-    0x0E20 : 0x0dc0,
-    0x0E21 : 0x0dc1,
-    0x0E22 : 0x0dc2,
-    0x0E23 : 0x0dc3,
-    0x0E24 : 0x0dc4,
-    0x0E25 : 0x0dc5,
-    0x0E26 : 0x0dc6,
-    0x0E27 : 0x0dc7,
-    0x0E28 : 0x0dc8,
-    0x0E29 : 0x0dc9,
-    0x0E2A : 0x0dca,
-    0x0E2B : 0x0dcb,
-    0x0E2C : 0x0dcc,
-    0x0E2D : 0x0dcd,
-    0x0E2E : 0x0dce,
-    0x0E2F : 0x0dcf,
-    0x0E30 : 0x0dd0,
-    0x0E31 : 0x0dd1,
-    0x0E32 : 0x0dd2,
-    0x0E33 : 0x0dd3,
-    0x0E34 : 0x0dd4,
-    0x0E35 : 0x0dd5,
-    0x0E36 : 0x0dd6,
-    0x0E37 : 0x0dd7,
-    0x0E38 : 0x0dd8,
-    0x0E39 : 0x0dd9,
-    0x0E3A : 0x0dda,
-    0x0E3F : 0x0ddf,
-    0x0E40 : 0x0de0,
-    0x0E41 : 0x0de1,
-    0x0E42 : 0x0de2,
-    0x0E43 : 0x0de3,
-    0x0E44 : 0x0de4,
-    0x0E45 : 0x0de5,
-    0x0E46 : 0x0de6,
-    0x0E47 : 0x0de7,
-    0x0E48 : 0x0de8,
-    0x0E49 : 0x0de9,
-    0x0E4A : 0x0dea,
-    0x0E4B : 0x0deb,
-    0x0E4C : 0x0dec,
-    0x0E4D : 0x0ded,
-    0x0E50 : 0x0df0,
-    0x0E51 : 0x0df1,
-    0x0E52 : 0x0df2,
-    0x0E53 : 0x0df3,
-    0x0E54 : 0x0df4,
-    0x0E55 : 0x0df5,
-    0x0E56 : 0x0df6,
-    0x0E57 : 0x0df7,
-    0x0E58 : 0x0df8,
-    0x0E59 : 0x0df9,
-    0x0587 : 0x1000587,
-    0x0589 : 0x1000589,
-    0x055D : 0x100055d,
-    0x058A : 0x100058a,
-    0x055C : 0x100055c,
-    0x055B : 0x100055b,
-    0x055E : 0x100055e,
-    0x0531 : 0x1000531,
-    0x0561 : 0x1000561,
-    0x0532 : 0x1000532,
-    0x0562 : 0x1000562,
-    0x0533 : 0x1000533,
-    0x0563 : 0x1000563,
-    0x0534 : 0x1000534,
-    0x0564 : 0x1000564,
-    0x0535 : 0x1000535,
-    0x0565 : 0x1000565,
-    0x0536 : 0x1000536,
-    0x0566 : 0x1000566,
-    0x0537 : 0x1000537,
-    0x0567 : 0x1000567,
-    0x0538 : 0x1000538,
-    0x0568 : 0x1000568,
-    0x0539 : 0x1000539,
-    0x0569 : 0x1000569,
-    0x053A : 0x100053a,
-    0x056A : 0x100056a,
-    0x053B : 0x100053b,
-    0x056B : 0x100056b,
-    0x053C : 0x100053c,
-    0x056C : 0x100056c,
-    0x053D : 0x100053d,
-    0x056D : 0x100056d,
-    0x053E : 0x100053e,
-    0x056E : 0x100056e,
-    0x053F : 0x100053f,
-    0x056F : 0x100056f,
-    0x0540 : 0x1000540,
-    0x0570 : 0x1000570,
-    0x0541 : 0x1000541,
-    0x0571 : 0x1000571,
-    0x0542 : 0x1000542,
-    0x0572 : 0x1000572,
-    0x0543 : 0x1000543,
-    0x0573 : 0x1000573,
-    0x0544 : 0x1000544,
-    0x0574 : 0x1000574,
-    0x0545 : 0x1000545,
-    0x0575 : 0x1000575,
-    0x0546 : 0x1000546,
-    0x0576 : 0x1000576,
-    0x0547 : 0x1000547,
-    0x0577 : 0x1000577,
-    0x0548 : 0x1000548,
-    0x0578 : 0x1000578,
-    0x0549 : 0x1000549,
-    0x0579 : 0x1000579,
-    0x054A : 0x100054a,
-    0x057A : 0x100057a,
-    0x054B : 0x100054b,
-    0x057B : 0x100057b,
-    0x054C : 0x100054c,
-    0x057C : 0x100057c,
-    0x054D : 0x100054d,
-    0x057D : 0x100057d,
-    0x054E : 0x100054e,
-    0x057E : 0x100057e,
-    0x054F : 0x100054f,
-    0x057F : 0x100057f,
-    0x0550 : 0x1000550,
-    0x0580 : 0x1000580,
-    0x0551 : 0x1000551,
-    0x0581 : 0x1000581,
-    0x0552 : 0x1000552,
-    0x0582 : 0x1000582,
-    0x0553 : 0x1000553,
-    0x0583 : 0x1000583,
-    0x0554 : 0x1000554,
-    0x0584 : 0x1000584,
-    0x0555 : 0x1000555,
-    0x0585 : 0x1000585,
-    0x0556 : 0x1000556,
-    0x0586 : 0x1000586,
-    0x055A : 0x100055a,
-    0x10D0 : 0x10010d0,
-    0x10D1 : 0x10010d1,
-    0x10D2 : 0x10010d2,
-    0x10D3 : 0x10010d3,
-    0x10D4 : 0x10010d4,
-    0x10D5 : 0x10010d5,
-    0x10D6 : 0x10010d6,
-    0x10D7 : 0x10010d7,
-    0x10D8 : 0x10010d8,
-    0x10D9 : 0x10010d9,
-    0x10DA : 0x10010da,
-    0x10DB : 0x10010db,
-    0x10DC : 0x10010dc,
-    0x10DD : 0x10010dd,
-    0x10DE : 0x10010de,
-    0x10DF : 0x10010df,
-    0x10E0 : 0x10010e0,
-    0x10E1 : 0x10010e1,
-    0x10E2 : 0x10010e2,
-    0x10E3 : 0x10010e3,
-    0x10E4 : 0x10010e4,
-    0x10E5 : 0x10010e5,
-    0x10E6 : 0x10010e6,
-    0x10E7 : 0x10010e7,
-    0x10E8 : 0x10010e8,
-    0x10E9 : 0x10010e9,
-    0x10EA : 0x10010ea,
-    0x10EB : 0x10010eb,
-    0x10EC : 0x10010ec,
-    0x10ED : 0x10010ed,
-    0x10EE : 0x10010ee,
-    0x10EF : 0x10010ef,
-    0x10F0 : 0x10010f0,
-    0x10F1 : 0x10010f1,
-    0x10F2 : 0x10010f2,
-    0x10F3 : 0x10010f3,
-    0x10F4 : 0x10010f4,
-    0x10F5 : 0x10010f5,
-    0x10F6 : 0x10010f6,
-    0x1E8A : 0x1001e8a,
-    0x012C : 0x100012c,
-    0x01B5 : 0x10001b5,
-    0x01E6 : 0x10001e6,
-    0x01D2 : 0x10001d1,
-    0x019F : 0x100019f,
-    0x1E8B : 0x1001e8b,
-    0x012D : 0x100012d,
-    0x01B6 : 0x10001b6,
-    0x01E7 : 0x10001e7,
-    0x01D2 : 0x10001d2,
-    0x0275 : 0x1000275,
-    0x018F : 0x100018f,
-    0x0259 : 0x1000259,
-    0x1E36 : 0x1001e36,
-    0x1E37 : 0x1001e37,
-    0x1EA0 : 0x1001ea0,
-    0x1EA1 : 0x1001ea1,
-    0x1EA2 : 0x1001ea2,
-    0x1EA3 : 0x1001ea3,
-    0x1EA4 : 0x1001ea4,
-    0x1EA5 : 0x1001ea5,
-    0x1EA6 : 0x1001ea6,
-    0x1EA7 : 0x1001ea7,
-    0x1EA8 : 0x1001ea8,
-    0x1EA9 : 0x1001ea9,
-    0x1EAA : 0x1001eaa,
-    0x1EAB : 0x1001eab,
-    0x1EAC : 0x1001eac,
-    0x1EAD : 0x1001ead,
-    0x1EAE : 0x1001eae,
-    0x1EAF : 0x1001eaf,
-    0x1EB0 : 0x1001eb0,
-    0x1EB1 : 0x1001eb1,
-    0x1EB2 : 0x1001eb2,
-    0x1EB3 : 0x1001eb3,
-    0x1EB4 : 0x1001eb4,
-    0x1EB5 : 0x1001eb5,
-    0x1EB6 : 0x1001eb6,
-    0x1EB7 : 0x1001eb7,
-    0x1EB8 : 0x1001eb8,
-    0x1EB9 : 0x1001eb9,
-    0x1EBA : 0x1001eba,
-    0x1EBB : 0x1001ebb,
-    0x1EBC : 0x1001ebc,
-    0x1EBD : 0x1001ebd,
-    0x1EBE : 0x1001ebe,
-    0x1EBF : 0x1001ebf,
-    0x1EC0 : 0x1001ec0,
-    0x1EC1 : 0x1001ec1,
-    0x1EC2 : 0x1001ec2,
-    0x1EC3 : 0x1001ec3,
-    0x1EC4 : 0x1001ec4,
-    0x1EC5 : 0x1001ec5,
-    0x1EC6 : 0x1001ec6,
-    0x1EC7 : 0x1001ec7,
-    0x1EC8 : 0x1001ec8,
-    0x1EC9 : 0x1001ec9,
-    0x1ECA : 0x1001eca,
-    0x1ECB : 0x1001ecb,
-    0x1ECC : 0x1001ecc,
-    0x1ECD : 0x1001ecd,
-    0x1ECE : 0x1001ece,
-    0x1ECF : 0x1001ecf,
-    0x1ED0 : 0x1001ed0,
-    0x1ED1 : 0x1001ed1,
-    0x1ED2 : 0x1001ed2,
-    0x1ED3 : 0x1001ed3,
-    0x1ED4 : 0x1001ed4,
-    0x1ED5 : 0x1001ed5,
-    0x1ED6 : 0x1001ed6,
-    0x1ED7 : 0x1001ed7,
-    0x1ED8 : 0x1001ed8,
-    0x1ED9 : 0x1001ed9,
-    0x1EDA : 0x1001eda,
-    0x1EDB : 0x1001edb,
-    0x1EDC : 0x1001edc,
-    0x1EDD : 0x1001edd,
-    0x1EDE : 0x1001ede,
-    0x1EDF : 0x1001edf,
-    0x1EE0 : 0x1001ee0,
-    0x1EE1 : 0x1001ee1,
-    0x1EE2 : 0x1001ee2,
-    0x1EE3 : 0x1001ee3,
-    0x1EE4 : 0x1001ee4,
-    0x1EE5 : 0x1001ee5,
-    0x1EE6 : 0x1001ee6,
-    0x1EE7 : 0x1001ee7,
-    0x1EE8 : 0x1001ee8,
-    0x1EE9 : 0x1001ee9,
-    0x1EEA : 0x1001eea,
-    0x1EEB : 0x1001eeb,
-    0x1EEC : 0x1001eec,
-    0x1EED : 0x1001eed,
-    0x1EEE : 0x1001eee,
-    0x1EEF : 0x1001eef,
-    0x1EF0 : 0x1001ef0,
-    0x1EF1 : 0x1001ef1,
-    0x1EF4 : 0x1001ef4,
-    0x1EF5 : 0x1001ef5,
-    0x1EF6 : 0x1001ef6,
-    0x1EF7 : 0x1001ef7,
-    0x1EF8 : 0x1001ef8,
-    0x1EF9 : 0x1001ef9,
-    0x01A0 : 0x10001a0,
-    0x01A1 : 0x10001a1,
-    0x01AF : 0x10001af,
-    0x01B0 : 0x10001b0,
-    0x20A0 : 0x10020a0,
-    0x20A1 : 0x10020a1,
-    0x20A2 : 0x10020a2,
-    0x20A3 : 0x10020a3,
-    0x20A4 : 0x10020a4,
-    0x20A5 : 0x10020a5,
-    0x20A6 : 0x10020a6,
-    0x20A7 : 0x10020a7,
-    0x20A8 : 0x10020a8,
-    0x20A9 : 0x10020a9,
-    0x20AA : 0x10020aa,
-    0x20AB : 0x10020ab,
-    0x20AC : 0x20ac,
-    0x2070 : 0x1002070,
-    0x2074 : 0x1002074,
-    0x2075 : 0x1002075,
-    0x2076 : 0x1002076,
-    0x2077 : 0x1002077,
-    0x2078 : 0x1002078,
-    0x2079 : 0x1002079,
-    0x2080 : 0x1002080,
-    0x2081 : 0x1002081,
-    0x2082 : 0x1002082,
-    0x2083 : 0x1002083,
-    0x2084 : 0x1002084,
-    0x2085 : 0x1002085,
-    0x2086 : 0x1002086,
-    0x2087 : 0x1002087,
-    0x2088 : 0x1002088,
-    0x2089 : 0x1002089,
-    0x2202 : 0x1002202,
-    0x2205 : 0x1002205,
-    0x2208 : 0x1002208,
-    0x2209 : 0x1002209,
-    0x220B : 0x100220B,
-    0x221A : 0x100221A,
-    0x221B : 0x100221B,
-    0x221C : 0x100221C,
-    0x222C : 0x100222C,
-    0x222D : 0x100222D,
-    0x2235 : 0x1002235,
-    0x2245 : 0x1002248,
-    0x2247 : 0x1002247,
-    0x2262 : 0x1002262,
-    0x2263 : 0x1002263,
-    0x2800 : 0x1002800,
-    0x2801 : 0x1002801,
-    0x2802 : 0x1002802,
-    0x2803 : 0x1002803,
-    0x2804 : 0x1002804,
-    0x2805 : 0x1002805,
-    0x2806 : 0x1002806,
-    0x2807 : 0x1002807,
-    0x2808 : 0x1002808,
-    0x2809 : 0x1002809,
-    0x280a : 0x100280a,
-    0x280b : 0x100280b,
-    0x280c : 0x100280c,
-    0x280d : 0x100280d,
-    0x280e : 0x100280e,
-    0x280f : 0x100280f,
-    0x2810 : 0x1002810,
-    0x2811 : 0x1002811,
-    0x2812 : 0x1002812,
-    0x2813 : 0x1002813,
-    0x2814 : 0x1002814,
-    0x2815 : 0x1002815,
-    0x2816 : 0x1002816,
-    0x2817 : 0x1002817,
-    0x2818 : 0x1002818,
-    0x2819 : 0x1002819,
-    0x281a : 0x100281a,
-    0x281b : 0x100281b,
-    0x281c : 0x100281c,
-    0x281d : 0x100281d,
-    0x281e : 0x100281e,
-    0x281f : 0x100281f,
-    0x2820 : 0x1002820,
-    0x2821 : 0x1002821,
-    0x2822 : 0x1002822,
-    0x2823 : 0x1002823,
-    0x2824 : 0x1002824,
-    0x2825 : 0x1002825,
-    0x2826 : 0x1002826,
-    0x2827 : 0x1002827,
-    0x2828 : 0x1002828,
-    0x2829 : 0x1002829,
-    0x282a : 0x100282a,
-    0x282b : 0x100282b,
-    0x282c : 0x100282c,
-    0x282d : 0x100282d,
-    0x282e : 0x100282e,
-    0x282f : 0x100282f,
-    0x2830 : 0x1002830,
-    0x2831 : 0x1002831,
-    0x2832 : 0x1002832,
-    0x2833 : 0x1002833,
-    0x2834 : 0x1002834,
-    0x2835 : 0x1002835,
-    0x2836 : 0x1002836,
-    0x2837 : 0x1002837,
-    0x2838 : 0x1002838,
-    0x2839 : 0x1002839,
-    0x283a : 0x100283a,
-    0x283b : 0x100283b,
-    0x283c : 0x100283c,
-    0x283d : 0x100283d,
-    0x283e : 0x100283e,
-    0x283f : 0x100283f,
-    0x2840 : 0x1002840,
-    0x2841 : 0x1002841,
-    0x2842 : 0x1002842,
-    0x2843 : 0x1002843,
-    0x2844 : 0x1002844,
-    0x2845 : 0x1002845,
-    0x2846 : 0x1002846,
-    0x2847 : 0x1002847,
-    0x2848 : 0x1002848,
-    0x2849 : 0x1002849,
-    0x284a : 0x100284a,
-    0x284b : 0x100284b,
-    0x284c : 0x100284c,
-    0x284d : 0x100284d,
-    0x284e : 0x100284e,
-    0x284f : 0x100284f,
-    0x2850 : 0x1002850,
-    0x2851 : 0x1002851,
-    0x2852 : 0x1002852,
-    0x2853 : 0x1002853,
-    0x2854 : 0x1002854,
-    0x2855 : 0x1002855,
-    0x2856 : 0x1002856,
-    0x2857 : 0x1002857,
-    0x2858 : 0x1002858,
-    0x2859 : 0x1002859,
-    0x285a : 0x100285a,
-    0x285b : 0x100285b,
-    0x285c : 0x100285c,
-    0x285d : 0x100285d,
-    0x285e : 0x100285e,
-    0x285f : 0x100285f,
-    0x2860 : 0x1002860,
-    0x2861 : 0x1002861,
-    0x2862 : 0x1002862,
-    0x2863 : 0x1002863,
-    0x2864 : 0x1002864,
-    0x2865 : 0x1002865,
-    0x2866 : 0x1002866,
-    0x2867 : 0x1002867,
-    0x2868 : 0x1002868,
-    0x2869 : 0x1002869,
-    0x286a : 0x100286a,
-    0x286b : 0x100286b,
-    0x286c : 0x100286c,
-    0x286d : 0x100286d,
-    0x286e : 0x100286e,
-    0x286f : 0x100286f,
-    0x2870 : 0x1002870,
-    0x2871 : 0x1002871,
-    0x2872 : 0x1002872,
-    0x2873 : 0x1002873,
-    0x2874 : 0x1002874,
-    0x2875 : 0x1002875,
-    0x2876 : 0x1002876,
-    0x2877 : 0x1002877,
-    0x2878 : 0x1002878,
-    0x2879 : 0x1002879,
-    0x287a : 0x100287a,
-    0x287b : 0x100287b,
-    0x287c : 0x100287c,
-    0x287d : 0x100287d,
-    0x287e : 0x100287e,
-    0x287f : 0x100287f,
-    0x2880 : 0x1002880,
-    0x2881 : 0x1002881,
-    0x2882 : 0x1002882,
-    0x2883 : 0x1002883,
-    0x2884 : 0x1002884,
-    0x2885 : 0x1002885,
-    0x2886 : 0x1002886,
-    0x2887 : 0x1002887,
-    0x2888 : 0x1002888,
-    0x2889 : 0x1002889,
-    0x288a : 0x100288a,
-    0x288b : 0x100288b,
-    0x288c : 0x100288c,
-    0x288d : 0x100288d,
-    0x288e : 0x100288e,
-    0x288f : 0x100288f,
-    0x2890 : 0x1002890,
-    0x2891 : 0x1002891,
-    0x2892 : 0x1002892,
-    0x2893 : 0x1002893,
-    0x2894 : 0x1002894,
-    0x2895 : 0x1002895,
-    0x2896 : 0x1002896,
-    0x2897 : 0x1002897,
-    0x2898 : 0x1002898,
-    0x2899 : 0x1002899,
-    0x289a : 0x100289a,
-    0x289b : 0x100289b,
-    0x289c : 0x100289c,
-    0x289d : 0x100289d,
-    0x289e : 0x100289e,
-    0x289f : 0x100289f,
-    0x28a0 : 0x10028a0,
-    0x28a1 : 0x10028a1,
-    0x28a2 : 0x10028a2,
-    0x28a3 : 0x10028a3,
-    0x28a4 : 0x10028a4,
-    0x28a5 : 0x10028a5,
-    0x28a6 : 0x10028a6,
-    0x28a7 : 0x10028a7,
-    0x28a8 : 0x10028a8,
-    0x28a9 : 0x10028a9,
-    0x28aa : 0x10028aa,
-    0x28ab : 0x10028ab,
-    0x28ac : 0x10028ac,
-    0x28ad : 0x10028ad,
-    0x28ae : 0x10028ae,
-    0x28af : 0x10028af,
-    0x28b0 : 0x10028b0,
-    0x28b1 : 0x10028b1,
-    0x28b2 : 0x10028b2,
-    0x28b3 : 0x10028b3,
-    0x28b4 : 0x10028b4,
-    0x28b5 : 0x10028b5,
-    0x28b6 : 0x10028b6,
-    0x28b7 : 0x10028b7,
-    0x28b8 : 0x10028b8,
-    0x28b9 : 0x10028b9,
-    0x28ba : 0x10028ba,
-    0x28bb : 0x10028bb,
-    0x28bc : 0x10028bc,
-    0x28bd : 0x10028bd,
-    0x28be : 0x10028be,
-    0x28bf : 0x10028bf,
-    0x28c0 : 0x10028c0,
-    0x28c1 : 0x10028c1,
-    0x28c2 : 0x10028c2,
-    0x28c3 : 0x10028c3,
-    0x28c4 : 0x10028c4,
-    0x28c5 : 0x10028c5,
-    0x28c6 : 0x10028c6,
-    0x28c7 : 0x10028c7,
-    0x28c8 : 0x10028c8,
-    0x28c9 : 0x10028c9,
-    0x28ca : 0x10028ca,
-    0x28cb : 0x10028cb,
-    0x28cc : 0x10028cc,
-    0x28cd : 0x10028cd,
-    0x28ce : 0x10028ce,
-    0x28cf : 0x10028cf,
-    0x28d0 : 0x10028d0,
-    0x28d1 : 0x10028d1,
-    0x28d2 : 0x10028d2,
-    0x28d3 : 0x10028d3,
-    0x28d4 : 0x10028d4,
-    0x28d5 : 0x10028d5,
-    0x28d6 : 0x10028d6,
-    0x28d7 : 0x10028d7,
-    0x28d8 : 0x10028d8,
-    0x28d9 : 0x10028d9,
-    0x28da : 0x10028da,
-    0x28db : 0x10028db,
-    0x28dc : 0x10028dc,
-    0x28dd : 0x10028dd,
-    0x28de : 0x10028de,
-    0x28df : 0x10028df,
-    0x28e0 : 0x10028e0,
-    0x28e1 : 0x10028e1,
-    0x28e2 : 0x10028e2,
-    0x28e3 : 0x10028e3,
-    0x28e4 : 0x10028e4,
-    0x28e5 : 0x10028e5,
-    0x28e6 : 0x10028e6,
-    0x28e7 : 0x10028e7,
-    0x28e8 : 0x10028e8,
-    0x28e9 : 0x10028e9,
-    0x28ea : 0x10028ea,
-    0x28eb : 0x10028eb,
-    0x28ec : 0x10028ec,
-    0x28ed : 0x10028ed,
-    0x28ee : 0x10028ee,
-    0x28ef : 0x10028ef,
-    0x28f0 : 0x10028f0,
-    0x28f1 : 0x10028f1,
-    0x28f2 : 0x10028f2,
-    0x28f3 : 0x10028f3,
-    0x28f4 : 0x10028f4,
-    0x28f5 : 0x10028f5,
-    0x28f6 : 0x10028f6,
-    0x28f7 : 0x10028f7,
-    0x28f8 : 0x10028f8,
-    0x28f9 : 0x10028f9,
-    0x28fa : 0x10028fa,
-    0x28fb : 0x10028fb,
-    0x28fc : 0x10028fc,
-    0x28fd : 0x10028fd,
-    0x28fe : 0x10028fe,
-    0x28ff : 0x10028ff
-};
--- a/include/mobile.css
+++ /dev/null
@@ -1,43 +0,0 @@
-html,body {
-    margin: 0px;
-    padding: 0px;
-    width: 100%;
-    height: 100%;
-}
-
-.flex-layout {
-    width: 100%;
-    height: 100%;
-
-    display: box;
-    display: -webkit-box;
-    display: -moz-box;
-    display: -ms-box;
-
-    box-orient: vertical;
-    -webkit-box-orient: vertical;
-    -moz-box-orient: vertical;
-    -ms-box-orient: vertical;
-
-    box-align: stretch;
-    -webkit-box-align: stretch;
-    -moz-box-align: stretch;
-    -ms-box-align: stretch;
-}
-.flex-box {
-    box-flex: 1;
-    -webkit-box-flex: 1;
-    -moz-box-flex: 1;
-    -ms-box-flex: 1;
-}
-
-.container {
-    margin: 0px;
-    padding: 0px;
-}
-
-.canvas {
-    position: absolute;
-    border-style: dotted;
-    border-width: 1px;
-}
--- a/include/playback.js
+++ b/include/playback.js
@@ -1,6 +1,6 @@
 /*
  * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
+ * Copyright (C) 2010 Joel Martin
  * Licensed under LGPL-3 (see LICENSE.LGPL-3)
  */
 
--- a/include/rfb.js
+++ b/include/rfb.js
@@ -1,30 +1,29 @@
 /*
  * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
+ * Copyright (C) 2010 Joel Martin
  * Licensed under LGPL-3 (see LICENSE.txt)
  *
  * See README.md for usage and integration instructions.
  */
 
 /*jslint white: false, browser: true, bitwise: false, plusplus: false */
-/*global window, Util, Display, Keyboard, Mouse, Websock, Websock_native, Base64, DES, noVNC_logo */
+/*global window, Util, Canvas, Websock, Websock_native, Base64, DES, noVNC_logo */
 
 
-function RFB(defaults) {
-"use strict";
+function RFB(conf) {
+    "use strict";
 
-var that           = {},  // Public API methods
-    conf           = {},  // Configuration attributes
+conf               = conf || {}; // Configuration
+var that           = {},         // Public API interface
 
     // Pre-declare private functions used before definitions (jslint)
     init_vars, updateState, fail, handle_message,
     init_msg, normal_msg, framebufferUpdate, print_stats,
 
-    pixelFormat, clientEncodings, fbUpdateRequest, fbUpdateRequests,
+    pixelFormat, clientEncodings, fbUpdateRequest,
     keyEvent, pointerEvent, clientCutText,
 
     extract_data_uri, scan_tight_imgQ,
-    keyPress, mouseButton, mouseMove,
 
     checkEvents,  // Overridable for testing
 
@@ -32,10 +31,10 @@
     //
     // Private RFB namespace variables
     //
+    nova_token      = '',
     rfb_host       = '',
     rfb_port       = 5900,
     rfb_password   = '',
-    rfb_uri        = '',
 
     rfb_state      = 'disconnected',
     rfb_version    = 0,
@@ -65,9 +64,7 @@
     encStats       = {},     // [rectCnt, rectCntTot]
 
     ws             = null,   // Websock object
-    display        = null,   // Display object
-    keyboard       = null,   // Keyboard input handler object
-    mouse          = null,   // Mouse input handler object
+    canvas         = null,   // Canvas object
     sendTimer      = null,   // Send Queue check timer
     connTimer      = null,   // connection timer
     disconnTimer   = null,   // disconnection timer
@@ -96,7 +93,7 @@
     fb_height      = 0,
     fb_name        = "",
 
-    scan_imgQ_rate = 40, // 25 times per second or so
+    scan_imgQ_rate = 100,
     last_req_time  = 0,
     rre_chunk_sz   = 100,
 
@@ -114,56 +111,48 @@
 
     test_mode        = false,
 
-    def_con_timeout  = Websock_native ? 2 : 5,
-
     /* Mouse state */
     mouse_buttonMask = 0,
     mouse_arr        = [];
 
-// Configuration attributes
-Util.conf_defaults(conf, that, defaults, [
-    ['target',             'wo', 'dom', null, 'VNC display rendering Canvas object'],
-    ['focusContainer',     'wo', 'dom', document, 'DOM element that captures keyboard input'],
-
-    ['encrypt',            'rw', 'bool', false, 'Use TLS/SSL/wss encryption'],
-    ['true_color',         'rw', 'bool', true,  'Request true color pixel data'],
-    ['local_cursor',       'rw', 'bool', false, 'Request locally rendered cursor'],
-    ['shared',             'rw', 'bool', true,  'Request shared mode'],
-
-    ['connectTimeout',     'rw', 'int', def_con_timeout, 'Time (s) to wait for connection'],
-    ['disconnectTimeout',  'rw', 'int', 3,    'Time (s) to wait for disconnection'],
-
-    ['check_rate',         'rw', 'int', 217,  'Timing (ms) of send/receive check'],
-    ['fbu_req_rate',       'rw', 'int', 1413, 'Timing (ms) of frameBufferUpdate requests'],
-
-    // Callback functions
-    ['onUpdateState',      'rw', 'func', function() { },
-        'onUpdateState(rfb, state, oldstate, statusMsg): RFB state update/change '],
-    ['onPasswordRequired', 'rw', 'func', function() { },
-        'onPasswordRequired(rfb): VNC password is required '],
-    ['onClipboard',        'rw', 'func', function() { },
-        'onClipboard(rfb, text): RFB clipboard contents received'],
-    ['onBell',             'rw', 'func', function() { },
-        'onBell(rfb): RFB Bell message received '],
-    ['onFBUReceive',       'rw', 'func', function() { },
-        'onFBUReceive(rfb, fbu): RFB FBU received but not yet processed '],
-    ['onFBUComplete',      'rw', 'func', function() { },
-        'onFBUComplete(rfb, fbu): RFB FBU received and processed '],
-
-    // These callback names are deprecated
-    ['updateState',        'rw', 'func', function() { },
-        'obsolete, use onUpdateState'],
-    ['clipboardReceive',   'rw', 'func', function() { },
-        'obsolete, use onClipboard']
-    ]);
 
+//
+// Configuration settings
+//
+function cdef(v, type, defval, desc) {
+    Util.conf_default(conf, that, v, type, defval, desc); }
+
+cdef('target',            'str', null, 'VNC viewport rendering Canvas');
+cdef('focusContainer',    'dom', document, 'Area that traps keyboard input');
+
+cdef('encrypt',         'bool', false, 'Use TLS/SSL/wss encryption');
+cdef('true_color',      'bool', true,  'Request true color pixel data');
+cdef('local_cursor',    'bool', false, 'Request locally rendered cursor');
+cdef('shared',          'bool', true,  'Request shared mode');
+
+if (Websock_native) {
+    cdef('connectTimeout',    'int', 2,    'Time (s) to wait for connection');
+} else {
+    cdef('connectTimeout',    'int', 5,    'Time (s) to wait for connection');
+}
+cdef('disconnectTimeout', 'int', 3,    'Time (s) to wait for disconnection');
+cdef('check_rate',        'int', 217,  'Timing (ms) of send/receive check');
+cdef('fbu_req_rate',      'int', 1413, 'Timing (ms) of frameBufferUpdate requests');
+
+cdef('updateState',
+     'func', function() { Util.Debug("updateState stub"); },
+     'callback: state update');
+cdef('clipboardReceive',
+     'func', function() { Util.Debug("clipboardReceive stub"); },
+     'callback: clipboard contents received');
 
-// Override/add some specific configuration getters/setters
+
+// Override/add some specific getters/setters
 that.set_local_cursor = function(cursor) {
     if ((!cursor) || (cursor in {'0':1, 'no':1, 'false':1})) {
         conf.local_cursor = false;
     } else {
-        if (display.get_cursor_uri()) {
+        if (canvas.get_cursor_uri()) {
             conf.local_cursor = true;
         } else {
             Util.Warn("Browser does not support local cursor");
@@ -171,12 +160,11 @@
     }
 };
 
-// These are fake configuration getters
-that.get_display = function() { return display; };
+that.get_canvas = function() {
+    return canvas;
+};
 
-that.get_keyboard = function() { return keyboard; };
 
-that.get_mouse = function() { return mouse; };
 
 
 
@@ -184,8 +172,7 @@
 // Setup routines
 //
 
-// Create the public API interface and initialize values that stay
-// constant across connect/disconnect
+// Create the public API interface and initialize
 function constructor() {
     var i, rmode;
     Util.Debug(">> RFB.constructor");
@@ -196,49 +183,15 @@
         encNames[encodings[i][1]] = encodings[i][0];
         encStats[encodings[i][1]] = [0, 0];
     }
-    // Initialize display, mouse, keyboard, and websock
+    // Initialize canvas
     try {
-        display   = new Display({'target': conf.target});
+        canvas = new Canvas({'target': conf.target,
+                             'focusContainer': conf.focusContainer});
     } catch (exc) {
-        Util.Error("Display exception: " + exc);
-        updateState('fatal', "No working Display");
-    }
-    keyboard = new Keyboard({'target': conf.focusContainer,
-                                'onKeyPress': keyPress});
-    mouse    = new Mouse({'target': conf.target,
-                            'onMouseButton': mouseButton,
-                            'onMouseMove': mouseMove});
-
-    rmode = display.get_render_mode();
-
-    if (typeof noVNC_logo !== 'undefined') {
-        display.set_logo(noVNC_logo);
+        Util.Error("Canvas exception: " + exc);
+        updateState('fatal', "No working Canvas");
     }
-
-    ws = new Websock();
-    ws.on('message', handle_message);
-    ws.on('open', function() {
-        if (rfb_state === "connect") {
-            updateState('ProtocolVersion', "Starting VNC handshake");
-        } else {
-            fail("Got unexpected WebSockets connection");
-        }
-    });
-    ws.on('close', function() {
-        if (rfb_state === 'disconnect') {
-            updateState('disconnected', 'VNC disconnected');
-        } else if (rfb_state === 'ProtocolVersion') {
-            fail('Failed to connect to server');
-        } else if (rfb_state in {'failed':1, 'disconnected':1}) {
-            Util.Error("Received onclose while disconnected");
-        } else  {
-            fail('Server disconnected');
-        }
-    });
-    ws.on('error', function(e) {
-        fail("WebSock error: " + e);
-    });
-
+    rmode = canvas.get_render_mode();
 
     init_vars();
 
@@ -251,7 +204,7 @@
                   Util.Flash.version);
         if ((! Util.Flash) ||
             (Util.Flash.version < 9)) {
-            updateState('fatal', "WebSockets or <a href='http://get.adobe.com/flashplayer'>Adobe Flash<\/a> is required");
+            updateState('fatal', "WebSockets or Adobe Flash is required");
         } else if (document.location.href.substr(0, 7) === "file://") {
             updateState('fatal',
                     "'file://' URL is incompatible with Adobe Flash");
@@ -273,20 +226,43 @@
     } else {
         uri = "ws://";
     }
-    uri += rfb_host + ":" + rfb_port + "/" + rfb_uri;
+    uri += document.location.host + "/data?host=" + rfb_host + "&port=" + rfb_port + "&token=" + nova_token;
     Util.Info("connecting to " + uri);
     ws.open(uri);
 
     Util.Debug("<< RFB.connect");
 }
 
-// Initialize variables that are reset before each connection
 init_vars = function() {
     var i;
 
     /* Reset state */
+    ws = new Websock();
     ws.init();
 
+    ws.on('message', handle_message);
+    ws.on('open', function() {
+        if (rfb_state === "connect") {
+            updateState('ProtocolVersion', "Starting VNC handshake");
+        } else {
+            fail("Got unexpected WebSockets connection");
+        }
+    });
+    ws.on('close', function() {
+        if (rfb_state === 'disconnect') {
+            updateState('disconnected', 'VNC disconnected');
+        } else if (rfb_state === 'ProtocolVersion') {
+            fail('Failed to connect to server');
+        } else if (rfb_state in {'failed':1, 'disconnected':1}) {
+            Util.Error("Received onclose while disconnected");
+        } else  {
+            fail('Server disconnected');
+        }
+    });
+    ws.on('error', function(e) {
+        fail("WebSock error: " + e);
+    });
+
     FBU.rects        = 0;
     FBU.subrects     = 0;  // RRE and HEXTILE
     FBU.lines        = 0;  // RAW
@@ -328,23 +304,25 @@
 
 
 /*
- * Page states:
- *   loaded       - page load, equivalent to disconnected
+ * Running states:
  *   disconnected - idle state
- *   connect      - starting to connect (to ProtocolVersion)
  *   normal       - connected
- *   disconnect   - starting to disconnect
- *   failed       - abnormal disconnect
+ *
+ * Page states:
+ *   loaded       - page load, equivalent to disconnected
+ *   connect      - starting initialization
+ *   disconnect   - starting disconnect
+ *   failed       - abnormal transition to disconnected
  *   fatal        - failed to load page, or fatal error
  *
- * RFB protocol initialization states:
- *   ProtocolVersion 
+ * VNC initialization states:
+ *   ProtocolVersion
  *   Security
  *   Authentication
  *   password     - waiting for password, not part of RFB
  *   SecurityResult
  *   ClientInitialization - not triggered by server message
- *   ServerInitialization (to normal)
+ *   ServerInitialization
  */
 updateState = function(state, statusMsg) {
     var func, cmsg, oldstate = rfb_state;
@@ -371,15 +349,20 @@
             msgTimer = null;
         }
 
-        if (display && display.get_context()) {
-            keyboard.ungrab();
-            mouse.ungrab();
-            display.defaultCursor();
+        if (canvas && canvas.getContext()) {
+            canvas.stop();
+            if (Util.get_logging() !== 'debug') {
+                canvas.clear();
+            }
+
             if ((Util.get_logging() !== 'debug') ||
                 (state === 'loaded')) {
                 // Show noVNC logo on load and when disconnected if
                 // debug is off
-                display.clear();
+                if (noVNC_logo) {
+                    canvas.resize(noVNC_logo.width, noVNC_logo.height);
+                    canvas.blitStringImage(noVNC_logo.data, 0, 0);
+                }
             }
         }
 
@@ -478,11 +461,9 @@
 
     if ((oldstate === 'failed') && (state === 'disconnected')) {
         // Leave the failed message
-        conf.updateState(that, state, oldstate); // Obsolete
-        conf.onUpdateState(that, state, oldstate);
+        conf.updateState(that, state, oldstate);
     } else {
-        conf.updateState(that, state, oldstate, statusMsg); // Obsolete
-        conf.onUpdateState(that, state, oldstate, statusMsg);
+        conf.updateState(that, state, oldstate, statusMsg);
     }
 };
 
@@ -535,10 +516,10 @@
 
 function flushClient() {
     if (mouse_arr.length > 0) {
-        //send(mouse_arr.concat(fbUpdateRequests()));
+        //send(mouse_arr.concat(fbUpdateRequest(1)));
         ws.send(mouse_arr);
         setTimeout(function() {
-                ws.send(fbUpdateRequests());
+                ws.send(fbUpdateRequest(1));
             }, 50);
 
         mouse_arr = [];
@@ -556,21 +537,21 @@
             now = new Date().getTime();
             if (now > last_req_time + conf.fbu_req_rate) {
                 last_req_time = now;
-                ws.send(fbUpdateRequests());
+                ws.send(fbUpdateRequest(1));
             }
         }
     }
     setTimeout(checkEvents, conf.check_rate);
 };
 
-keyPress = function(keysym, down) {
+function keyPress(keysym, down) {
     var arr;
     arr = keyEvent(keysym, down);
-    arr = arr.concat(fbUpdateRequests());
+    arr = arr.concat(fbUpdateRequest(1));
     ws.send(arr);
-};
+}
 
-mouseButton = function(x, y, down, bmask) {
+function mouseButton(x, y, down, bmask) {
     if (down) {
         mouse_buttonMask |= bmask;
     } else {
@@ -578,12 +559,12 @@
     }
     mouse_arr = mouse_arr.concat( pointerEvent(x, y) );
     flushClient();
-};
+}
 
-mouseMove = function(x, y) {
+function mouseMove(x, y) {
     //Util.Debug('>> mouseMove ' + x + "," + y);
     mouse_arr = mouse_arr.concat( pointerEvent(x, y) );
-};
+}
 
 
 //
@@ -596,8 +577,7 @@
 
     var strlen, reason, length, sversion, cversion,
         i, types, num_types, challenge, response, bpp, depth,
-        big_endian, red_max, green_max, blue_max, red_shift,
-        green_shift, blue_shift, true_color, name_length;
+        big_endian, true_color, name_length;
 
     //Util.Debug("ws.rQ (" + ws.rQlen() + ") " + ws.rQslice(0));
     switch (rfb_state) {
@@ -686,10 +666,7 @@
                 break;
             case 2:  // VNC authentication
                 if (rfb_password.length === 0) {
-                    // Notify via both callbacks since it is kind of
-                    // a RFB state change and a UI interface issue.
                     updateState('password', "Password Required");
-                    conf.onPasswordRequired(that);
                     return;
                 }
                 if (ws.rQwait("auth challenge", 16)) { return false; }
@@ -757,34 +734,18 @@
         big_endian     = ws.rQshift8();
         true_color     = ws.rQshift8();
 
-        red_max        = ws.rQshift16();
-        green_max      = ws.rQshift16();
-        blue_max       = ws.rQshift16();
-        red_shift      = ws.rQshift8();
-        green_shift    = ws.rQshift8();
-        blue_shift     = ws.rQshift8();
-        ws.rQshiftStr(3); // padding
-
         Util.Info("Screen: " + fb_width + "x" + fb_height + 
                   ", bpp: " + bpp + ", depth: " + depth +
                   ", big_endian: " + big_endian +
-                  ", true_color: " + true_color +
-                  ", red_max: " + red_max +
-                  ", green_max: " + green_max +
-                  ", blue_max: " + blue_max +
-                  ", red_shift: " + red_shift +
-                  ", green_shift: " + green_shift +
-                  ", blue_shift: " + blue_shift);
+                  ", true_color: " + true_color);
 
         /* Connection name/title */
+        ws.rQshiftStr(12);
         name_length   = ws.rQshift32();
         fb_name = ws.rQshiftStr(name_length);
 
-        display.set_true_color(conf.true_color);
-        display.resize(fb_width, fb_height);
-        display.viewportChange(0, 0, fb_width, fb_height);
-        keyboard.grab();
-        mouse.grab();
+        canvas.resize(fb_width, fb_height, conf.true_color);
+        canvas.start(keyPress, mouseButton, mouseMove);
 
         if (conf.true_color) {
             fb_Bpp           = 4;
@@ -796,7 +757,7 @@
 
         response = pixelFormat();
         response = response.concat(clientEncodings());
-        response = response.concat(fbUpdateRequests());
+        response = response.concat(fbUpdateRequest(0));
         timing.fbu_rt_start = (new Date()).getTime();
         ws.send(response);
         
@@ -819,7 +780,7 @@
 normal_msg = function() {
     //Util.Debug(">> normal_msg");
 
-    var ret = true, msg_type, length, text,
+    var ret = true, msg_type, length,
         c, first_colour, num_colours, red, green, blue;
 
     if (FBU.rects > 0) {
@@ -843,15 +804,13 @@
             //Util.Debug("red after: " + red);
             green = parseInt(ws.rQshift16() / 256, 10);
             blue = parseInt(ws.rQshift16() / 256, 10);
-            display.set_colourMap([red, green, blue], first_colour + c);
+            canvas.set_colourMap([red, green, blue], first_colour + c);
         }
-        Util.Debug("colourMap: " + display.get_colourMap());
         Util.Info("Registered " + num_colours + " colourMap entries");
-        //Util.Debug("colourMap: " + display.get_colourMap());
+        //Util.Debug("colourMap: " + canvas.get_colourMap());
         break;
     case 2:  // Bell
-        Util.Debug("Bell");
-        conf.onBell(that);
+        Util.Warn("Bell (unsupported)");
         break;
     case 3:  // ServerCutText
         Util.Debug("ServerCutText");
@@ -860,9 +819,7 @@
         length = ws.rQshift32();
         if (ws.rQwait("ServerCutText", length, 8)) { return false; }
 
-        text = ws.rQshiftStr(length);
-        conf.clipboardReceive(that, text); // Obsolete
-        conf.onClipboard(that, text);
+        conf.clipboardReceive(that, ws.rQshiftStr(length));
         break;
     default:
         fail("Disconnected: illegal server message type " + msg_type);
@@ -910,12 +867,6 @@
             FBU.encoding = parseInt((hdr[8] << 24) + (hdr[9] << 16) +
                                     (hdr[10] << 8) +  hdr[11], 10);
 
-            conf.onFBUReceive(that,
-                    {'x': FBU.x, 'y': FBU.y,
-                     'width': FBU.width, 'height': FBU.height,
-                     'encoding': FBU.encoding,
-                     'encodingName': encNames[FBU.encoding]});
-
             if (encNames[FBU.encoding]) {
                 // Debug:
                 /*
@@ -976,13 +927,6 @@
             return ret; // false ret means need more data
         }
     }
-
-    conf.onFBUComplete(that,
-            {'x': FBU.x, 'y': FBU.y,
-                'width': FBU.width, 'height': FBU.height,
-                'encoding': FBU.encoding,
-                'encodingName': encNames[FBU.encoding]});
-
     return true; // We finished this FBU
 };
 
@@ -1003,7 +947,7 @@
     cur_y = FBU.y + (FBU.height - FBU.lines);
     cur_height = Math.min(FBU.lines,
                           Math.floor(ws.rQlen()/(FBU.width * fb_Bpp)));
-    display.blitImage(FBU.x, cur_y, FBU.width, cur_height,
+    canvas.blitImage(FBU.x, cur_y, FBU.width, cur_height,
             ws.get_rQ(), ws.get_rQi());
     ws.rQshiftBytes(FBU.width * cur_height * fb_Bpp);
     FBU.lines -= cur_height;
@@ -1026,7 +970,7 @@
     if (ws.rQwait("COPYRECT", 4)) { return false; }
     old_x = ws.rQshift16();
     old_y = ws.rQshift16();
-    display.copyImage(old_x, old_y, FBU.x, FBU.y, FBU.width, FBU.height);
+    canvas.copyImage(old_x, old_y, FBU.x, FBU.y, FBU.width, FBU.height);
     FBU.rects -= 1;
     FBU.bytes = 0;
     return true;
@@ -1040,7 +984,7 @@
         if (ws.rQwait("RRE", 4+fb_Bpp)) { return false; }
         FBU.subrects = ws.rQshift32();
         color = ws.rQshiftBytes(fb_Bpp); // Background
-        display.fillRect(FBU.x, FBU.y, FBU.width, FBU.height, color);
+        canvas.fillRect(FBU.x, FBU.y, FBU.width, FBU.height, color);
     }
     while ((FBU.subrects > 0) && (ws.rQlen() >= (fb_Bpp + 8))) {
         color = ws.rQshiftBytes(fb_Bpp);
@@ -1048,7 +992,7 @@
         y = ws.rQshift16();
         width = ws.rQshift16();
         height = ws.rQshift16();
-        display.fillRect(FBU.x + x, FBU.y + y, width, height, color);
+        canvas.fillRect(FBU.x + x, FBU.y + y, width, height, color);
         FBU.subrects -= 1;
     }
     //Util.Debug("   display_rre: rects: " + FBU.rects +
@@ -1141,10 +1085,10 @@
                 /* Weird: ignore blanks after RAW */
                 Util.Debug("     Ignoring blank after RAW");
             } else {
-                display.fillRect(x, y, w, h, FBU.background);
+                canvas.fillRect(x, y, w, h, FBU.background);
             }
         } else if (FBU.subencoding & 0x01) { // Raw
-            display.blitImage(x, y, w, h, rQ, rQi);
+            canvas.blitImage(x, y, w, h, rQ, rQi);
             rQi += FBU.bytes - 1;
         } else {
             if (FBU.subencoding & 0x02) { // Background
@@ -1156,7 +1100,7 @@
                 rQi += fb_Bpp;
             }
 
-            tile = display.getTile(x, y, w, h, FBU.background);
+            tile = canvas.getTile(x, y, w, h, FBU.background);
             if (FBU.subencoding & 0x08) { // AnySubrects
                 subrects = rQ[rQi];
                 rQi += 1;
@@ -1177,10 +1121,10 @@
                     sw = (wh >> 4)   + 1;
                     sh = (wh & 0x0f) + 1;
 
-                    display.setSubTile(tile, sx, sy, sw, sh, color);
+                    canvas.setSubTile(tile, sx, sy, sw, sh, color);
                 }
             }
-            display.putTile(tile);
+            canvas.putTile(tile);
         }
         ws.set_rQi(rQi);
         FBU.lastsubencoding = FBU.subencoding;
@@ -1245,14 +1189,7 @@
     case "fill":
         ws.rQshift8(); // shift off ctl
         color = ws.rQshiftBytes(fb_depth);
-        FBU.imgQ.push({
-                'type': 'fill',
-                'img': {'complete': true},
-                'x': FBU.x,
-                'y': FBU.y,
-                'width': FBU.width,
-                'height': FBU.height,
-                'color': color});
+        canvas.fillRect(FBU.x, FBU.y, FBU.width, FBU.height, color);
         break;
     case "jpeg":
     case "png":
@@ -1264,12 +1201,8 @@
         //Util.Debug("   png, ws.rQlen(): " + ws.rQlen() + ", clength[0]: " + clength[0] + ", clength[1]: " + clength[1]);
         ws.rQshiftBytes(1 + clength[0]); // shift off ctl + compact length
         img = new Image();
-        //img.onload = scan_tight_imgQ;
-        FBU.imgQ.push({
-                'type': 'img',
-                'img': img,
-                'x': FBU.x,
-                'y': FBU.y});
+        img.onload = scan_tight_imgQ;
+        FBU.imgQ.push([img, FBU.x, FBU.y]);
         img.src = "data:image/" + cmode +
             extract_data_uri(ws.rQshiftBytes(clength[1]));
         img = null;
@@ -1292,17 +1225,13 @@
 };
 
 scan_tight_imgQ = function() {
-    var data, imgQ, ctx;
-    ctx = display.get_context();
+    var img, imgQ, ctx;
+    ctx = canvas.getContext();
     if (rfb_state === 'normal') {
         imgQ = FBU.imgQ;
-        while ((imgQ.length > 0) && (imgQ[0].img.complete)) {
-            data = imgQ.shift();
-            if (data['type'] === 'fill') {
-                display.fillRect(data.x, data.y, data.width, data.height, data.color);
-            } else {
-                ctx.drawImage(data.img, data.x, data.y);
-            }
+        while ((imgQ.length > 0) && (imgQ[0][0].complete)) {
+            img = imgQ.shift();
+            ctx.drawImage(img[0], img[1], img[2]);
         }
         setTimeout(scan_tight_imgQ, scan_imgQ_rate);
     }
@@ -1312,11 +1241,11 @@
     Util.Debug(">> set_desktopsize");
     fb_width = FBU.width;
     fb_height = FBU.height;
-    display.resize(fb_width, fb_height);
-    display.viewportChange(0, 0, fb_width, fb_height);
+    canvas.clear();
+    canvas.resize(fb_width, fb_height);
     timing.fbu_rt_start = (new Date()).getTime();
     // Send a new non-incremental request
-    ws.send(fbUpdateRequests());
+    ws.send(fbUpdateRequest(0));
 
     FBU.bytes = 0;
     FBU.rects -= 1;
@@ -1341,7 +1270,7 @@
 
     //Util.Debug("   set_cursor, x: " + x + ", y: " + y + ", w: " + w + ", h: " + h);
 
-    display.changeCursor(ws.rQshiftBytes(pixelslength),
+    canvas.changeCursor(ws.rQshiftBytes(pixelslength),
                             ws.rQshiftBytes(masklength),
                             x, y, w, h);
 
@@ -1418,10 +1347,10 @@
 
 fbUpdateRequest = function(incremental, x, y, xw, yw) {
     //Util.Debug(">> fbUpdateRequest");
-    if (typeof(x) !== "undefined") { x = 0; }
-    if (typeof(y) !== "undefined") { y = 0; }
-    if (typeof(xw) !== "undefined") { xw = fb_width; }
-    if (typeof(yw) !== "undefined") { yw = fb_height; }
+    if (!x) { x = 0; }
+    if (!y) { y = 0; }
+    if (!xw) { xw = fb_width; }
+    if (!yw) { yw = fb_height; }
     var arr;
     arr = [3];  // msg-type
     arr.push8(incremental);
@@ -1433,26 +1362,6 @@
     return arr;
 };
 
-// Based on clean/dirty areas, generate requests to send
-fbUpdateRequests = function() {
-    var cleanDirty = display.getCleanDirtyReset(),
-        arr = [], i, cb, db;
-
-    cb = cleanDirty.cleanBox;
-    if (cb.w > 0 && cb.h > 0) {
-        // Request incremental for clean box
-        arr = arr.concat(fbUpdateRequest(1, cb.x, cb.y, cb.w, cb.h));
-    }
-    for (i = 0; i < cleanDirty.dirtyBoxes.length; i++) {
-        db = cleanDirty.dirtyBoxes[i];
-        // Force all (non-incremental for dirty box
-        arr = arr.concat(fbUpdateRequest(0, db.x, db.y, db.w, db.h));
-    }
-    return arr;
-};
-
-
-
 keyEvent = function(keysym, down) {
     //Util.Debug(">> keyEvent, keysym: " + keysym + ", down: " + down);
     var arr;
@@ -1498,13 +1407,13 @@
 // Public API interface functions
 //
 
-that.connect = function(host, port, password, uri) {
+that.connect = function(host, port, password, token) {
     //Util.Debug(">> connect");
 
+    nova_token     = token;
     rfb_host       = host;
     rfb_port       = port;
     rfb_password   = (password !== undefined)   ? password : "";
-    rfb_uri        = (uri !== undefined) ? uri : "";
 
     if ((!rfb_host) || (!rfb_port)) {
         return fail("Must set host and port");
@@ -1537,7 +1446,7 @@
     arr = arr.concat(keyEvent(0xFFFF, 0)); // Delete
     arr = arr.concat(keyEvent(0xFFE9, 0)); // Alt
     arr = arr.concat(keyEvent(0xFFE3, 0)); // Control
-    arr = arr.concat(fbUpdateRequests());
+    arr = arr.concat(fbUpdateRequest(1));
     ws.send(arr);
 };
 
@@ -1554,7 +1463,7 @@
         arr = arr.concat(keyEvent(code, 1));
         arr = arr.concat(keyEvent(code, 0));
     }
-    arr = arr.concat(fbUpdateRequests());
+    arr = arr.concat(fbUpdateRequest(1));
     ws.send(arr);
 };
 
@@ -1565,10 +1474,12 @@
     //Util.Debug("<< clipboardPasteFrom");
 };
 
-// Override internal functions for testing
 that.testMode = function(override_send) {
+    // Overridable internal functions for testing
     test_mode = true;
-    that.recv_message = ws.testMode(override_send);
+    // TODO figure out what to do here
+    ws.send = override_send;
+    that.recv_message = ws.recv_message;  // Expose it
 
     checkEvents = function () { /* Stub Out */ };
     that.connect = function(host, port, password) {
--- a/include/ui.js
+++ b/include/ui.js
@@ -1,6 +1,6 @@
 /*
  * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
+ * Copyright (C) 2010 Joel Martin
  * Licensed under LGPL-3 (see LICENSE.txt)
  *
  * See README.md for usage and integration instructions.
@@ -8,7 +8,7 @@
 
 "use strict";
 /*jslint white: false, browser: true */
-/*global window, $D, Util, WebUtil, RFB, Display */
+/*global window, $D, Util, WebUtil, RFB, Canvas, Element, Fx */
 
 var UI = {
 
@@ -54,26 +54,13 @@
     html += '  <div id="VNC_status_bar" class="VNC_status_bar" style="margin-top: 0px;">';
     html += '    <table border=0 width=100%><tr>';
     html += '      <td><div id="VNC_status">Loading</div></td>';
-
-    // Mouse button selectors for touch devices
-    html += '      <td width=1%><div class="VNC_buttons_right">';
-    html += '        <nobr><span id="VNC_mouse_buttons" style="display: none;">';
-    html += '          <input type="button" class="VNC_status_button"';
-    html += '            id="VNC_mouse_button1" value="L" onclick="UI.setMouseButton(1);"';
-    html += '            ><input type="button" class="VNC_status_button"';
-    html += '            id="VNC_mouse_button2" value="M" onclick="UI.setMouseButton(2);"';
-    html += '            ><input type="button" class="VNC_status_button"';
-    html += '            id="VNC_mouse_button4" value="R" onclick="UI.setMouseButton(4);">';
-    html += '        </span></nobr></div></td>';
-
-    // Settings drop-down menu
     html += '      <td width=1%><div class="VNC_buttons_right">';
     html += '        <input type=button class="VNC_status_button" value="Settings"';
     html += '          id="menuButton"';
     html += '          onclick="UI.clickSettingsMenu();">';
     html += '        <span id="VNC_settings_menu"';
-    html += '          onmouseover="UI.displayBlur();"';
-    html += '          onmouseout="UI.displayFocus();">';
+    html += '          onmouseover="UI.canvasBlur();"';
+    html += '          onmouseout="UI.canvasFocus();">';
     html += '          <ul>';
     html += '            <li><input id="VNC_encrypt"';
     html += '                type="checkbox"> Encrypt</li>';
@@ -110,13 +97,10 @@
     html += '                onclick="UI.settingsApply()"></li>';
     html += '          </ul>';
     html += '        </span></div></td>';
-
-    // CtrlAltDel Button
     html += '      <td width=1%><div class="VNC_buttons_right">';
-    html += '        <input type=button class="VNC_status_button" value="CtrlAltDel"';
+    html += '        <input type=button class="VNC_status_button" value="Send CtrlAltDel"';
     html += '          id="sendCtrlAltDelButton"';
     html += '          onclick="UI.sendCtrlAltDel();"></div></td>';
-
     html += '    </tr></table>';
     html += '  </div>';
     html += '  <canvas id="VNC_canvas" width="640px" height="20px">';
@@ -131,8 +115,8 @@
     html += '      onclick="UI.clipClear();">';
     html += '  <br>';
     html += '  <textarea id="VNC_clipboard_text" cols=80 rows=5';
-    html += '    onfocus="UI.displayBlur();"';
-    html += '    onblur="UI.displayFocus();"';
+    html += '    onfocus="UI.canvasBlur();"';
+    html += '    onblur="UI.canvasFocus();"';
     html += '    onchange="UI.clipSend();"></textarea>';
     html += '</div>';
     target.innerHTML = html;
@@ -156,23 +140,17 @@
     UI.initSetting('connectTimeout', 2);
 
     UI.rfb = RFB({'target': $D('VNC_canvas'),
-                  'onUpdateState': UI.updateState,
-                  'onClipboard': UI.clipReceive});
+                  'updateState': UI.updateState,
+                  'clipboardReceive': UI.clipReceive});
 
     // Unfocus clipboard when over the VNC area
     $D('VNC_screen').onmousemove = function () {
-            var keyboard = UI.rfb.get_keyboard();
-            if ((! keyboard) || (! keyboard.get_focused())) {
+            var canvas = UI.rfb.get_canvas();
+            if ((! canvas) || (! canvas.get_focused())) {
                 $D('VNC_clipboard_text').blur();
             }
         };
 
-    // Show mouse selector buttons on touch screen devices
-    if ('ontouchstart' in document.documentElement) {
-        $D('VNC_mouse_buttons').style.display = "inline";
-        UI.setMouseButton();
-    }
-
 },
 
 // Read form control compatible setting from cookie
@@ -255,7 +233,7 @@
     } else {
         UI.updateSetting('encrypt');
         UI.updateSetting('true_color');
-        if (UI.rfb.get_display().get_cursor_uri()) {
+        if (UI.rfb.get_canvas().get_cursor_uri()) {
             UI.updateSetting('cursor');
         } else {
             UI.updateSetting('cursor', false);
@@ -287,7 +265,7 @@
     //Util.Debug(">> settingsDisabled");
     $D('VNC_encrypt').disabled = disabled;
     $D('VNC_true_color').disabled = disabled;
-    if (rfb && rfb.get_display() && rfb.get_display().get_cursor_uri()) {
+    if (rfb && rfb.get_canvas() && rfb.get_canvas().get_cursor_uri()) {
         $D('VNC_cursor').disabled = disabled;
     } else {
         UI.updateSetting('cursor', false);
@@ -303,7 +281,7 @@
     //Util.Debug(">> settingsApply");
     UI.saveSetting('encrypt');
     UI.saveSetting('true_color');
-    if (UI.rfb.get_display().get_cursor_uri()) {
+    if (UI.rfb.get_canvas().get_cursor_uri()) {
         UI.saveSetting('cursor');
     }
     UI.saveSetting('shared');
@@ -329,35 +307,6 @@
     UI.rfb.sendCtrlAltDel();
 },
 
-setMouseButton: function(num) {
-    var b, blist = [1,2,4], button,
-        mouse = UI.rfb.get_mouse();
-
-    if (typeof num === 'undefined') {
-        // Show the default
-        num = mouse.get_touchButton();
-    } else if (num === mouse.get_touchButton()) {
-        // Set all buttons off (no clicks)
-        mouse.set_touchButton(0);
-        num = 0;
-    } else {
-        // Turn on one button
-        mouse.set_touchButton(num);
-    }
-
-    for (b = 0; b < blist.length; b++) {
-        button = $D('VNC_mouse_button' + blist[b]);
-        if (blist[b] === num) {
-            button.style.backgroundColor = "black";
-            button.style.color = "lightgray";
-        } else {
-            button.style.backgroundColor = "";
-            button.style.color = "";
-        }
-    }
-
-},
-
 updateState: function(rfb, state, oldstate, msg) {
     var s, sb, c, cad, klass;
     s = $D('VNC_status');
@@ -449,14 +398,12 @@
     UI.rfb.disconnect();
 },
 
-displayBlur: function() {
-    UI.rfb.get_keyboard().set_focused(false);
-    UI.rfb.get_mouse().set_focused(false);
+canvasBlur: function() {
+    UI.rfb.get_canvas().set_focused(false);
 },
 
-displayFocus: function() {
-    UI.rfb.get_keyboard().set_focused(true);
-    UI.rfb.get_mouse().set_focused(true);
+canvasFocus: function() {
+    UI.rfb.get_canvas().set_focused(true);
 },
 
 clipClear: function() {
--- a/include/util.js
+++ b/include/util.js
@@ -1,6 +1,6 @@
 /*
  * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
+ * Copyright (C) 2010 Joel Martin
  * Licensed under LGPL-3 (see LICENSE.txt)
  *
  * See README.md for usage and integration instructions.
@@ -78,88 +78,46 @@
 };
 Util.get_logging = function () {
     return Util._log_level;
-};
+}
 // Initialize logging level
 Util.init_logging();
 
 
-// Set configuration default for Crockford style function namespaces
-Util.conf_default = function(cfg, api, defaults, v, mode, type, defval, desc) {
-    var getter, setter;
-
-    // Default getter function
-    getter = function (idx) {
-        if ((type in {'arr':1, 'array':1}) &&
-            (typeof idx !== 'undefined')) {
-            return cfg[v][idx];
-        } else {
-            return cfg[v];
-        }
-    };
-
-    // Default setter function
-    setter = function (val, idx) {
-        if (type in {'boolean':1, 'bool':1}) {
-            if ((!val) || (val in {'0':1, 'no':1, 'false':1})) {
-                val = false;
-            } else {
-                val = true;
-            }
-        } else if (type in {'integer':1, 'int':1}) {
-            val = parseInt(val, 10);
-        } else if (type === 'func') {
-            if (!val) {
-                val = function () {};
-            }
-        }
-        if (typeof idx !== 'undefined') {
-            cfg[v][idx] = val;
-        } else {
-            cfg[v] = val;
-        }
-    };
-
-    // Set the description
-    api[v + '_description'] = desc;
-
-    // Set the getter function
+// Set defaults for Crockford style function namespaces
+Util.conf_default = function(cfg, api, v, type, defval, desc) {
+    // Description
+    api['get_' + v + '_desc'] = desc;
+    // Default getter
     if (typeof api['get_' + v] === 'undefined') {
-        api['get_' + v] = getter;
+        api['get_' + v] = function () {
+                return cfg[v];
+            };
     }
-
-    // Set the setter function with extra sanity checks
+    // Default setter
     if (typeof api['set_' + v] === 'undefined') {
-        api['set_' + v] = function (val, idx) {
-            if (mode in {'RO':1, 'ro':1}) {
-                throw(v + " is read-only");
-            } else if ((mode in {'WO':1, 'wo':1}) &&
-                       (typeof cfg[v] !== 'undefined')) {
-                throw(v + " can only be set once");
-            }
-            setter(val, idx);
-        };
-    }
-
-    // Set the default value
-    if (typeof defaults[v] !== 'undefined') {
-        defval = defaults[v];
-    } else if ((type in {'arr':1, 'array':1}) &&
-            (! (defval instanceof Array))) {
-        defval = [];
-    }
-    // Coerce existing setting to the right type
-    //Util.Debug("v: " + v + ", defval: " + defval + ", defaults[v]: " + defaults[v]);
-    setter(defval);
-};
-
-// Set group of configuration defaults
-Util.conf_defaults = function(cfg, api, defaults, arr) {
-    var i;
-    for (i = 0; i < arr.length; i++) {
-        Util.conf_default(cfg, api, defaults, arr[i][0], arr[i][1],
-                arr[i][2], arr[i][3], arr[i][4]);
+        api['set_' + v] = function (val) {
+                if (type in {'boolean':1, 'bool':1}) {
+                    if ((!val) || (val in {'0':1, 'no':1, 'false':1})) {
+                        val = false;
+                    } else {
+                        val = true;
+                    }
+                } else if (type in {'integer':1, 'int':1}) {
+                    val = parseInt(val, 10);
+                }
+                cfg[v] = val;
+            };
+    }
+
+    if (typeof cfg[v] === 'undefined') {
+        // Set to default
+        api['set_' + v](defval);
+    } else {
+        // Coerce existing setting to the right type
+        api['set_' + v](cfg[v]);
     }
-}
+};
+
 
 
 /*
@@ -184,7 +142,6 @@
     var evt, docX, docY, pos;
     //if (!e) evt = window.event;
     evt = (e ? e : window.event);
-    evt = (evt.changedTouches ? evt.changedTouches[0] : evt.touches ? evt.touches[0] : evt);
     if (evt.pageX || evt.pageY) {
         docX = evt.pageX;
         docY = evt.pageY;
--- a/include/vnc.js
+++ b/include/vnc.js
@@ -1,11 +1,12 @@
 /*
  * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
+ * Copyright (C) 2010 Joel Martin
  * Licensed under LGPL-3 (see LICENSE.txt)
  *
  * See README.md for usage and integration instructions.
  */
 
+"use strict";
 /*jslint evil: true */
 /*global window, document, INCLUDE_URI */
 
@@ -17,8 +18,6 @@
 }
 
 (function () {
-    "use strict";
-
     var extra = "", start, end;
 
     start = "<script src='" + get_INCLUDE_URI();
@@ -34,8 +33,7 @@
     extra += start + "base64.js" + end;
     extra += start + "websock.js" + end;
     extra += start + "des.js" + end;
-    extra += start + "input.js" + end;
-    extra += start + "display.js" + end;
+    extra += start + "canvas.js" + end;
     extra += start + "rfb.js" + end;
 
     document.write(extra);
--- a/include/websock.js
+++ b/include/websock.js
@@ -19,9 +19,6 @@
 
 if (window.WebSocket) {
     Websock_native = true;
-} else if (window.MozWebSocket) {
-    Websock_native = true;
-    window.WebSocket = window.MozWebSocket;
 } else {
     /* no builtin WebSocket so load web_socket.js */
     Websock_native = false;
@@ -35,7 +32,7 @@
             end = "'><\/script>", extra = "";
 
         WEB_SOCKET_SWF_LOCATION = get_INCLUDE_URI() +
-                    "web-socket-js/WebSocketMain.swf";
+                    "web-socket-js/WebSocketMain.swf?" + Math.random();
         if (Util.Engine.trident) {
             Util.Debug("Forcing uncached load of WebSocketMain.swf");
             WEB_SOCKET_SWF_LOCATION += "?" + Math.random();
@@ -48,7 +45,6 @@
 
 
 function Websock() {
-"use strict";
 
 var api = {},         // Public API
     websocket = null, // WebSocket object
@@ -62,9 +58,7 @@
         'open'    : function() {},
         'close'   : function() {},
         'error'   : function() {}
-    },
-
-    test_mode = false;
+    };
 
 
 //
@@ -81,7 +75,7 @@
 function get_rQi() {
     return rQi;
 }
-function set_rQi(val) {
+set_rQi = function(val) {
     rQi = val;
 };
 
@@ -181,7 +175,7 @@
     if (websocket.bufferedAmount < api.maxBufferedAmount) {
         //Util.Debug("arr: " + arr);
         //Util.Debug("sQ: " + sQ);
-        if (sQ.length > 0) {
+        if (sQ) {
             websocket.send(encode_message(sQ));
             sQ = [];
         }
@@ -258,32 +252,23 @@
 function open(uri) {
     init();
 
-    if (test_mode) {
-        websocket = {};
-    } else {
-        websocket = new WebSocket(uri, 'base64');
-        // TODO: future native binary support
-        //websocket = new WebSocket(uri, ['binary', 'base64']);
-    }
+    websocket = new WebSocket(uri);
 
     websocket.onmessage = recv_message;
-    websocket.onopen = function() {
+    websocket.onopen = function(e) {
         Util.Debug(">> WebSock.onopen");
-        if (websocket.protocol) {
-            Util.Info("Server chose sub-protocol: " + websocket.protocol);
-        }
         eventHandlers.open();
         Util.Debug("<< WebSock.onopen");
     };
     websocket.onclose = function(e) {
         Util.Debug(">> WebSock.onclose");
-        eventHandlers.close(e);
+        eventHandlers.close();
         Util.Debug("<< WebSock.onclose");
     };
     websocket.onerror = function(e) {
-        Util.Debug(">> WebSock.onerror: " + e);
+        Util.Debug("<< WebSock.onerror: " + e);
         eventHandlers.error(e);
-        Util.Debug("<< WebSock.onerror");
+        Util.Debug("<< WebSock.onerror: ");
     };
 }
 
@@ -298,15 +283,6 @@
     }
 }
 
-// Override internal functions for testing
-// Takes a send function, returns reference to recv function
-function testMode(override_send) {
-    test_mode = true;
-    api.send = override_send;
-    api.close = function () {};
-    return recv_message;
-}
-
 function constructor() {
     // Configuration settings
     api.maxBufferedAmount = 200;
@@ -333,11 +309,11 @@
     api.send         = send;
     api.send_string  = send_string;
 
+    api.recv_message = recv_message;
     api.on           = on;
     api.init         = init;
     api.open         = open;
     api.close        = close;
-    api.testMode     = testMode;
 
     return api;
 }
--- a/include/webutil.js
+++ b/include/webutil.js
@@ -1,6 +1,6 @@
 /*
  * noVNC: HTML5 VNC client
- * Copyright (C) 2011 Joel Martin
+ * Copyright (C) 2010 Joel Martin
  * Licensed under LGPL-3 (see LICENSE.txt)
  *
  * See README.md for usage and integration instructions.
@@ -59,11 +59,7 @@
             msg += WebUtil.dirObj(obj[i], depth-1, parent + "." + i);
         } else {
             //val = new String(obj[i]).replace("\n", " ");
-            if (typeof(obj[i]) === "undefined") {
-                val = "undefined";
-            } else {
-                val = obj[i].toString().replace("\n", " ");
-            }
+            val = obj[i].toString().replace("\n", " ");
             if (val.length > 30) {
                 val = val.substr(0,30) + "...";
             } 
--- a/tests/arrays.js
+++ b/tests/arrays.js
@@ -34,7 +34,7 @@
     var newline = "<br>\n";
 }
 function message(str) {
-    //console.log(str);
+    console.log(str);
     cell = $D('messages');
     cell.innerHTML += str + newline;
     cell.scrollTop = cell.scrollHeight;
--- a/tests/browser.js
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
- * From:
- * http://www.quirksmode.org/js/detect.html
- */
-
-var Browser = {
-    init: function () {
-        this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
-        this.version = this.searchVersion(navigator.userAgent)
-            || this.searchVersion(navigator.appVersion)
-            || "an unknown version";
-        this.majorVersion = this.searchMajorVersion(navigator.userAgent)
-            || this.searchMajorVersion(navigator.appVersion)
-            || "an unknown version";
-        this.fullVersion = this.searchFullVersion(navigator.userAgent)
-            || this.searchFullVersion(navigator.appVersion)
-            || "an unknown version";
-        this.OS = this.searchString(this.dataOS) || "an unknown OS";
-    },
-    searchString: function (data) {
-        for (var i=0;i<data.length;i++) {
-            var dataString = data[i].string;
-            var dataProp = data[i].prop;
-            this.versionSearchString = data[i].versionSearch || data[i].identity;
-            if (dataString) {
-                if (dataString.indexOf(data[i].subString) != -1)
-                    return data[i].identity;
-            }
-            else if (dataProp)
-                return data[i].identity;
-        }
-    },
-    searchFullVersion: function (dataString) {
-        var index = dataString.indexOf(this.versionSearchString);
-        if (index == -1) return;
-        return dataString.substring(index+this.versionSearchString.length+1);
-    },
-    searchVersion: function (dataString) {
-        return this.searchFullVersion(dataString).split(" ")[0];
-    },
-    searchMajorVersion: function (dataString) {
-        return parseFloat(this.searchFullVersion(dataString).split(".")[0]);
-    },
-    dataBrowser: [
-        {
-            string: navigator.userAgent,
-            subString: "Chrome",
-            identity: "Chrome"
-        },
-        {       string: navigator.userAgent,
-            subString: "OmniWeb",
-            versionSearch: "OmniWeb/",
-            identity: "OmniWeb"
-        },
-        {
-            string: navigator.vendor,
-            subString: "Apple",
-            identity: "Safari",
-            versionSearch: "Version"
-        },
-        {
-            prop: window.opera,
-            identity: "Opera",
-            versionSearch: "Version"
-        },
-        {
-            string: navigator.vendor,
-            subString: "iCab",
-            identity: "iCab"
-        },
-        {
-            string: navigator.vendor,
-            subString: "KDE",
-            identity: "Konqueror"
-        },
-        {
-            string: navigator.userAgent,
-            subString: "Firefox",
-            identity: "Firefox"
-        },
-        {
-            string: navigator.vendor,
-            subString: "Camino",
-            identity: "Camino"
-        },
-        {               // for newer Netscapes (6+)
-            string: navigator.userAgent,
-            subString: "Netscape",
-            identity: "Netscape"
-        },
-        {
-            string: navigator.userAgent,
-            subString: "MSIE",
-            identity: "Explorer",
-            versionSearch: "MSIE"
-        },
-        {
-            string: navigator.userAgent,
-            subString: "Gecko",
-            identity: "Mozilla",
-            versionSearch: "rv"
-        },
-        {               // for older Netscapes (4-)
-            string: navigator.userAgent,
-            subString: "Mozilla",
-            identity: "Netscape",
-            versionSearch: "Mozilla"
-        }
-    ],
-    dataOS : [
-        {
-            string: navigator.platform,
-            subString: "Win",
-            identity: "Windows"
-        },
-        {
-            string: navigator.platform,
-            subString: "Mac",
-            identity: "Mac"
-        },
-        {
-               string: navigator.userAgent,
-               subString: "iPhone",
-               identity: "iPhone/iPod"
-        },
-        {
-            string: navigator.platform,
-            subString: "Linux",
-            identity: "Linux"
-        }
-    ]
-
-};
-Browser.init();
--- a/tests/canvas.html
+++ b/tests/canvas.html
@@ -1,4 +1,3 @@
-<!DOCTYPE html>
 <html>
     <head>
         <title>Canvas Performance Test</title>
--- a/tests/input.html
+++ b/tests/input.html
@@ -1,14 +1,9 @@
-<!DOCTYPE html>
 <html>
     <head><title>Input Test</title></head>
     <body>
         <br><br>
 
-        Canvas:
-        <span id="button-selection" style="display: none;">
-            <input id="button1" type="button" value="L"><input id="button2" type="button" value="M"><input id="button4" type="button" value="R">
-        </span>
-        <br>
+        Canvas:<br>
         <canvas id="canvas" width="640" height="20"
                 style="border-style: dotted; border-width: 1px;">
             Canvas not supported.
@@ -26,29 +21,23 @@
     <script src="../include/util.js"></script>
     <script src="../include/webutil.js"></script> 
     <script src="../include/base64.js"></script>
-    <script src="../include/input.js"></script> 
-    <script src="../include/display.js"></script>
+    <script src="../include/canvas.js"></script>
     <script>
-        var msg_cnt = 0, iterations,
-            width = 400, height = 200,
-            canvas, keyboard, mouse;
-
-        var newline = "\n";
-        if (Util.Engine.trident) {
-            var newline = "<br>\n";
-        }
+        var msg_cnt = 0;
+        var width = 400, height = 200;
+        var iterations;
 
         function message(str) {
             console.log(str);
             cell = $D('messages');
-            cell.innerHTML += msg_cnt + ": " + str + newline;
+            cell.innerHTML += msg_cnt + ": " + str + "\n";
             cell.scrollTop = cell.scrollHeight;
-            msg_cnt++;
         }
 
         function mouseButton(x, y, down, bmask) {
             msg = 'mouse x,y: ' + x + ',' + y + '  down: ' + down;
             msg += ' bmask: ' + bmask;
+            console.log(msg);
             message(msg);
         }
 
@@ -57,62 +46,17 @@
             //console.log(msg);
         }
 
-        function keyPress(keysym, down, e) {
-            var d = down ? "down" : " up ";
-            msg = "keyPress " + d + " keysym: " + keysym +
-                  " (key: " + e.keyCode + ", char: " + e.charCode +
-                  ", which: " + e.which +")";
+        function keyPress(keysym, down) {
+            msg = "keyPress keysym: " + keysym + " down: " + down;
+            console.log(msg);
             message(msg);
         }
 
-        function selectButton(num) {
-            var b, blist = [1,2,4];
-
-            if (typeof num === 'undefined') {
-                // Show the default
-                num = mouse.get_touchButton();
-            } else if (num === mouse.get_touchButton()) {
-                // Set all buttons off (no clicks)
-                mouse.set_touchButton(0);
-                num = 0;
-            } else {
-                // Turn on one button
-                mouse.set_touchButton(num);
-            }
-
-            for (b = 0; b < blist.length; b++) {
-                if (blist[b] === num) {
-                    $D('button' + blist[b]).style.backgroundColor = "black";
-                    $D('button' + blist[b]).style.color = "lightgray";
-                } else {
-                    $D('button' + blist[b]).style.backgroundColor = "";
-                    $D('button' + blist[b]).style.color = "";
-                }
-            }
-        }
-
         window.onload = function() {
-            canvas = new Display({'target' : $D('canvas')});
-            keyboard = new Keyboard({'target': document,
-                                    'onKeyPress': keyPress});
-            mouse    = new Mouse({'target': $D('canvas'),
-                                'onMouseButton': mouseButton,
-                                'onMouseMove': mouseMove});
-
+            var canvas = new Canvas({'target' : $D('canvas')});
             canvas.resize(width, height, true);
-            keyboard.grab();
-            mouse.grab();
-            message("Display initialized");
-
-            if ('ontouchstart' in document.documentElement) {
-                message("Touch device detected");
-                $D('button-selection').style.display = "inline";
-                $D('button1').onclick = function(){ selectButton(1) };
-                $D('button2').onclick = function(){ selectButton(2) };
-                $D('button4').onclick = function(){ selectButton(4) };
-                selectButton();
-            }
-
+            canvas.start(keyPress, mouseButton, mouseMove);
+            message("Canvas initialized");
         }
     </script>
 </html>
--- /dev/null
+++ b/tests/json2graph.py
@@ -0,0 +1,206 @@
+#!/usr/bin/env python
+
+'''
+Use matplotlib to generate performance charts
+Copyright 2011 Joel Martin
+Licensed under GPL version 3 (see docs/LICENSE.GPL-3)
+'''
+
+# a bar plot with errorbars
+import sys, json, pprint
+import numpy as np
+import matplotlib.pyplot as plt
+from matplotlib.font_manager import FontProperties
+
+def usage():
+    print "%s json_file level1 level2 level3\n\n" % sys.argv[0]
+    print "Description:\n"
+    print "level1, level2, and level3 are one each of the following:\n";
+    print "  select=ITEM - select only ITEM at this level";
+    print "  bar         - each item on this level becomes a graph bar";
+    print "  group       - items on this level become groups of bars";
+    print "\n";
+    print "json_file is a file containing json data in the following format:\n"
+    print '  {';
+    print '    "conf": {';
+    print '      "order_l1": [';
+    print '        "level1_label1",';
+    print '        "level1_label2",';
+    print '        ...';
+    print '      ],';
+    print '      "order_l2": [';
+    print '        "level2_label1",';
+    print '        "level2_label2",';
+    print '        ...';
+    print '      ],';
+    print '      "order_l3": [';
+    print '        "level3_label1",';
+    print '        "level3_label2",';
+    print '        ...';
+    print '      ]';
+    print '    },';
+    print '    "stats": {';
+    print '      "level1_label1": {';
+    print '        "level2_label1": {';
+    print '          "level3_label1": [val1, val2, val3],';
+    print '          "level3_label2": [val1, val2, val3],';
+    print '          ...';
+    print '        },';
+    print '        "level2_label2": {';
+    print '        ...';
+    print '        },';
+    print '      },';
+    print '      "level1_label2": {';
+    print '        ...';
+    print '      },';
+    print '      ...';
+    print '    },';
+    print '  }';
+    sys.exit(2)
+
+def error(msg):
+    print msg
+    sys.exit(1)
+
+
+#colors = ['#ff0000', '#0863e9', '#00f200', '#ffa100',
+#          '#800000', '#805100', '#013075', '#007900']
+colors = ['#ff0000', '#00ff00', '#0000ff',
+          '#dddd00', '#dd00dd', '#00dddd',
+          '#dd6622', '#dd2266', '#66dd22',
+          '#8844dd', '#44dd88', '#4488dd']
+
+if len(sys.argv) < 5:
+    usage()
+
+filename = sys.argv[1]
+L1 = sys.argv[2]
+L2 = sys.argv[3]
+L3 = sys.argv[4]
+if len(sys.argv) > 5:
+    legendHeight = float(sys.argv[5])
+else:
+    legendHeight = 0.75
+
+# Load the JSON data from the file
+data = json.loads(file(filename).read())
+conf = data['conf']
+stats = data['stats']
+
+# Sanity check data hierarchy
+if len(conf['order_l1']) != len(stats.keys()):
+    error("conf.order_l1 does not match stats level 1")
+for l1 in stats.keys():
+    if len(conf['order_l2']) != len(stats[l1].keys()):
+        error("conf.order_l2 does not match stats level 2 for %s" % l1)
+    if conf['order_l1'].count(l1) < 1:
+        error("%s not found in conf.order_l1" % l1)
+    for l2 in stats[l1].keys():
+        if len(conf['order_l3']) != len(stats[l1][l2].keys()):
+            error("conf.order_l3 does not match stats level 3")
+        if conf['order_l2'].count(l2) < 1:
+            error("%s not found in conf.order_l2" % l2)
+        for l3 in stats[l1][l2].keys():
+            if conf['order_l3'].count(l3) < 1:
+                error("%s not found in conf.order_l3" % l3)
+
+#
+# Generate the data based on the level specifications
+#
+bar_labels = None
+group_labels = None
+bar_vals = []
+bar_sdvs = []
+if L3.startswith("select="):
+    select_label = l3 = L3.split("=")[1]
+    bar_labels = conf['order_l1']
+    group_labels = conf['order_l2']
+    bar_vals = [[0]*len(group_labels) for i in bar_labels]
+    bar_sdvs = [[0]*len(group_labels) for i in bar_labels]
+    for b in range(len(bar_labels)):
+        l1 = bar_labels[b]
+        for g in range(len(group_labels)):
+            l2 = group_labels[g]
+            bar_vals[b][g] = np.mean(stats[l1][l2][l3])
+            bar_sdvs[b][g] = np.std(stats[l1][l2][l3])
+elif L2.startswith("select="):
+    select_label = l2 = L2.split("=")[1]
+    bar_labels = conf['order_l1']
+    group_labels = conf['order_l3']
+    bar_vals = [[0]*len(group_labels) for i in bar_labels]
+    bar_sdvs = [[0]*len(group_labels) for i in bar_labels]
+    for b in range(len(bar_labels)):
+        l1 = bar_labels[b]
+        for g in range(len(group_labels)):
+            l3 = group_labels[g]
+            bar_vals[b][g] = np.mean(stats[l1][l2][l3])
+            bar_sdvs[b][g] = np.std(stats[l1][l2][l3])
+elif L1.startswith("select="):
+    select_label = l1 = L1.split("=")[1]
+    bar_labels = conf['order_l2']
+    group_labels = conf['order_l3']
+    bar_vals = [[0]*len(group_labels) for i in bar_labels]
+    bar_sdvs = [[0]*len(group_labels) for i in bar_labels]
+    for b in range(len(bar_labels)):
+        l2 = bar_labels[b]
+        for g in range(len(group_labels)):
+            l3 = group_labels[g]
+            bar_vals[b][g] = np.mean(stats[l1][l2][l3])
+            bar_sdvs[b][g] = np.std(stats[l1][l2][l3])
+else:
+    usage()
+
+# If group is before bar then flip (zip) the data
+if [L1, L2, L3].index("group") < [L1, L2, L3].index("bar"):
+    bar_labels, group_labels = group_labels, bar_labels
+    bar_vals = zip(*bar_vals)
+    bar_sdvs = zip(*bar_sdvs)
+
+print "bar_vals:", bar_vals
+
+#
+# Now render the bar graph
+#
+ind = np.arange(len(group_labels))  # the x locations for the groups
+width = 0.8 * (1.0/len(bar_labels)) # the width of the bars
+
+fig = plt.figure(figsize=(10,6), dpi=80)
+plot = fig.add_subplot(1, 1, 1)
+
+rects = []
+for i in range(len(bar_vals)):
+    rects.append(plot.bar(ind+width*i, bar_vals[i], width, color=colors[i],
+                          yerr=bar_sdvs[i], align='center'))
+
+# add some
+plot.set_ylabel('Milliseconds (less is better)')
+plot.set_title("Javascript array test: %s" % select_label)
+plot.set_xticks(ind+width)
+plot.set_xticklabels( group_labels )
+
+fontP = FontProperties()
+fontP.set_size('small')
+plot.legend( [r[0] for r in rects], bar_labels, prop=fontP,
+            loc = 'center right', bbox_to_anchor = (1.0, legendHeight))
+
+def autolabel(rects):
+    # attach some text labels
+    for rect in rects:
+        height = rect.get_height()
+        if np.isnan(height):
+            height = 0.0
+        plot.text(rect.get_x()+rect.get_width()/2., height+20, '%d'%int(height),
+                ha='center', va='bottom', size='7')
+
+for rect in rects:
+    autolabel(rect)
+
+# Adjust axis sizes
+axis = list(plot.axis())
+axis[0] = -width          # Make sure left side has enough for bar
+#axis[1] = axis[1] * 1.20  # Add 20% to the right to make sure it fits
+axis[2] = 0               # Make y-axis start at 0
+axis[3] = axis[3] * 1.10  # Add 10% to the top
+plot.axis(axis)
+
+plt.show()
--- /dev/null
+++ b/tests/keyboard.html
@@ -0,0 +1,100 @@
+<html>
+    <head><title>Input Test</title></head>
+    <body>
+        <br><br>
+
+        Canvas:<br>
+        <canvas id="canvas" width="640" height="20"
+                style="border-style: dotted; border-width: 1px;">
+            Canvas not supported.
+        </canvas>
+
+        <br>
+        Results:<br>
+        <textarea id="messages" style="font-size: 9;" cols=80 rows=25></textarea>
+    </body>
+
+    <!--
+    <script type='text/javascript' 
+        src='http://getfirebug.com/releases/lite/1.2/firebug-lite-compressed.js'></script>
+    -->
+    <script src="../include/util.js"></script>
+    <script src="../include/webutil.js"></script> 
+    <script src="../include/base64.js"></script>
+    <script src="../include/canvas.js"></script>
+    <script>
+        var msg_cnt = 0;
+        var width = 400, height = 200;
+        var canvas;
+
+        function message(str) {
+            console.log(str);
+            msg_cnt++;
+            cell = $D('messages');
+            cell.innerHTML += msg_cnt + ": " + str + "\n";
+            cell.scrollTop = cell.scrollHeight;
+        }
+
+        function keyDown(evt) {
+            var e = (evt ? evt : window.event);
+            msg = "Dn: key:" + e.keyCode + " char:" + e.charCode + " which:" + e.which + " id:" + e.keyIdentifier + " ksym:" + getKeysym(evt) + " alt:" + e.altKey + " shift:" + e.shiftKey + " ctrl:" + e.ctrlKey;
+            message(msg);
+
+            /*
+            if (e.stopPropagation) { e.stopPropagation(); }
+            else                   { e.cancelBubble = true; }
+
+            if (e.preventDefault)  { Util.Debug("here1"); e.preventDefault(); }
+            else                   { Util.Debug("here2"); e.returnValue = false; }
+
+            return false;
+            */
+
+        }
+
+        function keyUp(evt) {
+            var e = (evt ? evt : window.event);
+            msg = "Up: key:" + e.keyCode + " char:" + e.charCode + " which:" + e.which + " id:" + e.keyIdentifier + " ksym:" + getKeysym(evt) + " alt:" + e.altKey + " shift:" + e.shiftKey + " ctrl:" + e.ctrlKey;
+            message(msg);
+
+            /*
+            if (e.stopPropagation) { e.stopPropagation(); }
+            else                   { e.cancelBubble = true; }
+
+            if (e.preventDefault)  { e.preventDefault(); }
+            else                   { e.returnValue = false; }
+
+            return false;
+            */
+
+        }
+
+        function keyPress(evt) {
+            var e = (evt ? evt : window.event);
+            msg = "Pr: key:" + e.keyCode + " char:" + e.charCode + " which:" + e.which + " id:" + e.keyIdentifier + " ksym:" + getKeysym(evt) + " alt:" + e.altKey + " shift:" + e.shiftKey + " ctrl:" + e.ctrlKey;
+            message(msg);
+
+            /*
+            if (e.stopPropagation) { e.stopPropagation(); }
+            else                   { e.cancelBubble = true; }
+
+            if (e.preventDefault)  { e.preventDefault(); }
+            else                   { e.returnValue = false; }
+
+            return false;
+            */
+
+        }
+
+        window.onload = function() {
+            var c = $D('canvas');
+            canvas = new Canvas({'target' : c});
+            canvas.resize(width, height, true);
+            //canvas.start(keyPress);
+            Util.addEvent(document, 'keydown', keyDown);
+            Util.addEvent(document, 'keyup', keyUp);
+            Util.addEvent(document, 'keypress', keyPress);
+            message("Canvas initialized");
+        }
+    </script>
+</html>
--- a/tests/viewport.html
+++ /dev/null
@@ -1,190 +0,0 @@
-<!DOCTYPE html>
-<html>
-    <head><title>Viewport Test</title>
-        <link rel="stylesheet" href="../include/mobile.css">
-        <!--
-        <meta name="apple-mobile-web-app-capable" content="yes" />
-        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
-        -->
-        <meta name=viewport content="width=device-width, initial-scale=1.0, user-scalable=no">
-    </head>
-    <body>
-        <div class="flex-layout">
-            <div>
-                Canvas:
-                    <input id="move-selector" type="button" value="Move"
-                        onclick="toggleMove();">
-                <br>
-            </div>
-            <div class="container flex-box">
-                <canvas id="canvas" class="canvas">
-                    Canvas not supported.
-                </canvas>
-                <br>
-            </div>
-            <div>
-                <br>
-                Results:<br>
-                <textarea id="messages" style="font-size: 9;" cols=80 rows=8></textarea>
-            </div>
-        </div>
-    </body>
-
-    <!--
-    <script type='text/javascript' 
-        src='http://getfirebug.com/releases/lite/1.2/firebug-lite-compressed.js'></script>
-    -->
-    <script src="../include/util.js"></script>
-    <script src="../include/webutil.js"></script> 
-    <script src="../include/base64.js"></script>
-    <script src="../include/input.js"></script> 
-    <script src="../include/display.js"></script>
-    <script>
-        var msg_cnt = 0, iterations,
-            penDown = false, doMove = false,
-            inMove = false, lastPos = {},
-            padW = 0, padH = 0,
-            display, ctx, keyboard, mouse;
-
-        var newline = "\n";
-        if (Util.Engine.trident) {
-            var newline = "<br>\n";
-        }
-
-        function message(str) {
-            console.log(str);
-            cell = $D('messages');
-            cell.innerHTML += msg_cnt + ": " + str + newline;
-            cell.scrollTop = cell.scrollHeight;
-            msg_cnt++;
-        }
-
-        function mouseButton(x, y, down, bmask) {
-            //msg = 'mouse x,y: ' + x + ',' + y + '  down: ' + down;
-            //msg += ' bmask: ' + bmask;
-            //message(msg);
-
-            if (doMove) {
-                if (down && !inMove) {
-                    inMove = true;
-                    lastPos = {'x': x, 'y': y};
-                } else if (!down && inMove) {
-                    inMove = false;
-                    //dirtyRedraw();
-                }
-                return;
-            }
-
-            if (down && ! penDown) {
-                penDown = true;
-                ctx.beginPath();
-                ctx.moveTo(x, y);
-            } else if (!down && penDown) {
-                penDown = false;
-                ctx.closePath();
-            }
-        }
-
-        function mouseMove(x, y) {
-            var deltaX, deltaY, x1, y1;
-
-            if (inMove) {
-                //deltaX = x - lastPos.x; // drag viewport
-                deltaX = lastPos.x - x; // drag frame buffer
-                //deltaY = y - lastPos.y; // drag viewport
-                deltaY = lastPos.y - y; // drag frame buffer
-                lastPos = {'x': x, 'y': y};
-
-                display.viewportChange(deltaX, deltaY);
-                return;
-            }
-
-            if (penDown) {
-                ctx.lineTo(x, y);
-                ctx.stroke();
-            }
-        }
-
-        function dirtyRedraw() {
-            if (inMove) {
-                // Wait for user to stop moving viewport
-                return;
-            }
-
-            var d = display.getCleanDirtyReset();
-
-            for (i = 0; i < d.dirtyBoxes.length; i++) {
-                //showBox(d.dirtyBoxes[i], "dirty[" + i + "]: ");
-                drawArea(d.dirtyBoxes[i]);
-            }
-        }
-
-        function drawArea(b) {
-            var data = [], pixel, x, y;
-
-            //message("draw "+b.x+","+b.y+" ("+b.w+","+b.h+")");
-
-            for (var i = 0; i < b.w; i++) {
-                x = b.x + i;
-                for (var j = 0; j < b.h; j++) {
-                    y = b.y + j;
-                    pixel = (j * b.w * 4 + i * 4);
-                    data[pixel + 0] = ((x * y) / 13) % 256;
-                    data[pixel + 1] = ((x * y) + 392) % 256;
-                    data[pixel + 2] = ((x + y) + 256) % 256;
-                    data[pixel + 3] = 255;
-                }
-            }
-            //message("i: " + i + ", j: " + j + ", pixel: " + pixel);
-            display.blitImage(b.x, b.y, b.w, b.h, data, 0);
-        }
-
-        function toggleMove() {
-            if (doMove) {
-                doMove = false;
-                $D('move-selector').style.backgroundColor = "";
-                $D('move-selector').style.color = "";
-            } else {
-                doMove = true;
-                $D('move-selector').style.backgroundColor = "black";
-                $D('move-selector').style.color = "lightgray";
-            }
-        }
-
-        function detectPad() {
-            var c = $D('canvas'), p = c.parentNode;
-            c.width = 10;
-            c.height = 10;
-            padW = c.offsetWidth - 10;
-            padH = c.offsetHeight - 10;
-            message("padW: " + padW + ", padH: " + padH);
-        }
-
-        function doResize() {
-            var p = $D('canvas').parentNode;
-            message("doResize1: [" + (p.offsetWidth - padW) +
-                    "," + (p.offsetHeight - padH) + "]");
-            display.viewportChange(0, 0,
-                p.offsetWidth - padW, p.offsetHeight - padH);
-        }
-
-        window.onload = function() {
-            detectPad();
-            display = new Display({'target': $D('canvas')});
-            display.resize(1600, 1024);
-            //display.resize(800, 600);
-            ctx = display.get_context();
-            mouse    = new Mouse({'target': $D('canvas'),
-                                'onMouseButton': mouseButton,
-                                'onMouseMove': mouseMove});
-
-            Util.addEvent(window, 'resize', doResize);
-            //doResize();
-            setTimeout(doResize, 1);
-            setInterval(dirtyRedraw, 50);
-            mouse.grab();
-
-            message("Display initialized");
-        };
-    </script>
-</html>
--- a/tests/vnc_perf.html
+++ b/tests/vnc_perf.html
@@ -1,4 +1,3 @@
-<!DOCTYPE html>
 <html>
     <head>
         <title>VNC Performance Benchmark</title>
@@ -9,7 +8,7 @@
         Passes: <input id='passes' style='width:50' value=3>&nbsp;
 
         <input id='startButton' type='button' value='Start' style='width:100px'
-            onclick="do_test();" disabled>&nbsp;
+            onclick="start();" disabled>&nbsp;
 
         <br><br>
 
@@ -80,7 +79,7 @@
             }
         }
 
-        function do_test() {
+        function start() {
             $D('startButton').value = "Running";
             $D('startButton').disabled = true;
 
--- a/tests/vnc_playback.html
+++ b/tests/vnc_playback.html
@@ -1,4 +1,3 @@
-<!DOCTYPE html>
 <html>
     <head>
         <title>VNC Playback</title>
@@ -95,7 +94,6 @@
                 mode = 'realtime';
             }
 
-            recv_message = rfb.testMode(send_array);
             next_iteration();
         }
 
@@ -107,9 +105,7 @@
             iter_time = parseInt(total_time / iterations, 10);
             message(iterations + " iterations took " + total_time + "ms, " +
                     iter_time + "ms per iteration");
-            // Shut-off event interception
-            rfb.get_mouse().ungrab();
-            rfb.get_keyboard().ungrab();
+            rfb.get_canvas().stop();   // Shut-off event interception
             $D('startButton').disabled = false;
             $D('startButton').value = "Start";
 
@@ -128,6 +124,7 @@
                 message("VNC_frame_data.length: " + VNC_frame_data.length);
                 rfb = new RFB({'target': $D('VNC_canvas'),
                                'updateState': updateState});
+                rfb.testMode(send_array);
             }
         }
     </script>
--- a/utils/img2js.py
+++ b/utils/img2js.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/python
 
 #
 # Convert image to Javascript compatible base64 Data URI
--- a/utils/json2graph.py
+++ /dev/null
@@ -1,206 +0,0 @@
-#!/usr/bin/env python
-
-'''
-Use matplotlib to generate performance charts
-Copyright 2011 Joel Martin
-Licensed under GPL version 3 (see docs/LICENSE.GPL-3)
-'''
-
-# a bar plot with errorbars
-import sys, json, pprint
-import numpy as np
-import matplotlib.pyplot as plt
-from matplotlib.font_manager import FontProperties
-
-def usage():
-    print "%s json_file level1 level2 level3 [legend_height]\n\n" % sys.argv[0]
-    print "Description:\n"
-    print "level1, level2, and level3 are one each of the following:\n";
-    print "  select=ITEM - select only ITEM at this level";
-    print "  bar         - each item on this level becomes a graph bar";
-    print "  group       - items on this level become groups of bars";
-    print "\n";
-    print "json_file is a file containing json data in the following format:\n"
-    print '  {';
-    print '    "conf": {';
-    print '      "order_l1": [';
-    print '        "level1_label1",';
-    print '        "level1_label2",';
-    print '        ...';
-    print '      ],';
-    print '      "order_l2": [';
-    print '        "level2_label1",';
-    print '        "level2_label2",';
-    print '        ...';
-    print '      ],';
-    print '      "order_l3": [';
-    print '        "level3_label1",';
-    print '        "level3_label2",';
-    print '        ...';
-    print '      ]';
-    print '    },';
-    print '    "stats": {';
-    print '      "level1_label1": {';
-    print '        "level2_label1": {';
-    print '          "level3_label1": [val1, val2, val3],';
-    print '          "level3_label2": [val1, val2, val3],';
-    print '          ...';
-    print '        },';
-    print '        "level2_label2": {';
-    print '        ...';
-    print '        },';
-    print '      },';
-    print '      "level1_label2": {';
-    print '        ...';
-    print '      },';
-    print '      ...';
-    print '    },';
-    print '  }';
-    sys.exit(2)
-
-def error(msg):
-    print msg
-    sys.exit(1)
-
-
-#colors = ['#ff0000', '#0863e9', '#00f200', '#ffa100',
-#          '#800000', '#805100', '#013075', '#007900']
-colors = ['#ff0000', '#00ff00', '#0000ff',
-          '#dddd00', '#dd00dd', '#00dddd',
-          '#dd6622', '#dd2266', '#66dd22',
-          '#8844dd', '#44dd88', '#4488dd']
-
-if len(sys.argv) < 5:
-    usage()
-
-filename = sys.argv[1]
-L1 = sys.argv[2]
-L2 = sys.argv[3]
-L3 = sys.argv[4]
-if len(sys.argv) > 5:
-    legendHeight = float(sys.argv[5])
-else:
-    legendHeight = 0.75
-
-# Load the JSON data from the file
-data = json.loads(file(filename).read())
-conf = data['conf']
-stats = data['stats']
-
-# Sanity check data hierarchy
-if len(conf['order_l1']) != len(stats.keys()):
-    error("conf.order_l1 does not match stats level 1")
-for l1 in stats.keys():
-    if len(conf['order_l2']) != len(stats[l1].keys()):
-        error("conf.order_l2 does not match stats level 2 for %s" % l1)
-    if conf['order_l1'].count(l1) < 1:
-        error("%s not found in conf.order_l1" % l1)
-    for l2 in stats[l1].keys():
-        if len(conf['order_l3']) != len(stats[l1][l2].keys()):
-            error("conf.order_l3 does not match stats level 3")
-        if conf['order_l2'].count(l2) < 1:
-            error("%s not found in conf.order_l2" % l2)
-        for l3 in stats[l1][l2].keys():
-            if conf['order_l3'].count(l3) < 1:
-                error("%s not found in conf.order_l3" % l3)
-
-#
-# Generate the data based on the level specifications
-#
-bar_labels = None
-group_labels = None
-bar_vals = []
-bar_sdvs = []
-if L3.startswith("select="):
-    select_label = l3 = L3.split("=")[1]
-    bar_labels = conf['order_l1']
-    group_labels = conf['order_l2']
-    bar_vals = [[0]*len(group_labels) for i in bar_labels]
-    bar_sdvs = [[0]*len(group_labels) for i in bar_labels]
-    for b in range(len(bar_labels)):
-        l1 = bar_labels[b]
-        for g in range(len(group_labels)):
-            l2 = group_labels[g]
-            bar_vals[b][g] = np.mean(stats[l1][l2][l3])
-            bar_sdvs[b][g] = np.std(stats[l1][l2][l3])
-elif L2.startswith("select="):
-    select_label = l2 = L2.split("=")[1]
-    bar_labels = conf['order_l1']
-    group_labels = conf['order_l3']
-    bar_vals = [[0]*len(group_labels) for i in bar_labels]
-    bar_sdvs = [[0]*len(group_labels) for i in bar_labels]
-    for b in range(len(bar_labels)):
-        l1 = bar_labels[b]
-        for g in range(len(group_labels)):
-            l3 = group_labels[g]
-            bar_vals[b][g] = np.mean(stats[l1][l2][l3])
-            bar_sdvs[b][g] = np.std(stats[l1][l2][l3])
-elif L1.startswith("select="):
-    select_label = l1 = L1.split("=")[1]
-    bar_labels = conf['order_l2']
-    group_labels = conf['order_l3']
-    bar_vals = [[0]*len(group_labels) for i in bar_labels]
-    bar_sdvs = [[0]*len(group_labels) for i in bar_labels]
-    for b in range(len(bar_labels)):
-        l2 = bar_labels[b]
-        for g in range(len(group_labels)):
-            l3 = group_labels[g]
-            bar_vals[b][g] = np.mean(stats[l1][l2][l3])
-            bar_sdvs[b][g] = np.std(stats[l1][l2][l3])
-else:
-    usage()
-
-# If group is before bar then flip (zip) the data
-if [L1, L2, L3].index("group") < [L1, L2, L3].index("bar"):
-    bar_labels, group_labels = group_labels, bar_labels
-    bar_vals = zip(*bar_vals)
-    bar_sdvs = zip(*bar_sdvs)
-
-print "bar_vals:", bar_vals
-
-#
-# Now render the bar graph
-#
-ind = np.arange(len(group_labels))  # the x locations for the groups
-width = 0.8 * (1.0/len(bar_labels)) # the width of the bars
-
-fig = plt.figure(figsize=(10,6), dpi=80)
-plot = fig.add_subplot(1, 1, 1)
-
-rects = []
-for i in range(len(bar_vals)):
-    rects.append(plot.bar(ind+width*i, bar_vals[i], width, color=colors[i],
-                          yerr=bar_sdvs[i], align='center'))
-
-# add some
-plot.set_ylabel('Milliseconds (less is better)')
-plot.set_title("Javascript array test: %s" % select_label)
-plot.set_xticks(ind+width)
-plot.set_xticklabels( group_labels )
-
-fontP = FontProperties()
-fontP.set_size('small')
-plot.legend( [r[0] for r in rects], bar_labels, prop=fontP,
-            loc = 'center right', bbox_to_anchor = (1.0, legendHeight))
-
-def autolabel(rects):
-    # attach some text labels
-    for rect in rects:
-        height = rect.get_height()
-        if np.isnan(height):
-            height = 0.0
-        plot.text(rect.get_x()+rect.get_width()/2., height+20, '%d'%int(height),
-                ha='center', va='bottom', size='7')
-
-for rect in rects:
-    autolabel(rect)
-
-# Adjust axis sizes
-axis = list(plot.axis())
-axis[0] = -width          # Make sure left side has enough for bar
-#axis[1] = axis[1] * 1.20  # Add 20% to the right to make sure it fits
-axis[2] = 0               # Make y-axis start at 0
-axis[3] = axis[3] * 1.10  # Add 10% to the top
-plot.axis(axis)
-
-plt.show()
--- a/utils/launch.sh
+++ b/utils/launch.sh
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/bin/bash
 
 usage() {
     if [ "$*" ]; then
@@ -101,7 +101,7 @@
     exit 1
 fi
 
-echo -e "\n\nNavigate to this URL:\n"
+echo -e "\n\nNavigate to to this URL:\n"
 echo -e "    http://$(hostname):${PORT}/vnc.html?host=$(hostname)&port=${PORT}\n"
 echo -e "Press Ctrl-C to exit\n\n"
 
--- a/utils/nova-wsproxy.py
+++ /dev/null
@@ -1,171 +0,0 @@
-#!/usr/bin/env python
-
-'''
-A WebSocket to TCP socket proxy with support for "wss://" encryption.
-Copyright 2011 Joel Martin
-Licensed under LGPL version 3 (see docs/LICENSE.LGPL-3)
-
-You can make a cert/key with openssl using:
-openssl req -new -x509 -days 365 -nodes -out self.pem -keyout self.pem
-as taken from http://docs.python.org/dev/library/ssl.html#certificates
-
-'''
-
-import Cookie
-import optparse
-import socket
-import sys
-import time
-
-import wsproxy
-
-from nova import flags
-from nova import log as logging
-from nova import rpc
-from nova import utils
-
-
-FLAGS = flags.FLAGS
-flags.DEFINE_integer('vnc_proxy_idle_timeout', 180,
-                     'Seconds before idle connection destroyed')
-flags.DEFINE_flag(flags.HelpFlag())
-flags.DEFINE_flag(flags.HelpshortFlag())
-flags.DEFINE_flag(flags.HelpXMLFlag())
-
-
-class NovaWebSocketProxy(wsproxy.WebSocketProxy):
-    def __init__(self, *args, **kwargs):
-        self.register_nova_listeners()
-        wsproxy.WebSocketProxy.__init__(self, *args, **kwargs)
-
-    def register_nova_listeners(self):
-        self.tokens = {}
-
-        class TopicProxy():
-            @staticmethod
-            def authorize_vnc_console(context, **kwargs):
-                print "Received a token: %s" % kwargs
-                self.tokens[kwargs['token']] =  \
-                    {'args': kwargs, 'last_activity': time.time()}
-
-        self.conn = rpc.create_connection(new=True)
-        self.conn.create_consumer(
-                'vncproxy',
-                TopicProxy)
-
-        def delete_expired_tokens():
-            now = time.time()
-            to_delete = []
-            for k, v in self.tokens.items():
-                if now - v['last_activity'] > FLAGS.vnc_proxy_idle_timeout:
-                    to_delete.append(k)
-
-            for k in to_delete:
-                del self.tokens[k]
-
-        self.conn.consume_in_thread()
-        utils.LoopingCall(delete_expired_tokens).start(1)
-
-    def new_client(self):
-        """
-        Called after a new WebSocket connection has been established.
-        """
-        cookie = Cookie.SimpleCookie()
-        cookie.load(self.headers.getheader('cookie'))
-        token = cookie['token'].value
-        if not token in self.tokens:
-            raise Exception("Invalid Token")
-
-        # Get connection info
-        host = self.tokens[token]['args']['host']
-        port = int(self.tokens[token]['args']['port'])
-        # Connect to the target
-        self.msg("connecting to: %s:%s" % (
-                 host, port))
-        tsock = self.socket(host, port,
-                connect=True)
-
-        if self.verbose and not self.daemon:
-            print(self.traffic_legend)
-
-        # Start proxying
-        try:
-            self.do_proxy(tsock)
-        except:
-            if tsock:
-                tsock.shutdown(socket.SHUT_RDWR)
-                tsock.close()
-                self.vmsg("%s:%s: Target closed" %(
-                    host, port))
-            raise
-
-
-if __name__ == '__main__':
-    usage = "\n    %prog [options]"
-    usage += " [source_addr:]source_port target_addr:target_port"
-    usage += "\n    %prog [options]"
-    usage += " [source_addr:]source_port -- WRAP_COMMAND_LINE"
-    parser = optparse.OptionParser(usage=usage)
-    parser.add_option("--verbose", "-v", action="store_true",
-            help="verbose messages and per frame traffic")
-    parser.add_option("--flagfile", "-f", default=None,
-            help="Nova flagfile")
-    parser.add_option("--record",
-            help="record sessions to FILE.[session_number]", metavar="FILE")
-    parser.add_option("--daemon", "-D",
-            dest="daemon", action="store_true",
-            help="become a daemon (background process)")
-    parser.add_option("--cert", default="self.pem",
-            help="SSL certificate file")
-    parser.add_option("--key", default=None,
-            help="SSL key file (if separate from cert)")
-    parser.add_option("--ssl-only", action="store_true",
-            help="disallow non-encrypted connections")
-    parser.add_option("--web", default=None, metavar="DIR",
-            help="run webserver on same port. Serve files from DIR.")
-    parser.add_option("--wrap-mode", default="exit", metavar="MODE",
-            choices=["exit", "ignore", "respawn"],
-            help="action to take when the wrapped program exits "
-            "or daemonizes: exit (default), ignore, respawn")
-    (opts, args) = parser.parse_args()
-
-    # Sanity checks
-    if len(args) < 1:
-        parser.error("Too few arguments")
-    if sys.argv.count('--'):
-        opts.wrap_cmd = args[1:]
-    else:
-        opts.wrap_cmd = None
-        if len(args) > 1:
-            parser.error("Too many arguments")
-
-    if opts.ssl_only and not os.path.exists(opts.cert):
-        parser.error("SSL only and %s not found" % opts.cert)
-
-    # Parse host:port and convert ports to numbers
-    if args[0].count(':') > 0:
-        opts.listen_host, opts.listen_port = args[0].rsplit(':', 1)
-    else:
-        opts.listen_host, opts.listen_port = '', args[0]
-
-    try:
-        opts.listen_port = int(opts.listen_port)
-    except:
-        parser.error("Error parsing listen port")
-
-    # Dummy values that wsproxy expects
-    opts.target_host = 'ignore'
-    opts.target_port = 'ignore'
-
-    # Setup flags
-    utils.default_flagfile()
-    FLAGS(sys.argv)
-
-    # FIXME - the proxy base class does not recognize the flagfile
-    # option so remove if present
-    if  opts.__dict__.get('flagfile'):
-        del opts.__dict__['flagfile']
-
-    # Create and start the NovaWebSockets proxy
-    server = NovaWebSocketProxy(**opts.__dict__)
-    server.start_server()
--- a/utils/rebind
+++ b/utils/rebind
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/bin/bash
 
 usage() {
     echo "Usage: $(basename $0) OLD_PORT NEW_PORT COMMAND_LINE"
--- a/utils/u2x11
+++ /dev/null
@@ -1,28 +0,0 @@
-#!/usr/bin/env bash
-#
-# Convert "U+..." commented entries in /usr/include/X11/keysymdef.h
-# into JavaScript for use by noVNC.  Note this is likely to produce
-# a few duplicate properties with clashing values, that will need
-# resolving manually.
-#
-# Colin Dean <colin@xvpsource.org>
-#
-
-regex="^#define[ \t]+XK_[A-Za-z0-9_]+[ \t]+0x([0-9a-fA-F]+)[ \t]+\/\*[ \t]+U\+([0-9a-fA-F]+)[ \t]+[^*]+.[ \t]+\*\/[ \t]*$"
-echo "unicodeTable = {"
-while read line; do
-    if echo "${line}" | egrep -qs "${regex}"; then
-
-        x11=$(echo "${line}" | sed -r "s/${regex}/\1/")
-        vnc=$(echo "${line}" | sed -r "s/${regex}/\2/")
-	
-	if echo "${vnc}" | egrep -qs "^00[2-9A-F][0-9A-F]$"; then
-	    : # skip ISO Latin-1 (U+0020 to U+00FF) as 1-to-1 mapping
-	else
-	    # note 1-to-1 is possible (e.g. for Euro symbol, U+20AC)
-	    echo "    0x${vnc} : 0x${x11},"
-	fi
-    fi
-done < /usr/include/X11/keysymdef.h | uniq
-echo "};"
-
--- a/utils/web.py
+++ b/utils/web.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/python
 '''
 A super simple HTTP/HTTPS webserver for python. Automatically detect
 
--- a/utils/websocket.py
+++ b/utils/websocket.py
@@ -1,62 +1,27 @@
-#!/usr/bin/env python
+#!/usr/bin/python
 
 '''
 Python WebSocket library with support for "wss://" encryption.
-Copyright 2011 Joel Martin
+Copyright 2010 Joel Martin
 Licensed under LGPL version 3 (see docs/LICENSE.LGPL-3)
 
-Supports following protocol versions:
-    - http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75
-    - http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76
-    - http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-10
-
 You can make a cert/key with openssl using:
 openssl req -new -x509 -days 365 -nodes -out self.pem -keyout self.pem
 as taken from http://docs.python.org/dev/library/ssl.html#certificates
 
 '''
 
-import os, sys, time, errno, signal, socket, struct, traceback, select
-from cgi import parse_qsl
+import sys, socket, ssl, struct, traceback, select
+import os, resource, errno, signal # daemonizing
+from SimpleHTTPServer import SimpleHTTPRequestHandler
+from cStringIO import StringIO
 from base64 import b64encode, b64decode
-
-# Imports that vary by python version
-if sys.hexversion > 0x3000000:
-    # python >= 3.0
-    from io import StringIO
-    from http.server import SimpleHTTPRequestHandler
-    from urllib.parse import urlsplit
-    b2s = lambda buf: buf.decode('latin_1')
-    s2b = lambda s: s.encode('latin_1')
-else:
-    # python 2.X
-    from cStringIO import StringIO
-    from SimpleHTTPServer import SimpleHTTPRequestHandler
-    from urlparse import urlsplit
-    # No-ops
-    b2s = lambda buf: buf
-    s2b = lambda s: s
-
-if sys.hexversion >= 0x2060000:
-    # python >= 2.6
-    from multiprocessing import Process
-    from hashlib import md5, sha1
-else:
-    # python < 2.6
-    Process = None
-    from md5 import md5
-    from sha import sha as sha1
-
-# Degraded functionality if these imports are missing
-for mod, sup in [('numpy', 'HyBi protocol'),
-        ('ssl', 'TLS/SSL/wss'), ('resource', 'daemonizing')]:
-    try:
-        globals()[mod] = __import__(mod)
-    except ImportError:
-        globals()[mod] = None
-        print("WARNING: no '%s' module, %s support disabled" % (
-            mod, sup))
-
+try:
+    from hashlib import md5
+except:
+    from md5 import md5  # Support python 2.4
+from urlparse import urlsplit
+from cgi import parse_qsl
 
 class WebSocketServer(object):
     """
@@ -64,39 +29,31 @@
     Must be sub-classed with new_client method definition.
     """
 
-    buffer_size = 65536
-
-    server_handshake_hixie = """HTTP/1.1 101 Web Socket Protocol Handshake\r
+    server_handshake = """HTTP/1.1 101 Web Socket Protocol Handshake\r
 Upgrade: WebSocket\r
 Connection: Upgrade\r
 %sWebSocket-Origin: %s\r
 %sWebSocket-Location: %s://%s%s\r
-"""
-
-    server_handshake_hybi = """HTTP/1.1 101 Switching Protocols\r
-Upgrade: websocket\r
-Connection: Upgrade\r
-Sec-WebSocket-Accept: %s\r
-"""
-
-    GUID = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11"
+%sWebSocket-Protocol: sample\r
+\r
+%s"""
 
     policy_response = """<cross-domain-policy><allow-access-from domain="*" to-ports="*" /></cross-domain-policy>\n"""
 
     class EClose(Exception):
         pass
 
-    def __init__(self, listen_host='', listen_port=None, source_is_ipv6=False,
+    def __init__(self, listen_host='', listen_port=None,
             verbose=False, cert='', key='', ssl_only=None,
             daemon=False, record='', web=''):
 
         # settings
-        self.verbose        = verbose
-        self.listen_host    = listen_host
-        self.listen_port    = listen_port
-        self.ssl_only       = ssl_only
-        self.daemon         = daemon
-        self.handler_id     = 1
+        self.verbose     = verbose
+        self.listen_host = listen_host
+        self.listen_port = listen_port
+        self.ssl_only    = ssl_only
+        self.daemon      = daemon
+
 
         # Make paths settings absolute
         self.cert = os.path.abspath(cert)
@@ -111,71 +68,31 @@
         if self.web:
             os.chdir(self.web)
 
-        # Sanity checks
-        if not ssl and self.ssl_only:
-            raise Exception("No 'ssl' module and SSL-only specified")
-        if self.daemon and not resource:
-            raise Exception("Module 'resource' required to daemonize")
-
-        # Show configuration
-        print("WebSocket server settings:")
-        print("  - Listen on %s:%s" % (
-                self.listen_host, self.listen_port))
-        print("  - Flash security policy server")
+        self.handler_id  = 1
+
+        print "WebSocket server settings:"
+        print "  - Listen on %s:%s" % (
+                self.listen_host, self.listen_port)
+        print "  - Flash security policy server"
         if self.web:
-            print("  - Web server. Web root: %s" % self.web)
-        if ssl:
-            if os.path.exists(self.cert):
-                print("  - SSL/TLS support")
-                if self.ssl_only:
-                    print("  - Deny non-SSL/TLS connections")
-            else:
-                print("  - No SSL/TLS support (no cert file)")
+            print "  - Web server"
+        if os.path.exists(self.cert):
+            print "  - SSL/TLS support"
+            if self.ssl_only:
+                print "  - Deny non-SSL/TLS connections"
         else:
-            print("  - No SSL/TLS support (no 'ssl' module)")
+            print "  - No SSL/TLS support (no cert file)"
         if self.daemon:
-            print("  - Backgrounding (daemon)")
-        if self.record:
-            print("  - Recording to '%s.*'" % self.record)
+            print "  - Backgrounding (daemon)"
 
     #
     # WebSocketServer static methods
     #
-
-    @staticmethod
-    def socket(host, port=None, connect=False, prefer_ipv6=False):
-        """ Resolve a host (and optional port) to an IPv4 or IPv6
-        address. Create a socket. Bind to it if listen is set,
-        otherwise connect to it. Return the socket.
-        """
-        flags = 0
-        if host == '':
-            host = None
-        if connect and not port:
-            raise Exception("Connect mode requires a port")
-        if not connect:
-            flags = flags | socket.AI_PASSIVE
-        addrs = socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM,
-                socket.IPPROTO_TCP, flags)
-        if not addrs:
-            raise Exception("Could resolve host '%s'" % host)
-        addrs.sort(key=lambda x: x[0])
-        if prefer_ipv6:
-            addrs.reverse()
-        sock = socket.socket(addrs[0][0], addrs[0][1])
-        if connect:
-            sock.connect(addrs[0][4])
-        else:
-            sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
-            sock.bind(addrs[0][4])
-            sock.listen(100)
-        return sock
-
     @staticmethod
-    def daemonize(keepfd=None, chdir='/'):
+    def daemonize(self, keepfd=None):
         os.umask(0)
-        if chdir:
-            os.chdir(chdir)
+        if self.web:
+            os.chdir(self.web)
         else:
             os.chdir('/')
         os.setgid(os.getgid())  # relinquish elevations
@@ -198,8 +115,7 @@
             try:
                 if fd != keepfd:
                     os.close(fd)
-            except OSError:
-                _, exc, _ = sys.exc_info()
+            except OSError, exc:
                 if exc.errno != errno.EBADF: raise
 
         # Redirect I/O to /dev/null
@@ -208,147 +124,43 @@
         os.dup2(os.open(os.devnull, os.O_RDWR), sys.stderr.fileno())
 
     @staticmethod
-    def encode_hybi(buf, opcode, base64=False):
-        """ Encode a HyBi style WebSocket frame.
-        Optional opcode:
-            0x0 - continuation
-            0x1 - text frame (base64 encode buf)
-            0x2 - binary frame (use raw buf)
-            0x8 - connection close
-            0x9 - ping
-            0xA - pong
-        """
-        if base64:
-            buf = b64encode(buf)
-
-        b1 = 0x80 | (opcode & 0x0f) # FIN + opcode
-        payload_len = len(buf)
-        if payload_len <= 125:
-            header = struct.pack('>BB', b1, payload_len)
-        elif payload_len > 125 and payload_len < 65536:
-            header = struct.pack('>BBH', b1, 126, payload_len)
-        elif payload_len >= 65536:
-            header = struct.pack('>BBQ', b1, 127, payload_len)
-
-        #print("Encoded: %s" % repr(header + buf))
-
-        return header + buf, len(header), 0
+    def encode(buf):
+        """ Encode a WebSocket packet. """
+        buf = b64encode(buf)
+        return "\x00%s\xff" % buf
 
     @staticmethod
-    def decode_hybi(buf, base64=False):
-        """ Decode HyBi style WebSocket packets.
-        Returns:
-            {'fin'          : 0_or_1,
-             'opcode'       : number,
-             'mask'         : 32_bit_number,
-             'hlen'         : header_bytes_number,
-             'length'       : payload_bytes_number,
-             'payload'      : decoded_buffer,
-             'left'         : bytes_left_number,
-             'close_code'   : number,
-             'close_reason' : string}
-        """
-
-        f = {'fin'          : 0,
-             'opcode'       : 0,
-             'mask'         : 0,
-             'hlen'         : 2,
-             'length'       : 0,
-             'payload'      : None,
-             'left'         : 0,
-             'close_code'   : None,
-             'close_reason' : None}
-
-        blen = len(buf)
-        f['left'] = blen
-
-        if blen < f['hlen']:
-            return f # Incomplete frame header
-
-        b1, b2 = struct.unpack_from(">BB", buf)
-        f['opcode'] = b1 & 0x0f
-        f['fin'] = (b1 & 0x80) >> 7
-        has_mask = (b2 & 0x80) >> 7
-
-        f['length'] = b2 & 0x7f
-
-        if f['length'] == 126:
-            f['hlen'] = 4
-            if blen < f['hlen']:
-                return f # Incomplete frame header
-            (f['length'],) = struct.unpack_from('>xxH', buf)
-        elif f['length'] == 127:
-            f['hlen'] = 10
-            if blen < f['hlen']:
-                return f # Incomplete frame header
-            (f['length'],) = struct.unpack_from('>xxQ', buf)
-
-        full_len = f['hlen'] + has_mask * 4 + f['length']
-
-        if blen < full_len: # Incomplete frame
-            return f # Incomplete frame header
-
-        # Number of bytes that are part of the next frame(s)
-        f['left'] = blen - full_len
-
-        # Process 1 frame
-        if has_mask:
-            # unmask payload
-            f['mask'] = buf[f['hlen']:f['hlen']+4]
-            b = c = s2b('')
-            if f['length'] >= 4:
-                mask = numpy.frombuffer(buf, dtype=numpy.dtype('<u4'),
-                        offset=f['hlen'], count=1)
-                data = numpy.frombuffer(buf, dtype=numpy.dtype('<u4'),
-                        offset=f['hlen'] + 4, count=int(f['length'] / 4))
-                #b = numpy.bitwise_xor(data, mask).data
-                b = numpy.bitwise_xor(data, mask).tostring()
-
-            if f['length'] % 4:
-                #print("Partial unmask")
-                mask = numpy.frombuffer(buf, dtype=numpy.dtype('B'),
-                        offset=f['hlen'], count=(f['length'] % 4))
-                data = numpy.frombuffer(buf, dtype=numpy.dtype('B'),
-                        offset=full_len - (f['length'] % 4),
-                        count=(f['length'] % 4))
-                c = numpy.bitwise_xor(data, mask).tostring()
-            f['payload'] = b + c
+    def decode(buf):
+        """ Decode WebSocket packets. """
+        if buf.count('\xff') > 1:
+            return [b64decode(d[1:]) for d in buf.split('\xff')]
         else:
-            print("Unmasked frame: %s" % repr(buf))
-            f['payload'] = buf[(f['hlen'] + has_mask * 4):full_len]
+            return [b64decode(buf[1:-1])]
 
-        if base64 and f['opcode'] in [1, 2]:
+    @staticmethod
+    def parse_handshake(handshake):
+        """ Parse fields from client WebSockets handshake. """
+        ret = {}
+        req_lines = handshake.split("\r\n")
+        if not req_lines[0].startswith("GET "):
+            raise Exception("Invalid handshake: no GET request line")
+        ret['path'] = req_lines[0].split(" ")[1]
+        for line in req_lines[1:]:
+            if line == "": break
             try:
-                f['payload'] = b64decode(f['payload'])
+                var, val = line.split(": ")
             except:
-                print("Exception while b64decoding buffer: %s" %
-                        repr(buf))
-                raise
-
-        if f['opcode'] == 0x08:
-            if f['length'] >= 2:
-                f['close_code'] = struct.unpack_from(">H", f['payload'])
-            if f['length'] > 3:
-                f['close_reason'] = f['payload'][2:]
+                raise Exception("Invalid handshake header: %s" % line)
+            ret[var] = val
 
-        return f
-
-    @staticmethod
-    def encode_hixie(buf):
-        return s2b("\x00" + b2s(b64encode(buf)) + "\xff"), 1, 1
-
-    @staticmethod
-    def decode_hixie(buf):
-        end = buf.find(s2b('\xff'))
-        return {'payload': b64decode(buf[1:end]),
-                'hlen': 1,
-                'length': end - 1,
-                'left': len(buf) - (end + 1)}
+        if req_lines[-2] == "":
+            ret['key3'] = req_lines[-1]
 
+        return ret
 
     @staticmethod
     def gen_md5(keys):
-        """ Generate hash value for WebSockets hixie-76. """
+        """ Generate hash value for WebSockets handshake v76. """
         key1 = keys['Sec-WebSocket-Key1']
         key2 = keys['Sec-WebSocket-Key2']
         key3 = keys['key3']
@@ -357,8 +169,8 @@
         num1 = int("".join([c for c in key1 if c.isdigit()])) / spaces1
         num2 = int("".join([c for c in key2 if c.isdigit()])) / spaces2
 
-        return b2s(md5(struct.pack('>II8s',
-            int(num1), int(num2), key3)).digest())
+        return md5(struct.pack('>II8s', num1, num2, key3)).digest()
+
 
     #
     # WebSocketServer logging/output functions
@@ -373,7 +185,7 @@
     def msg(self, msg):
         """ Output message with handler_id prefix. """
         if not self.daemon:
-            print("% 3d: %s" % (self.handler_id, msg))
+            print "% 3d: %s" % (self.handler_id, msg)
 
     def vmsg(self, msg):
         """ Same as msg() but only if verbose. """
@@ -383,141 +195,6 @@
     #
     # Main WebSocketServer methods
     #
-    def send_frames(self, bufs=None):
-        """ Encode and send WebSocket frames. Any frames already
-        queued will be sent first. If buf is not set then only queued
-        frames will be sent. Returns the number of pending frames that
-        could not be fully sent. If returned pending frames is greater
-        than 0, then the caller should call again when the socket is
-        ready. """
-
-        tdelta = int(time.time()*1000) - self.start_time
-
-        if bufs:
-            for buf in bufs:
-                if self.version.startswith("hybi"):
-                    if self.base64:
-                        encbuf, lenhead, lentail = self.encode_hybi(
-                                buf, opcode=1, base64=True)
-                    else:
-                        encbuf, lenhead, lentail = self.encode_hybi(
-                                buf, opcode=2, base64=False)
-
-                else:
-                    encbuf, lenhead, lentail = self.encode_hixie(buf)
-
-                if self.rec:
-                    self.rec.write("%s,\n" %
-                            repr("{%s{" % tdelta
-                                + encbuf[lenhead:-lentail]))
-
-                self.send_parts.append(encbuf)
-
-        while self.send_parts:
-            # Send pending frames
-            buf = self.send_parts.pop(0)
-            sent = self.client.send(buf)
-
-            if sent == len(buf):
-                self.traffic("<")
-            else:
-                self.traffic("<.")
-                self.send_parts.insert(0, buf[sent:])
-                break
-
-        return len(self.send_parts)
-
-    def recv_frames(self):
-        """ Receive and decode WebSocket frames.
-
-        Returns:
-            (bufs_list, closed_string)
-        """
-
-        closed = False
-        bufs = []
-        tdelta = int(time.time()*1000) - self.start_time
-
-        buf = self.client.recv(self.buffer_size)
-        if len(buf) == 0:
-            closed = "Client closed abruptly"
-            return bufs, closed
-
-        if self.recv_part:
-            # Add partially received frames to current read buffer
-            buf = self.recv_part + buf
-            self.recv_part = None
-
-        while buf:
-            if self.version.startswith("hybi"):
-
-                frame = self.decode_hybi(buf, base64=self.base64)
-                #print("Received buf: %s, frame: %s" % (repr(buf), frame))
-
-                if frame['payload'] == None:
-                    # Incomplete/partial frame
-                    self.traffic("}.")
-                    if frame['left'] > 0:
-                        self.recv_part = buf[-frame['left']:]
-                    break
-                else:
-                    if frame['opcode'] == 0x8: # connection close
-                        closed = "Client closed, reason: %s - %s" % (
-                                frame['close_code'],
-                                frame['close_reason'])
-                        break
-
-            else:
-                if buf[0:2] == '\xff\x00':
-                    closed = "Client sent orderly close frame"
-                    break
-
-                elif buf[0:2] == '\x00\xff':
-                    buf = buf[2:]
-                    continue # No-op
-
-                elif buf.count(s2b('\xff')) == 0:
-                    # Partial frame
-                    self.traffic("}.")
-                    self.recv_part = buf
-                    break
-
-                frame = self.decode_hixie(buf)
-
-            self.traffic("}")
-
-            if self.rec:
-                start = frame['hlen']
-                end = frame['hlen'] + frame['length']
-                self.rec.write("%s,\n" %
-                        repr("}%s}" % tdelta + buf[start:end]))
-
-
-            bufs.append(frame['payload'])
-
-            if frame['left']:
-                buf = buf[-frame['left']:]
-            else:
-                buf = ''
-
-        return bufs, closed
-
-    def send_close(self, code=None, reason=''):
-        """ Send a WebSocket orderly close frame. """
-
-        if self.version.startswith("hybi"):
-            msg = s2b('')
-            if code != None:
-                msg = struct.pack(">H%ds" % (len(reason)), code)
-
-            buf, h, t = self.encode_hybi(msg, opcode=0x08, base64=False)
-            self.client.send(buf)
-
-        elif self.version == "hixie-76":
-            buf = s2b('\xff\x00')
-            self.client.send(buf)
-
-        # No orderly close for 75
 
     def do_handshake(self, sock, address):
         """
@@ -545,33 +222,29 @@
         # Peek, but do not read the data so that we have a opportunity
         # to SSL wrap the socket first
         handshake = sock.recv(1024, socket.MSG_PEEK)
-        #self.msg("Handshake [%s]" % handshake)
+        #self.msg("Handshake [%s]" % repr(handshake))
 
         if handshake == "":
             raise self.EClose("ignoring empty handshake")
 
-        elif handshake.startswith(s2b("<policy-file-request/>")):
+        elif handshake.startswith("<policy-file-request/>"):
             # Answer Flash policy request
             handshake = sock.recv(1024)
-            sock.send(s2b(self.policy_response))
+            sock.send(self.policy_response)
             raise self.EClose("Sending flash policy response")
 
         elif handshake[0] in ("\x16", "\x80"):
             # SSL wrap the connection
-            if not ssl:
-                raise self.EClose("SSL connection but no 'ssl' module")
             if not os.path.exists(self.cert):
                 raise self.EClose("SSL connection but '%s' not found"
                                   % self.cert)
-            retsock = None
             try:
                 retsock = ssl.wrap_socket(
                         sock,
                         server_side=True,
                         certfile=self.cert,
                         keyfile=self.key)
-            except ssl.SSLError:
-                _, x, _ = sys.exc_info()
+            except ssl.SSLError, x:
                 if x.args[0] == ssl.SSL_ERROR_EOF:
                     raise self.EClose("")
                 else:
@@ -588,91 +261,46 @@
             scheme = "ws"
             stype = "Plain non-SSL (ws://)"
 
-        wsh = WSRequestHandler(retsock, address, not self.web)
-        if wsh.last_code == 101:
-            # Continue on to handle WebSocket upgrade
-            pass
-        elif wsh.last_code == 405:
-            raise self.EClose("Normal web request received but disallowed")
-        elif wsh.last_code < 200 or wsh.last_code >= 300:
-            raise self.EClose(wsh.last_message)
-        elif self.verbose:
-            raise self.EClose(wsh.last_message)
-        else:
-            raise self.EClose("")
-
-        h = self.headers = wsh.headers
-        path = self.path = wsh.path
+        # Now get the data from the socket
+        handshake = retsock.recv(4096)
 
-        prot = 'WebSocket-Protocol'
-        protocols = h.get('Sec-'+prot, h.get(prot, '')).split(',')
+        if len(handshake) == 0:
+            raise self.EClose("Client closed during handshake")
 
-        ver = h.get('Sec-WebSocket-Version')
-        if ver:
-            # HyBi/IETF version of the protocol
-
-            if sys.hexversion < 0x2060000 or not numpy:
-                raise self.EClose("Python >= 2.6 and numpy module is required for HyBi-07 or greater")
-
-            # HyBi-07 report version 7
-            # HyBi-08 - HyBi-12 report version 8
-            # HyBi-13 reports version 13
-            if ver in ['7', '8', '13']:
-                self.version = "hybi-%02d" % int(ver)
+        # Check for and handle normal web requests
+        if handshake.startswith('GET ') and \
+            handshake.find('Upgrade: WebSocket\r\n') == -1:
+            if not self.web:
+                raise self.EClose("Normal web request received but disallowed")
+            sh = SplitHTTPHandler(handshake, retsock, address)
+            if sh.last_code < 200 or sh.last_code >= 300:
+                raise self.EClose(sh.last_message)
+            elif self.verbose:
+                raise self.EClose(sh.last_message)
             else:
-                raise self.EClose('Unsupported protocol version %s' % ver)
-
-            key = h['Sec-WebSocket-Key']
-
-            # Choose binary if client supports it
-            if 'binary' in protocols:
-                self.base64 = False
-            elif 'base64' in protocols:
-                self.base64 = True
-            else:
-                raise self.EClose("Client must support 'binary' or 'base64' protocol")
-
-            # Generate the hash value for the accept header
-            accept = b64encode(sha1(s2b(key + self.GUID)).digest())
-
-            response = self.server_handshake_hybi % b2s(accept)
-            if self.base64:
-                response += "Sec-WebSocket-Protocol: base64\r\n"
-            else:
-                response += "Sec-WebSocket-Protocol: binary\r\n"
-            response += "\r\n"
+                raise self.EClose("")
 
+        #self.msg("handshake: " + repr(handshake))
+        # Parse client WebSockets handshake
+        h = self.parse_handshake(handshake)
+
+        if h.get('key3'):
+            trailer = self.gen_md5(h)
+            pre = "Sec-"
+            ver = 76
         else:
-            # Hixie version of the protocol (75 or 76)
-
-            if h.get('key3'):
-                trailer = self.gen_md5(h)
-                pre = "Sec-"
-                self.version = "hixie-76"
-            else:
-                trailer = ""
-                pre = ""
-                self.version = "hixie-75"
+            trailer = ""
+            pre = ""
+            ver = 75
 
-            # We only support base64 in Hixie era
-            self.base64 = True
-
-            response = self.server_handshake_hixie % (pre,
-                    h['Origin'], pre, scheme, h['Host'], path)
-
-            if 'base64' in protocols:
-                response += "%sWebSocket-Protocol: base64\r\n" % pre
-            else:
-                self.msg("Warning: client does not report 'base64' protocol support")
-            response += "\r\n" + trailer
-
-        self.msg("%s: %s WebSocket connection" % (address[0], stype))
-        self.msg("%s: Version %s, base64: '%s'" % (address[0],
-            self.version, self.base64))
+        self.msg("%s: %s WebSocket connection (version %s)"
+                    % (address[0], stype, ver))
 
         # Send server WebSockets handshake response
-        #self.msg("sending response [%s]" % response)
-        retsock.send(s2b(response))
+        response = self.server_handshake % (pre, h['Origin'], pre,
+                scheme, h['Host'], h['path'], pre, trailer)
+        #self.msg("sending response:", repr(response))
+        retsock.send(response)
 
         # Return the WebSockets socket which may be SSL wrapped
         return retsock
@@ -690,8 +318,9 @@
         #self.vmsg("Running poll()")
         pass
 
-    def fallback_SIGCHLD(self, sig, stack):
-        # Reap zombies when using os.fork() (python 2.4)
+    def top_SIGCHLD(self, sig, stack):
+        # Reap zombies after calling child SIGCHLD handler
+        self.do_SIGCHLD(sig, stack)
         self.vmsg("Got SIGCHLD, reaping zombies")
         try:
             result = os.waitpid(-1, os.WNOHANG)
@@ -701,52 +330,14 @@
         except (OSError):
             pass
 
+    def do_SIGCHLD(self, sig, stack):
+        pass
+
     def do_SIGINT(self, sig, stack):
         self.msg("Got SIGINT, exiting")
         sys.exit(0)
 
-    def top_new_client(self, startsock, address):
-        """ Do something with a WebSockets client connection. """
-        # Initialize per client settings
-        self.send_parts = []
-        self.recv_part  = None
-        self.base64     = False
-        self.rec        = None
-        self.start_time = int(time.time()*1000)
-
-        # handler process
-        try:
-            try:
-                self.client = self.do_handshake(startsock, address)
-
-                if self.record:
-                    # Record raw frame data as JavaScript array
-                    fname = "%s.%s" % (self.record,
-                                        self.handler_id)
-                    self.msg("opening record file: %s" % fname)
-                    self.rec = open(fname, 'w+')
-                    self.rec.write("var VNC_frame_data = [\n")
-
-                self.new_client()
-            except self.EClose:
-                _, exc, _ = sys.exc_info()
-                # Connection was not a WebSockets connection
-                if exc.args[0]:
-                    self.msg("%s: %s" % (address[0], exc.args[0]))
-            except Exception:
-                _, exc, _ = sys.exc_info()
-                self.msg("handler exception: %s" % str(exc))
-                if self.verbose:
-                    self.msg(traceback.format_exc())
-        finally:
-            if self.rec:
-                self.rec.write("'EOF']\n")
-                self.rec.close()
-
-            if self.client and self.client != startsock:
-                self.client.close()
-
-    def new_client(self):
+    def new_client(self, client):
         """ Do something with a WebSockets client connection. """
         raise("WebSocketServer.new_client() must be overloaded")
 
@@ -757,40 +348,38 @@
         is a WebSockets client then call new_client() method (which must
         be overridden) for each new client connection.
         """
-        lsock = self.socket(self.listen_host, self.listen_port)
+
+        lsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+        lsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
+        lsock.bind((self.listen_host, self.listen_port))
+        lsock.listen(100)
 
         if self.daemon:
-            self.daemonize(keepfd=lsock.fileno(), chdir=self.web)
+            self.daemonize(self, keepfd=lsock.fileno())
 
         self.started()  # Some things need to happen after daemonizing
 
-        # Allow override of SIGINT
+        # Reep zombies
+        signal.signal(signal.SIGCHLD, self.top_SIGCHLD)
         signal.signal(signal.SIGINT, self.do_SIGINT)
-        if not Process:
-            # os.fork() (python 2.4) child reaper
-            signal.signal(signal.SIGCHLD, self.fallback_SIGCHLD)
 
         while True:
             try:
                 try:
-                    self.client = None
-                    startsock = None
+                    csock = startsock = None
                     pid = err = 0
 
                     try:
                         self.poll()
 
-                        ready = select.select([lsock], [], [], 1)[0]
+                        ready = select.select([lsock], [], [], 1)[0];
                         if lsock in ready:
                             startsock, address = lsock.accept()
                         else:
                             continue
-                    except Exception:
-                        _, exc, _ = sys.exc_info()
+                    except Exception, exc:
                         if hasattr(exc, 'errno'):
                             err = exc.errno
-                        elif hasattr(exc, 'args'):
-                            err = exc.args[0]
                         else:
                             err = exc[0]
                         if err == errno.EINTR:
@@ -799,67 +388,50 @@
                         else:
                             raise
 
-                    if Process:
-                        self.vmsg('%s: new handler Process' % address[0])
-                        p = Process(target=self.top_new_client,
-                                args=(startsock, address))
-                        p.start()
-                        # child will not return
+                    self.vmsg('%s: forking handler' % address[0])
+                    pid = os.fork()
+
+                    if pid == 0:
+                        # handler process
+                        csock = self.do_handshake(startsock, address)
+                        self.new_client(csock)
                     else:
-                        # python 2.4
-                        self.vmsg('%s: forking handler' % address[0])
-                        pid = os.fork()
-                        if pid == 0:
-                            # child handler process
-                            self.top_new_client(startsock, address)
-                            break  # child process exits
-
-                    # parent process
-                    self.handler_id += 1
-
-                except KeyboardInterrupt:
-                    _, exc, _ = sys.exc_info()
-                    print("In KeyboardInterrupt")
+                        # parent process
+                        self.handler_id += 1
+
+                except self.EClose, exc:
+                    # Connection was not a WebSockets connection
+                    if exc.args[0]:
+                        self.msg("%s: %s" % (address[0], exc.args[0]))
+                except KeyboardInterrupt, exc:
                     pass
-                except SystemExit:
-                    _, exc, _ = sys.exc_info()
-                    print("In SystemExit")
-                    break
-                except Exception:
-                    _, exc, _ = sys.exc_info()
+                except Exception, exc:
                     self.msg("handler exception: %s" % str(exc))
                     if self.verbose:
                         self.msg(traceback.format_exc())
 
             finally:
+                if csock and csock != startsock:
+                    csock.close()
                 if startsock:
                     startsock.close()
 
+            if pid == 0:
+                break # Child process exits
+
 
-# HTTP handler with WebSocket upgrade support
-class WSRequestHandler(SimpleHTTPRequestHandler):
-    def __init__(self, req, addr, only_upgrade=False):
-        self.only_upgrade = only_upgrade # only allow upgrades
+# HTTP handler with request from a string and response to a socket
+class SplitHTTPHandler(SimpleHTTPRequestHandler):
+    def __init__(self, req, resp, addr):
+        # Save the response socket
+        self.response = resp
         SimpleHTTPRequestHandler.__init__(self, req, addr, object())
 
-    def do_GET(self):
-        if (self.headers.get('upgrade') and
-                self.headers.get('upgrade').lower() == 'websocket'):
-
-            if (self.headers.get('sec-websocket-key1') or
-                    self.headers.get('websocket-key1')):
-                # For Hixie-76 read out the key hash
-                self.headers.__setitem__('key3', self.rfile.read(8))
-
-            # Just indicate that an WebSocket upgrade is needed
-            self.last_code = 101
-            self.last_message = "101 Switching Protocols"
-        elif self.only_upgrade:
-            # Normal web request responses are disabled
-            self.last_code = 405
-            self.last_message = "405 Method Not Allowed"
-        else:
-            SimpleHTTPRequestHandler.do_GET(self)
+    def setup(self):
+        self.connection = self.response
+        # Duck type request string to file object
+        self.rfile = StringIO(self.request)
+        self.wfile = self.connection.makefile('wb', self.wbufsize)
 
     def send_response(self, code, message=None):
         # Save the status code
@@ -870,3 +442,4 @@
         # Save instead of printing
         self.last_message = f % args
 
+
--- a/utils/websockify
+++ b/utils/websockify
@@ -1,8 +1,8 @@
-#!/usr/bin/env python
+#!/usr/bin/python
 
 '''
 A WebSocket to TCP socket proxy with support for "wss://" encryption.
-Copyright 2011 Joel Martin
+Copyright 2010 Joel Martin
 Licensed under LGPL version 3 (see docs/LICENSE.LGPL-3)
 
 You can make a cert/key with openssl using:
@@ -39,10 +39,10 @@
 
     def __init__(self, *args, **kwargs):
         # Save off proxy specific options
-        self.target_host    = kwargs.pop('target_host')
-        self.target_port    = kwargs.pop('target_port')
-        self.wrap_cmd       = kwargs.pop('wrap_cmd')
-        self.wrap_mode      = kwargs.pop('wrap_mode')
+        self.target_host   = kwargs.pop('target_host')
+        self.target_port   = kwargs.pop('target_port')
+        self.wrap_cmd      = kwargs.pop('wrap_cmd')
+        self.wrap_mode     = kwargs.pop('wrap_mode')
         # Last 3 timestamps command was run
         self.wrap_times    = [0, 0, 0]
 
@@ -74,7 +74,7 @@
         WebSocketServer.__init__(self, *args, **kwargs)
 
     def run_wrap_cmd(self):
-        print("Starting '%s'" % " ".join(self.wrap_cmd))
+        print "Starting '%s'" % " ".join(self.wrap_cmd)
         self.wrap_times.append(time.time())
         self.wrap_times.pop(0)
         self.cmd = subprocess.Popen(
@@ -88,14 +88,14 @@
         # Need to call wrapped command after daemonization so we can
         # know when the wrapped command exits
         if self.wrap_cmd:
-            print("  - proxying from %s:%s to '%s' (port %s)\n" % (
+            print "  - proxying from %s:%s to '%s' (port %s)\n" % (
                     self.listen_host, self.listen_port,
-                    " ".join(self.wrap_cmd), self.target_port))
+                    " ".join(self.wrap_cmd), self.target_port)
             self.run_wrap_cmd()
         else:
-            print("  - proxying from %s:%s to %s:%s\n" % (
+            print "  - proxying from %s:%s to %s:%s\n" % (
                     self.listen_host, self.listen_port,
-                    self.target_host, self.target_port))
+                    self.target_host, self.target_port)
 
     def poll(self):
         # If we are wrapping a command, check it's status
@@ -118,7 +118,7 @@
                 if (now - avg) < 10:
                     # 3 times in the last 10 seconds
                     if self.spawn_message:
-                        print("Command respawning too fast")
+                        print "Command respawning too fast"
                         self.spawn_message = False
                 else:
                     self.run_wrap_cmd()
@@ -133,45 +133,58 @@
     # will be run in a separate forked process for each connection.
     #
 
-    def new_client(self):
+    def new_client(self, client):
         """
         Called after a new WebSocket connection has been established.
         """
 
+        self.rec = None
+        if self.record:
+            # Record raw frame data as a JavaScript compatible file
+            fname = "%s.%s" % (self.record,
+                                self.handler_id)
+            self.msg("opening record file: %s" % fname)
+            self.rec = open(fname, 'w+')
+            self.rec.write("var VNC_frame_data = [\n")
+
         # Connect to the target
         self.msg("connecting to: %s:%s" % (
                  self.target_host, self.target_port))
-        tsock = self.socket(self.target_host, self.target_port,
-                connect=True)
+        tsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+        tsock.connect((self.target_host, self.target_port))
 
         if self.verbose and not self.daemon:
-            print(self.traffic_legend)
+            print self.traffic_legend
 
-        # Start proxying
+        # Stat proxying
         try:
-            self.do_proxy(tsock)
+            self.do_proxy(client, tsock)
         except:
             if tsock:
-                tsock.shutdown(socket.SHUT_RDWR)
                 tsock.close()
                 self.vmsg("%s:%s: Target closed" %(
                     self.target_host, self.target_port))
+            if self.rec:
+                self.rec.write("'EOF']\n")
+                self.rec.close()
             raise
 
-    def do_proxy(self, target):
+    def do_proxy(self, client, target):
         """
         Proxy client WebSocket to normal target socket.
         """
         cqueue = []
-        c_pend = 0
+        cpartial = ""
         tqueue = []
-        rlist = [self.client, target]
+        rlist = [client, target]
+        tstart = int(time.time()*1000)
 
         while True:
             wlist = []
+            tdelta = int(time.time()*1000) - tstart
 
             if tqueue: wlist.append(target)
-            if cqueue or c_pend: wlist.append(self.client)
+            if cqueue: wlist.append(client)
             ins, outs, excepts = select(rlist, wlist, [], 1)
             if excepts: raise Exception("Socket exception")
 
@@ -186,32 +199,53 @@
                     tqueue.insert(0, dat[sent:])
                     self.traffic(".>")
 
+            if client in outs:
+                # Send queued target data to the client
+                dat = cqueue.pop(0)
+                sent = client.send(dat)
+                if sent == len(dat):
+                    self.traffic("<")
+                    if self.rec:
+                        self.rec.write("%s,\n" %
+                                repr("{%s{" % tdelta + dat[1:-1]))
+                else:
+                    cqueue.insert(0, dat[sent:])
+                    self.traffic("<.")
+
 
             if target in ins:
                 # Receive target data, encode it and queue for client
                 buf = target.recv(self.buffer_size)
                 if len(buf) == 0: raise self.EClose("Target closed")
 
-                cqueue.append(buf)
+                cqueue.append(self.encode(buf))
                 self.traffic("{")
 
-
-            if self.client in outs:
-                # Send queued target data to the client
-                c_pend = self.send_frames(cqueue)
-
-                cqueue = []
-
-
-            if self.client in ins:
+            if client in ins:
                 # Receive client data, decode it, and queue for target
-                bufs, closed = self.recv_frames()
-                tqueue.extend(bufs)
+                buf = client.recv(self.buffer_size)
+                if len(buf) == 0: raise self.EClose("Client closed")
 
-                if closed:
-                    # TODO: What about blocking on client socket?
-                    self.send_close()
-                    raise self.EClose(closed)
+                if buf == '\xff\x00':
+                    raise self.EClose("Client sent orderly close frame")
+                elif buf[-1] == '\xff':
+                    if buf.count('\xff') > 1:
+                        self.traffic(str(buf.count('\xff')))
+                    self.traffic("}")
+                    if self.rec:
+                        self.rec.write("%s,\n" %
+                                (repr("}%s}" % tdelta + buf[1:-1])))
+                    if cpartial:
+                        # Prepend saved partial and decode frame(s)
+                        tqueue.extend(self.decode(cpartial + buf))
+                        cpartial = ""
+                    else:
+                        # decode frame(s)
+                        tqueue.extend(self.decode(buf))
+                else:
+                    # Save off partial WebSockets frame
+                    self.traffic(".}")
+                    cpartial = cpartial + buf
 
 if __name__ == '__main__':
     usage = "\n    %prog [options]"
@@ -255,10 +289,9 @@
 
     # Parse host:port and convert ports to numbers
     if args[0].count(':') > 0:
-        opts.listen_host, opts.listen_port = args[0].rsplit(':', 1)
+        opts.listen_host, opts.listen_port = args[0].split(':')
     else:
         opts.listen_host, opts.listen_port = '', args[0]
-
     try:    opts.listen_port = int(opts.listen_port)
     except: parser.error("Error parsing listen port")
 
@@ -267,7 +300,7 @@
         opts.target_port = None
     else:
         if args[1].count(':') > 0:
-            opts.target_host, opts.target_port = args[1].rsplit(':', 1)
+            opts.target_host, opts.target_port = args[1].split(':')
         else:
             parser.error("Error parsing target")
         try:    opts.target_port = int(opts.target_port)
--- a/vnc.html
+++ b/vnc.html
@@ -2,7 +2,7 @@
 <html>
     <!-- 
     noVNC example: simple example using default UI
-    Copyright (C) 2011 Joel Martin
+    Copyright (C) 2010 Joel Martin
     Licensed under LGPL-3 (see LICENSE.txt)
     -->
     <head>
--- a/vnc_auto.html
+++ b/vnc_auto.html
@@ -2,7 +2,7 @@
 <html>
     <!-- 
     noVNC Example: Automatically connect on page load.
-    Copyright (C) 2011 Joel Martin
+    Copyright (C) 2010 Joel Martin
     Licensed under LGPL-3 (see LICENSE.txt)
 
     Connect parameters are provided in query string:
@@ -42,16 +42,6 @@
 
         var rfb;
 
-        function passwordRequired(rfb) {
-            var msg;
-            msg = '<form onsubmit="return setPassword();"';
-            msg += '  style="margin-bottom: 0px">';
-            msg += 'Password Required: ';
-            msg += '<input type=password size=10 id="password_input" class="VNC_status">';
-            msg += '<\/form>';
-            $D('VNC_status_bar').setAttribute("class", "VNC_status_warn");
-            $D('VNC_status').innerHTML = msg;
-        }
         function setPassword() {
             rfb.sendPassword($D('password_input').value);
             return false;
@@ -61,24 +51,39 @@
             return false;
         }
         function updateState(rfb, state, oldstate, msg) {
-            var s, sb, cad, level;
+            var s, sb, cad, klass;
             s = $D('VNC_status');
             sb = $D('VNC_status_bar');
             cad = $D('sendCtrlAltDelButton');
             switch (state) {
-                case 'failed':       level = "error";  break;
-                case 'fatal':        level = "error";  break;
-                case 'normal':       level = "normal"; break;
-                case 'disconnected': level = "normal"; break;
-                case 'loaded':       level = "normal"; break;
-                default:             level = "warn";   break;
+                case 'failed':
+                case 'fatal':
+                    klass = "VNC_status_error";
+                    break;
+                case 'normal':
+                    klass = "VNC_status_normal";
+                    break;
+                case 'disconnected':
+                case 'loaded':
+                    klass = "VNC_status_normal";
+                    break;
+                case 'password':
+                    msg = '<form onsubmit="return setPassword();"';
+                    msg += '  style="margin-bottom: 0px">';
+                    msg += 'Password Required: ';
+                    msg += '<input type=password size=10 id="password_input" class="VNC_status">';
+                    msg += '<\/form>';
+                    klass = "VNC_status_warn";
+                    break;
+                default:
+                    klass = "VNC_status_warn";
             }
 
             if (state === "normal") { cad.disabled = false; }
             else                    { cad.disabled = true; }
 
             if (typeof(msg) !== 'undefined') {
-                sb.setAttribute("class", "VNC_status_" + level);
+                sb.setAttribute("class", klass);
                 s.innerHTML = msg;
             }
         }
@@ -88,10 +93,9 @@
 
             $D('sendCtrlAltDelButton').onclick = sendCtrlAltDel;
 
-            document.title = unescape(WebUtil.getQueryVar('title', 'noVNC'));
-            token = WebUtil.getQueryVar('token');
-            host = window.location.hostname;
-            port = window.location.port;
+            host = WebUtil.getQueryVar('host', null);
+            port = WebUtil.getQueryVar('port', null);
+            token = WebUtil.getQueryVar('token', null);
             password = WebUtil.getQueryVar('password', '');
             if ((!host) || (!port)) {
                 updateState('failed',
@@ -104,11 +108,8 @@
                            'true_color':   WebUtil.getQueryVar('true_color', true),
                            'local_cursor': WebUtil.getQueryVar('cursor', true),
                            'shared':       WebUtil.getQueryVar('shared', true),
-                           'updateState':  updateState,
-                           'onPasswordRequired':  passwordRequired});
-
-            WebUtil.createCookie('token', token, 1)
-            rfb.connect(host, port, password);
+                           'updateState':  updateState});
+            rfb.connect(host, port, password, token);
         };
         </script>
 
